{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e00\u53f7\u6807\u9898 \u4e8c\u53f7\u6807\u9898 \u4e09\u53f7\u6807\u9898 \u94fe\u63a5\uff1a mkdocs.org \u81ea\u52a8\u94fe\u63a5\uff1a http://www.baidu.com \u9ad8\u4eae\uff1a hello world \u52a0\u7c97\u5f3a\u8c03\uff1a hello \u659c\u4f53\uff1a hello \u5206\u5272\u7ebf: \u4f60\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u7528\u4e09\u4e2a\u6216\u4ee5\u4e0a\u7684\u661f\u53f7*\u3001\u51cf\u53f7-\u3001\u5e95\u7ebf_\u6765\u5efa\u7acb\u4e00\u4e2a\u5206\u9694\u7ebf\uff0c\u884c\u5185\u4e0d\u80fd\u6709\u5176\u4ed6\u4e1c\u897f\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u661f\u53f7\u6216\u662f\u51cf\u53f7\u4e2d\u95f4\u63d2\u5165\u7a7a\u683c\u3002\u4e0b\u9762\u6bcf\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\u5efa\u7acb\u4e00\u6761\u5206\u9694\u7ebf - - - \u52a0\u7c97\u53c8\u659c\u4f53\uff1a hello \u65e0\u5e8f\u5217\u8868\uff1a * 1 * 2 * 3 \u6709\u5e8f\u5217\u8868: 1. 1 2. 2 3. 3 \u56fe\u7247\uff1a \u5f15\u7528\uff1a cite \u6bb5\u843d:\u6bcf\u884c\u6253\u4e00\u4e2aTAB \u8fd9\u662f\u4e00\u4e2a\u6bb5\u843d \u6587\u672c\u4e2d\u53ef\u76f4\u63a5\u7528html\u6807\u7b7e\uff0c\u4f46\u662f\u8981\u524d\u540e\u52a0\u4e0a\u7a7a\u884c: \u4ee3\u7801\uff1a ``` java public void main(); ```` \u8868\u683c\uff1a First Header | Second Header ------------- | ------------- Content Cell | Content Cell Content Cell | Content Cell Markdown\u5982\u4f55\u6dfb\u52a0\u591a\u4e2a\u7a7a\u884c\uff1f\u7b54\uff1a\u52a0\\ mkdocs\u53d1\u5e03\uff1a mkdocs gh-deploy","title":"\u9996\u9875"},{"location":"#_1","text":"","title":"\u4e00\u53f7\u6807\u9898"},{"location":"#_2","text":"","title":"\u4e8c\u53f7\u6807\u9898"},{"location":"#_3","text":"\u94fe\u63a5\uff1a mkdocs.org \u81ea\u52a8\u94fe\u63a5\uff1a http://www.baidu.com \u9ad8\u4eae\uff1a hello world \u52a0\u7c97\u5f3a\u8c03\uff1a hello \u659c\u4f53\uff1a hello \u5206\u5272\u7ebf: \u4f60\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u7528\u4e09\u4e2a\u6216\u4ee5\u4e0a\u7684\u661f\u53f7*\u3001\u51cf\u53f7-\u3001\u5e95\u7ebf_\u6765\u5efa\u7acb\u4e00\u4e2a\u5206\u9694\u7ebf\uff0c\u884c\u5185\u4e0d\u80fd\u6709\u5176\u4ed6\u4e1c\u897f\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u661f\u53f7\u6216\u662f\u51cf\u53f7\u4e2d\u95f4\u63d2\u5165\u7a7a\u683c\u3002\u4e0b\u9762\u6bcf\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\u5efa\u7acb\u4e00\u6761\u5206\u9694\u7ebf","title":"\u4e09\u53f7\u6807\u9898"},{"location":"#-","text":"\u52a0\u7c97\u53c8\u659c\u4f53\uff1a hello \u65e0\u5e8f\u5217\u8868\uff1a * 1 * 2 * 3 \u6709\u5e8f\u5217\u8868: 1. 1 2. 2 3. 3 \u56fe\u7247\uff1a \u5f15\u7528\uff1a cite \u6bb5\u843d:\u6bcf\u884c\u6253\u4e00\u4e2aTAB \u8fd9\u662f\u4e00\u4e2a\u6bb5\u843d \u6587\u672c\u4e2d\u53ef\u76f4\u63a5\u7528html\u6807\u7b7e\uff0c\u4f46\u662f\u8981\u524d\u540e\u52a0\u4e0a\u7a7a\u884c: \u4ee3\u7801\uff1a ``` java public void main(); ```` \u8868\u683c\uff1a First Header | Second Header ------------- | ------------- Content Cell | Content Cell Content Cell | Content Cell Markdown\u5982\u4f55\u6dfb\u52a0\u591a\u4e2a\u7a7a\u884c\uff1f\u7b54\uff1a\u52a0\\ mkdocs\u53d1\u5e03\uff1a mkdocs gh-deploy","title":"- - -"},{"location":"adb_input/","text":"The sources are: dpad keyboard mouse touchpad gamepad touchnavigation joystick touchscreen stylus trackball The commands and default sources are: text <string> (Default: touchscreen) keyevent [--longpress] <key code number or name> ... (Default: keyboard) tap <x> <y> (Default: touchscreen) swipe <x1> <y1> <x2> <y2> [duration(ms)] (Default: touchscreen) draganddrop <x1> <y1> <x2> <y2> [duration(ms)] (Default: touchscreen) press (Default: trackball) roll <dx> <dy> (Default: trackball) \u4e3e\u4e2a\u6817\u5b50\uff1a\u5c4f\u5e55\u9875\u9762\u5411\u4e0b\u6ed1\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff1a adb -d shell input touchscreen swip 100 0 100 900 600","title":"adb\u6a21\u62df\u5c4f\u5e55\u89e6\u6478"},{"location":"android_flavor/","text":"1\u3001gradle\u6253\u5305\u811a\u672c\u4e2d\u914d\u7f6eflavor \u6bcf\u4e00\u4e2a\u6e20\u9053\u91cd\u8d70\u4e00\u904d\u6253\u5305\u6d41\u7a0b\uff0c\u7f3a\u70b9\uff1a\u6162\uff0c\u9002\u7528\u4e8e\u6e20\u9053\u5c11\u7684\u573a\u666f\u6216\u8005\u4e0d\u540c\u6e20\u9053\u95f4\u6709\u4e0d\u540c\u8d44\u6e90(\u5982\u9875\u9762\u3001\u56fe\u7247\u7b49)\u7684\u573a\u666f\u3002 2\u3001\u57fa\u4e8ev1\u7b7e\u540d\u7684zip\u6458\u8981\u6e20\u9053\u5199\u5165\u65b9\u5f0f \u5229\u7528zip\u6587\u4ef6\u53ef\u4ee5\u6dfb\u52a0comment\uff08\u6458\u8981\uff09\u7684\u6570\u636e\u7ed3\u6784\u7279\u70b9\uff0c\u5728zip\u6587\u4ef6\u7684\u672b\u5c3e\u7684\u6458\u8981\u533a\u57df\u5199\u5165\u6e20\u9053\u4fe1\u606f\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u89e3\u538bzip\u6587\u4ef6\uff0c\u4e14v1\u7b7e\u540d\u673a\u5236\u4e0b\u4e0d\u9700\u8981\u91cd\u65b0\u7b7e\u540d\u3002 \u4f18\u70b9\uff1a\u5feb 3\u3001\u57fa\u4e8ev1\u7b7e\u540d\u7684META-INF\u6e20\u9053\u5199\u5165\u65b9\u5f0f \u5728apk\u6587\u4ef6(zip\u6587\u4ef6)\u7684META-INF\u76ee\u5f55\u4e0b\u5199\u5165\u540d\u79f0\u4e3a\u67d0\u4e2a\u6e20\u9053\u5b57\u7b26\u4e32\u7684\u7a7a\u767d\u6587\u4ef6\uff0c\u539f\u7406\u662f\u57fa\u4e8ev1\u7b7e\u540d\u673a\u5236\u4e0b\uff0cMETA-INF\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u6587\u4ef6\u4e0d\u9700\u8981\u91cd\u65b0\u7b7e\u540d\u3002 \u7f8e\u56e2\u8f83\u65e9\u4e4b\u524d\u7684\u6e20\u9053\u5199\u5165\u4f7f\u7528\u8be5\u65b9\u5f0f \u4f18\u70b9\uff1a\u5feb 4\u3001\u57fa\u4e8ev2\u7b7e\u540d\u7684\u6e20\u9053\u5199\u5165\u65b9\u5f0f \u57fa\u4e8eandroid v2\u7b7e\u540d\uff0c\u5728apk(zip\u683c\u5f0f)\u7684APK Signing Block\u533a\u5757\u4e2d\u52a0\u5165\u6e20\u9053\u4fe1\u606f\uff0c\u4e14apk\u4e0d\u9700\u8981\u91cd\u65b0\u7b7e\u540d\u3002\u4f18\u70b9\uff1a\u5feb \u539f\u7406\u53ef\u53c2\u8003\uff1a https://www.jianshu.com/p/ \u3001 https://www.jianshu.com/p/3fd8542f709a \u7f8e\u56e2\u5927\u90e8\u5206app\u4f7f\u7528\u8be5\u65b9\u5f0f\u6253\u6e20\u9053\u5305\u3002 \u5de5\u5177\u5f00\u6e90\u5730\u5740\uff1a https://github.com/Meituan-Dianping/walle \u53c2\u8003\uff1a https://zhuanlan.zhihu.com/p/26674427","title":"Android\u6e20\u9053\u5199\u5165\u65b9\u5f0f"},{"location":"android_flavor/#1gradleflavor","text":"\u6bcf\u4e00\u4e2a\u6e20\u9053\u91cd\u8d70\u4e00\u904d\u6253\u5305\u6d41\u7a0b\uff0c\u7f3a\u70b9\uff1a\u6162\uff0c\u9002\u7528\u4e8e\u6e20\u9053\u5c11\u7684\u573a\u666f\u6216\u8005\u4e0d\u540c\u6e20\u9053\u95f4\u6709\u4e0d\u540c\u8d44\u6e90(\u5982\u9875\u9762\u3001\u56fe\u7247\u7b49)\u7684\u573a\u666f\u3002","title":"1\u3001gradle\u6253\u5305\u811a\u672c\u4e2d\u914d\u7f6eflavor"},{"location":"android_flavor/#2v1zip","text":"\u5229\u7528zip\u6587\u4ef6\u53ef\u4ee5\u6dfb\u52a0comment\uff08\u6458\u8981\uff09\u7684\u6570\u636e\u7ed3\u6784\u7279\u70b9\uff0c\u5728zip\u6587\u4ef6\u7684\u672b\u5c3e\u7684\u6458\u8981\u533a\u57df\u5199\u5165\u6e20\u9053\u4fe1\u606f\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u89e3\u538bzip\u6587\u4ef6\uff0c\u4e14v1\u7b7e\u540d\u673a\u5236\u4e0b\u4e0d\u9700\u8981\u91cd\u65b0\u7b7e\u540d\u3002 \u4f18\u70b9\uff1a\u5feb","title":"2\u3001\u57fa\u4e8ev1\u7b7e\u540d\u7684zip\u6458\u8981\u6e20\u9053\u5199\u5165\u65b9\u5f0f"},{"location":"android_flavor/#3v1meta-inf","text":"\u5728apk\u6587\u4ef6(zip\u6587\u4ef6)\u7684META-INF\u76ee\u5f55\u4e0b\u5199\u5165\u540d\u79f0\u4e3a\u67d0\u4e2a\u6e20\u9053\u5b57\u7b26\u4e32\u7684\u7a7a\u767d\u6587\u4ef6\uff0c\u539f\u7406\u662f\u57fa\u4e8ev1\u7b7e\u540d\u673a\u5236\u4e0b\uff0cMETA-INF\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u6587\u4ef6\u4e0d\u9700\u8981\u91cd\u65b0\u7b7e\u540d\u3002 \u7f8e\u56e2\u8f83\u65e9\u4e4b\u524d\u7684\u6e20\u9053\u5199\u5165\u4f7f\u7528\u8be5\u65b9\u5f0f \u4f18\u70b9\uff1a\u5feb","title":"3\u3001\u57fa\u4e8ev1\u7b7e\u540d\u7684META-INF\u6e20\u9053\u5199\u5165\u65b9\u5f0f"},{"location":"android_flavor/#4v2","text":"\u57fa\u4e8eandroid v2\u7b7e\u540d\uff0c\u5728apk(zip\u683c\u5f0f)\u7684APK Signing Block\u533a\u5757\u4e2d\u52a0\u5165\u6e20\u9053\u4fe1\u606f\uff0c\u4e14apk\u4e0d\u9700\u8981\u91cd\u65b0\u7b7e\u540d\u3002\u4f18\u70b9\uff1a\u5feb \u539f\u7406\u53ef\u53c2\u8003\uff1a https://www.jianshu.com/p/ \u3001 https://www.jianshu.com/p/3fd8542f709a \u7f8e\u56e2\u5927\u90e8\u5206app\u4f7f\u7528\u8be5\u65b9\u5f0f\u6253\u6e20\u9053\u5305\u3002 \u5de5\u5177\u5f00\u6e90\u5730\u5740\uff1a https://github.com/Meituan-Dianping/walle \u53c2\u8003\uff1a https://zhuanlan.zhihu.com/p/26674427","title":"4\u3001\u57fa\u4e8ev2\u7b7e\u540d\u7684\u6e20\u9053\u5199\u5165\u65b9\u5f0f"},{"location":"android_onresult/","text":"","title":"Android onresult"},{"location":"android_safe/","text":"Intent \u5c3d\u91cf\u4f7f\u7528\u663e\u5f0fintent\uff0c\u5982\u679c\u53ef\u80fd\u6709\u591a\u4e2a\u5e94\u7528\u6765\u63a5\u6536\u4e00\u4e2aIntent\uff0c\u8bf7\u4f7f\u7528Intent Chooser\u3002 \u5728\u591a\u4e2a\u81ea\u5df1\u53ef\u7ba1\u7406\u7684\u5e94\u7528\u95f4\u5171\u4eab\u6570\u636e\uff0c\u8bf7\u52a0\u81ea\u5b9a\u4e49\u6743\u9650\u3002 xml <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.example.myapp\"> <permission android:name=\"my_custom_permission_name\" android:protectionLevel=\"signature\" /> <!--\u5177\u6709\u76f8\u540c\u7b7e\u540d\u7684app\uff0c\u624d\u53ef\u4ee5\u7533\u8bf7\u4f7f\u7528\u8be5\u6743\u9650--> \u5982\u679c\u4e0d\u5fc5\u8981\uff0c\u5173\u95ed\u7ec4\u4ef6\u5bfc\u51fa\u529f\u80fd xml <provider ... android:exported=\"false\"> <!-- Place child elements of <provider> here. --> </provider> \u5c3d\u91cf\u4f7f\u7528https\u534f\u8bae\u548c\u670d\u52a1\u7aef\u901a\u4fe1 \u7f51\u7edc\u5b89\u5168\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u8003\uff1a https://developer.android.com/training/articles/security-config.html?hl=zh-cn <manifest ... > <application android:networkSecurityConfig=\"@xml/network_security_config\" ... > <!-- Place child elements of <application> element here. --> </application> </manifest> <!--xml/network_security_config.xml--> <network-security-config> <domain-config cleartextTrafficPermitted=\"false\"> <domain includeSubdomains=\"true\">secure.example.com</domain> ... </domain-config> </network-security-config> <!--\u5f00\u53d1\u9636\u6bb5\uff0c\u53ef\u4fe1\u4efb\u7528\u6237\u5b89\u88c5\u7684\u8bc1\u4e66--> <network-security-config> <debug-overrides> <trust-anchors> <certificates src=\"user\" /> </trust-anchors> </debug-overrides> </network-security-config> \u5c0f\u5fc3\u5904\u7406webview\u4e0enative\u901a\u4fe1\uff0c\u53c2\u8003\uff1a webview \u4f7f\u7528FileProvider\u751f\u6210\u8d44\u6e90\u94fe\u63a5\uff0c\u5728\u591a\u4e2aapp\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5e76\u63a7\u5236\u597d\u8bfb\u5199\u6743\u9650 Intent viewPdfIntent = new Intent(Intent.ACTION_VIEW); viewPdfIntent.setData(Uri.parse(\"content://com.example/personal-info.pdf\")); // This flag gives the started app read access to the file. viewPdfIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); // Make sure that the user has a PDF viewer app installed on their device. if (viewPdfIntent.resolveActivity(getPackageManager()) != null) { startActivity(viewPdfIntent); } \u654f\u611f\u6570\u636e\u8981\u653e\u5728\u6c99\u76d2\u5b58\u50a8\u5185\uff0c\u5fc5\u8981\u65f6\u91c7\u53d6\u52a0\u5bc6\u63aa\u65bd\uff0c\u79d8\u94a5\u7b49\u654f\u611f\u6570\u636e\u4e5f\u53ef\u4ee5\u5b58\u50a8\u5230\u7cfb\u7edf KeyStore \u4e2d SQL\u53c2\u6570\u5316\u67e5\u8be2\uff0c\u907f\u514dSQL\u6ce8\u5165\u98ce\u9669 \u4e0d\u5411\u63a7\u5236\u53f0\u8f93\u51fa\u654f\u611f\u6570\u636e\u65e5\u5fd7","title":"\u5efa\u8bae"},{"location":"android_safe/#intent","text":"\u5c3d\u91cf\u4f7f\u7528\u663e\u5f0fintent\uff0c\u5982\u679c\u53ef\u80fd\u6709\u591a\u4e2a\u5e94\u7528\u6765\u63a5\u6536\u4e00\u4e2aIntent\uff0c\u8bf7\u4f7f\u7528Intent Chooser\u3002 \u5728\u591a\u4e2a\u81ea\u5df1\u53ef\u7ba1\u7406\u7684\u5e94\u7528\u95f4\u5171\u4eab\u6570\u636e\uff0c\u8bf7\u52a0\u81ea\u5b9a\u4e49\u6743\u9650\u3002 xml <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.example.myapp\"> <permission android:name=\"my_custom_permission_name\" android:protectionLevel=\"signature\" /> <!--\u5177\u6709\u76f8\u540c\u7b7e\u540d\u7684app\uff0c\u624d\u53ef\u4ee5\u7533\u8bf7\u4f7f\u7528\u8be5\u6743\u9650--> \u5982\u679c\u4e0d\u5fc5\u8981\uff0c\u5173\u95ed\u7ec4\u4ef6\u5bfc\u51fa\u529f\u80fd xml <provider ... android:exported=\"false\"> <!-- Place child elements of <provider> here. --> </provider> \u5c3d\u91cf\u4f7f\u7528https\u534f\u8bae\u548c\u670d\u52a1\u7aef\u901a\u4fe1 \u7f51\u7edc\u5b89\u5168\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u8003\uff1a https://developer.android.com/training/articles/security-config.html?hl=zh-cn <manifest ... > <application android:networkSecurityConfig=\"@xml/network_security_config\" ... > <!-- Place child elements of <application> element here. --> </application> </manifest> <!--xml/network_security_config.xml--> <network-security-config> <domain-config cleartextTrafficPermitted=\"false\"> <domain includeSubdomains=\"true\">secure.example.com</domain> ... </domain-config> </network-security-config> <!--\u5f00\u53d1\u9636\u6bb5\uff0c\u53ef\u4fe1\u4efb\u7528\u6237\u5b89\u88c5\u7684\u8bc1\u4e66--> <network-security-config> <debug-overrides> <trust-anchors> <certificates src=\"user\" /> </trust-anchors> </debug-overrides> </network-security-config> \u5c0f\u5fc3\u5904\u7406webview\u4e0enative\u901a\u4fe1\uff0c\u53c2\u8003\uff1a webview \u4f7f\u7528FileProvider\u751f\u6210\u8d44\u6e90\u94fe\u63a5\uff0c\u5728\u591a\u4e2aapp\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5e76\u63a7\u5236\u597d\u8bfb\u5199\u6743\u9650 Intent viewPdfIntent = new Intent(Intent.ACTION_VIEW); viewPdfIntent.setData(Uri.parse(\"content://com.example/personal-info.pdf\")); // This flag gives the started app read access to the file. viewPdfIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); // Make sure that the user has a PDF viewer app installed on their device. if (viewPdfIntent.resolveActivity(getPackageManager()) != null) { startActivity(viewPdfIntent); } \u654f\u611f\u6570\u636e\u8981\u653e\u5728\u6c99\u76d2\u5b58\u50a8\u5185\uff0c\u5fc5\u8981\u65f6\u91c7\u53d6\u52a0\u5bc6\u63aa\u65bd\uff0c\u79d8\u94a5\u7b49\u654f\u611f\u6570\u636e\u4e5f\u53ef\u4ee5\u5b58\u50a8\u5230\u7cfb\u7edf KeyStore \u4e2d SQL\u53c2\u6570\u5316\u67e5\u8be2\uff0c\u907f\u514dSQL\u6ce8\u5165\u98ce\u9669 \u4e0d\u5411\u63a7\u5236\u53f0\u8f93\u51fa\u654f\u611f\u6570\u636e\u65e5\u5fd7","title":"Intent"},{"location":"annotation/","text":"\u6982\u5ff5\uff1a APT(Annotation Processing Tool)\u5373\u6ce8\u89e3\u5904\u7406\u5668\uff0c\u662f\u4e00\u79cd\u5904\u7406\u6ce8\u89e3\u7684\u5de5\u5177\uff0c\u786e\u5207\u7684\u8bf4\u5b83\u662fjavac\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u5b83\u7528\u6765\u5728\u7f16\u8bd1\u65f6\u626b\u63cf\u548c\u5904\u7406\u6ce8\u89e3\u3002 \u6ce8\u89e3\u5904\u7406\u5668\u4ee5Java\u4ee3\u7801(\u6216\u8005\u7f16\u8bd1\u8fc7\u7684\u5b57\u8282\u7801)\u4f5c\u4e3a\u8f93\u5165\uff0c\u751f\u6210.java\u6587\u4ef6\u4f5c\u4e3a\u8f93\u51fa\u3002 \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u7f16\u8bd1\u671f\uff0c\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3\u751f\u6210.java\u6587\u4ef6\u3002 Android-apt\u662f\u7531\u4e00\u4f4d\u5f00\u53d1\u8005\u81ea\u5df1\u5f00\u53d1\u7684apt\u6846\u67b6\uff0c\u968f\u7740Android Gradle \u63d2\u4ef6 2.2 \u7248\u672c\u7684\u53d1\u5e03\uff0cAndroid Gradle \u63d2\u4ef6\u63d0\u4f9b\u4e86\u540d\u4e3a annotationProcessor \u7684\u529f\u80fd\u6765\u5b8c\u5168\u4ee3\u66ff android-apt \uff0c\u81ea\u6b64android-apt \u4f5c\u8005\u5728\u5b98\u7f51\u53d1\u8868\u58f0\u660e\u8bc1\u5b9e\u4e86\u540e\u7eed\u5c06\u4e0d\u4f1a\u7ee7\u7eed\u7ef4\u62a4 android-apt \uff0c\u5e76\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Android \u5b98\u65b9\u63d2\u4ef6 annotationProcessor\u3002 AnnotationProcessor\u5c31\u662fAPT\u5de5\u5177\u4e2d\u7684\u4e00\u79cd\uff0c\u662f google\u5f00\u53d1\u7684\u5185\u7f6e\u6846\u67b6\uff0c\u4e0d\u9700\u8981\u5f15\u5165\u3002 \u81ea\u5b9a\u4e49\u6ce8\u89e3\u5668 \u5b9a\u4e49\u4e00\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\uff0c\u9700\u8981\u7ee7\u627f\u81eaAbstractProcessor\u3002 package com.example; public class MyProcessor extends AbstractProcessor { @Override public synchronized void init(ProcessingEnvironment env){ } @Override public boolean process(Set<? extends TypeElement> annoations, RoundEnvironment env) { } @Override public Set<String> getSupportedAnnotationTypes() { } @Override public SourceVersion getSupportedSourceVersion() { } } init(ProcessingEnvironment env): \u6bcf\u4e00\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\u7c7b\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u51fd\u6570\u3002\u7136\u800c\u8fd9\u91cc\u6709\u4e00\u4e2a\u7279\u6b8a\u7684init()\u65b9\u6cd5\uff0c\u5b83\u4f1a\u88ab\u6ce8\u89e3\u5904\u7406\u5de5\u5177\u8c03\u7528\uff0c\u5e76\u8f93\u5165ProcessingEnviroment\u53c2\u6570\u3002ProcessingEnviroment\u63d0\u4f9b\u5f88\u591a\u6709\u7528\u7684\u5de5\u5177\u7c7b\u5982Elements, Types\u548cFiler\u7b49\u3002 process(Set< ? extends TypeElement> annotations, RoundEnvironment env): \u8fd9\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u4e3b\u51fd\u6570main()\u3002\u4f60\u5728\u8fd9\u91cc\u5199\u4f60\u7684\u626b\u63cf\u3001\u8bc4\u4f30\u548c\u5904\u7406\u6ce8\u89e3\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u751f\u6210Java\u6587\u4ef6\u3002\u8f93\u5165\u53c2\u6570RoundEnviroment\uff0c\u53ef\u4ee5\u8ba9\u4f60\u67e5\u8be2\u51fa\u5305\u542b\u7279\u5b9a\u6ce8\u89e3\u7684\u88ab\u6ce8\u89e3\u5143\u7d20\u3002 getSupportedAnnotationTypes(): \u8fd9\u91cc\u4f60\u5fc5\u987b\u6307\u5b9a\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\u662f\u6ce8\u518c\u7ed9\u54ea\u4e2a\u6ce8\u89e3\u7684\u3002\u6ce8\u610f\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u96c6\u5408\uff0c\u5305\u542b\u672c\u5904\u7406\u5668\u60f3\u8981\u5904\u7406\u7684\u6ce8\u89e3\u7c7b\u578b\u7684\u5408\u6cd5\u5168\u79f0\u3002 getSupportedSourceVersion(): \u7528\u6765\u6307\u5b9a\u4f60\u4f7f\u7528\u7684Java\u7248\u672c\u3002\u901a\u5e38\u8fd9\u91cc\u8fd4\u56deSourceVersion.latestSupported()\uff0c\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u8db3\u591f\u7684\u7406\u7531\u53ea\u652f\u6301Java 6\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8fd4\u56deSourceVersion.RELEASE_6\u3002 \u5728Java 7\u4e2d\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u6765\u4ee3\u66ffgetSupportedAnnotationTypes()\u548cgetSupportedSourceVersion() @SupportedSourceVersion(SourceVersion.latestSupported()) @SupportedAnnotationTypes({ // \u5408\u6cd5\u6ce8\u89e3\u5168\u540d\u7684\u96c6\u5408 }) public class MyProcessor extends AbstractProcessor { @Override public synchronized void init(ProcessingEnvironment env){ } @Override public boolean process(Set<? extends TypeElement> annoations, RoundEnvironment env) { } } \u53e6\u5916\u9700\u8981\u77e5\u9053\u7684\u662f\uff1a\u6ce8\u89e3\u5904\u7406\u5668\u662f\u8fd0\u884c\u5b83\u81ea\u5df1\u7684\u865a\u62df\u673aJVM\u4e2d\uff0cjavac\u542f\u52a8\u4e00\u4e2a\u5b8c\u6574Java\u865a\u62df\u673a\u6765\u8fd0\u884c\u6ce8\u89e3\u5904\u7406\u5668\u3002\u8fd9\u5bf9\u4f60\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u4f60\u5728\u5176\u4ed6java\u5e94\u7528\u4e2d\u4f7f\u7528\u7684\u7684\u4e1c\u897f\u3002 \u6ce8\u518c\u6ce8\u89e3\u5904\u7406\u5668 \u5982\u4f55\u5c06\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u5904\u7406\u5668MyProcessor\u6ce8\u518c\u5230javac\u4e2d\u5462\uff1f \u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u6211\u4eec\u7684\u6ce8\u89e3\u5904\u7406\u5668\u6253\u5305\u5230\u4e00\u4e2ajar\u6587\u4ef6\u4e2d\uff0c\u5176\u6b21\u5728\u8fd9\u4e2ajar\u4e2d\uff0c\u9700\u8981\u6253\u5305\u4e00\u4e2a\u7279\u5b9a\u7684\u6587\u4ef6 javax.annotation.processing.Processor \u5230META-INF/services\u8def\u5f84\u4e0b\u3002 \u4ee5\u4e0b\u662f\u8fd9\u4e2ajar\u7684\u5927\u81f4\u7ed3\u6784\u793a\u610f\u56fe\uff1a MyProcessor.jar com example MyProcessor.jar META-INF services javax.annotation.processing.Processor \u6253\u5305\u8fdbMyProcessor.jar\u4e2d\u7684 javax.annotation.processing.Processor \u7684\u5185\u5bb9\u662f\u6ce8\u89e3\u5904\u7406\u5668\u7684\u5408\u6cd5\u7684\u5168\u540d\u5217\u8868\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u6362\u884c\u5206\u5272\uff1a com.example.MyProcessor com.foo.OtherProcessor net.blabla.SpecialProcessor \u628aMyProcessor.jar\u653e\u5230\u4f60\u7684build path\u4e2d\uff0cjavac\u4f1a\u81ea\u52a8\u68c0\u67e5\u548c\u8bfb\u53d6javax.annotation.processing.Processor\u4e2d\u7684\u5185\u5bb9\uff0c\u5e76\u4e14\u6ce8\u518cMyProcessor\u7b49\u4f5c\u4e3a\u6ce8\u89e3\u5904\u7406\u5668\u3002 Google\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63d2\u4ef6\u6765\u5e2e\u52a9\u6211\u4eec\u66f4\u65b9\u4fbf\u7684\u6ce8\u518c\u6ce8\u89e3\u5904\u7406\u5668\uff0c@AutoService\u6ce8\u89e3\u53ef\u4ee5\u65b9\u4fbf\u7684\u751f\u6210 META-INF/services/javax.annotation.processing.Processor\u4e2d\u6ce8\u89e3\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u4f60\u53ea\u9700\u8981\u5bfc\u5165\u5bf9\u5e94\u7684\u4f9d\u8d56\u5305\uff0c\u5728\u81ea\u5b9a\u4e49\u7684Processor\u7c7b\u4e0a\u65b9\u6dfb\u52a0@AutoService(Processor.class)\u5373\u53ef\uff0c\u5982\u4e0b: \u5bfc\u5165\u4f9d\u8d56\u5305 compile 'com.google.auto.service:auto-service:1.0-rc2' \u6dfb\u52a0\u58f0\u660e @AutoService(Processor.class) public class MyProcessor extends AbstractProcessor { ... } \u4f7f\u7528\u6ce8\u89e3\u5904\u7406\u5668 \u6dfb\u52a0\u5904\u7406\u58f0\u660e\uff1a annotationProcessor project(':xxx-compiler') \u5b9e\u8df5\u4f8b\u5b50 1\u3001\u5047\u8bbe\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6ce8\u89e3\uff0c\u53eb@Factory\uff0c\u7528\u6765\u751f\u4ea7\u4e00\u4e9b\u4ea7\u54c1\u3002@Factory\u6ce8\u89e3\u7684\u53c2\u6570\u662ftype\u548cid\uff0c\u5206\u522b\u8868\u793a\u4ea7\u54c1\u7684\u5177\u4f53\u7c7b\u578b\u548c\u4ea7\u54c1id\u3002 /** \u5143\u6ce8\u89e3\uff0c\u662f\u653e\u5728\u88ab\u5b9a\u4e49\u7684\u4e00\u4e2a\u6ce8\u89e3\u7c7b\u7684\u524d\u9762 \uff0c\u662f\u5bf9\u6ce8\u89e3\u4e00\u79cd\u9650\u5236\u3002 @Target : \u7528\u6765\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ef\u4ee5\u88ab\u58f0\u660e\u5728\u54ea\u4e9b\u5143\u7d20\u4e4b\u524d\uff1a ElementType.TYPE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u524d\u3002 ElementType.FIELD\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u7684\u5b57\u6bb5\u524d\u3002 ElementType.METHOD\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\u524d\u3002 ElementType.PARAMETER\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u65b9\u6cd5\u53c2\u6570\u524d\u3002 ElementType.CONSTRUCTOR\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u524d\u3002 ElementType.LOCAL_VARIABLE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u524d\u3002 ElementType.ANNOTATION_TYPE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u6ce8\u89e3\u7c7b\u578b\u524d\u3002 ElementType.PACKAGE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u5305\u540d\u524d\u3002 @Retention \uff1a\u7528\u6765\u8bf4\u660e\u8be5\u6ce8\u89e3\u7c7b\u7684\u751f\u547d\u5468\u671f\u3002\u5b83\u6709\u4ee5\u4e0b\u4e09\u4e2a\u53c2\u6570\uff1a RetentionPolicy.SOURCE\uff1a \u6ce8\u89e3\u53ea\u4fdd\u7559\u5728\u6e90\u6587\u4ef6\u4e2d RetentionPolicy.CLASS\uff1a \u6ce8\u89e3\u4fdd\u7559\u5728class\u6587\u4ef6\u4e2d\uff0c\u5728\u52a0\u8f7d\u5230JVM\u865a\u62df\u673a\u65f6\u4e22\u5f03 RetentionPolicy.RUNTIME\uff1a\u6ce8\u89e3\u4fdd\u7559\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u5f97\u5b9a\u4e49\u5728\u67d0\u4e2a\u7c7b\u4e0a\u7684\u6240\u6709\u6ce8\u89e3\u3002 */ @Target(ElementType.TYPE) //\u8be5\u6ce8\u89e3\u53ea\u80fd\u7528\u5728\u7c7b\u4e0a @Retention(RetentionPolicy.CLASS)//\u8be5\u6ce8\u89e3\u4fdd\u7559\u5728class\u6587\u4ef6\u4e0a public @interface Factory { /** * \u5de5\u5382\u7684\u540d\u5b57 */ Class type(); /** * \u7528\u6765\u8868\u793a\u751f\u6210\u54ea\u4e2a\u5bf9\u8c61\u7684\u552f\u4e00id */ String id(); } 2\u3001\u73b0\u5728\u6211\u4eec\u4f7f\u7528@Factory\u6ce8\u89e3\u4e00\u4e9b\u4ea7\u54c1\uff0c\u5047\u8bbe\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u4e2aMeal\u7c7b\u578b\u7684\u4ea7\u54c1\uff1aMargheritaPizza\uff08\u4e00\u79cd\u62ab\u8428\uff09\u548cTiramisu\uff08\u63d0\u62c9\u7c73\u82cf\uff09 @Factory( id = \"Margherita\", type = Meal.class ) public class MargheritaPizza implements Meal { @Override public float getPrice() { return 6f; } } @Factory( id = \"Tiramisu\", type = Meal.class ) public class Tiramisu implements Meal { @Override public float getPrice() { return 4.5f; } } 3\u3001\u6211\u4eec\u5e0c\u671b\u81ea\u52a8\u751f\u6210\u8fd9\u6837\u4e00\u4e2aFactory\u5de5\u5382\u7c7b\u53ca\u5de5\u5382\u65b9\u6cd5\uff0c\u80fd\u591f\u901a\u8fc7\u4ea7\u54c1id\u751f\u4ea7\u5bf9\u5e94\u7684\u4ea7\u54c1\uff1a public class MealFactory { public Meal create(String id) { if (id == null) { throw new IllegalArgumentException(\"id is null!\"); } if (\"Tiramisu\".equals(id)) { return new Tiramisu(); } if (\"Margherita\".equals(id)) { return new MargheritaPizza(); } throw new IllegalArgumentException(\"Unknown id = \" + id); } } \u6709\u4e86\u8fd9\u4e2aMealFactory\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u4e00\u5bb6\u62ab\u8428\u5e97\u4e86\uff08\u867d\u7136\u76ee\u524d\u53ea\u80fd\u63d0\u4f9b2\u79cd\u98df\u7269\uff0c\u4f46\u662f\u540e\u7eed\u8fd8\u53ef\u4ee5\u52a0) public class PizzaStore { private MealFactory factory = new MealFactory(); public Meal order(String mealName) { return factory.create(mealName); } public static void main(String[] args) throws IOException { PizzaStore pizzaStore = new PizzaStore(); Meal meal = pizzaStore.order(readConsole()); System.out.println(\"Bill: $\" + meal.getPrice()); } } 4\u3001\u4e3a\u4e86\u5b9e\u73b0MealFactory\u7c7b\u81ea\u52a8\u751f\u6210\uff0c\u6211\u4eec\u4f7f\u7528\u6ce8\u89e3\u5904\u7406\u5668\u6765\u5904\u7406\u3002\u5b9a\u4e49\u4e00\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\u53eb FactoryProcessor\u3002 @AutoService(Processor.class)//google\u7684\u6ce8\u89e3 public class FactoryProcessor extends AbstractProcessor { private Types typeUtils; private Elements elementUtils; private Filer filer; private Messager messager; @Override public synchronized void init(ProcessingEnvironment processingEnv) { super.init(processingEnv); /** \u5728init()\u4e2d\u6211\u4eec\u83b7\u5f97\u5982\u4e0b\u5f15\u7528\uff1a TypeUtils\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406TypeMirror\u7684\u5de5\u5177\u7c7b\uff1b ElementUtils\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406Element\u7684\u5de5\u5177\u7c7b\uff1b Filer\uff1a\u4f7f\u7528Filer\u4f60\u53ef\u4ee5\u521b\u5efa\u6587\u4ef6\uff1b Messager\uff1a\u53ef\u4ee5\u7528\u6765\u6253\u5370\u65e5\u5fd7\uff1b */ typeUtils = processingEnv.getTypeUtils(); elementUtils = processingEnv.getElementUtils(); filer = processingEnv.getFiler(); messager = processingEnv.getMessager(); } @Override public Set<String> getSupportedAnnotationTypes() { Set<String> annotations = new LinkedHashSet<String>(); annotations.add(Factory.class.getCanonicalName());//\u53ea\u5904\u7406@Factory\u6ce8\u89e3 return annotations; } @Override public SourceVersion getSupportedSourceVersion() { return SourceVersion.latestSupported(); } @Override public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) { ... return true; } } Element\u662f\u4ec0\u4e48\uff1f \u5728\u6ce8\u89e3\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u626b\u63cf\u6240\u6709\u7684Java\u6e90\u6587\u4ef6\u3002\u6e90\u4ee3\u7801\u7684\u6bcf\u4e00\u4e2a\u90e8\u5206\u90fd\u662f\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684Element\u3002\u6362\u53e5\u8bdd\u8bf4\uff1aElement\u4ee3\u8868\u7a0b\u5e8f\u7684\u5143\u7d20\uff0c\u4f8b\u5982\u5305\u3001\u7c7b\u6216\u8005\u65b9\u6cd5\u3002\u6bcf\u4e2aElement\u4ee3\u8868\u4e00\u4e2a\u9759\u6001\u7684\u3001\u8bed\u8a00\u7ea7\u522b\u7684\u6784\u4ef6\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6ce8\u91ca\u6765\u8bf4\u660e\u8fd9\u4e2a\uff1a package com.example; // PackageElement public class Foo { // TypeElement private int a; // VariableElement private Foo other; // VariableElement public Foo () {} // ExecuteableElement public void setA ( // ExecuteableElement int newA // VariableElement ) {} } Element\u662f\u62bd\u8c61\u7684\u7ed3\u70b9\uff0c\u5c31\u50cfXML\u89e3\u91ca\u5668\u4e00\u6837\uff0c\u6709\u4e00\u4e9b\u7c7b\u4f3cDOM\u7684\u5143\u7d20\u3002\u4f60\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5143\u7d20\u5bfc\u822a\u5230\u5b83\u7684\u7236\u6216\u8005\u5b50\u5143\u7d20\u4e0a\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u5982\u4f60\u6709\u4e00\u4e2a Foo \u7c7b\u7684TypeElement\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u904d\u5386\u5b83\u7684\u5b69\u5b50\uff0c\u5982\u4e0b\uff1a TypeElement fooClass = ... ; for (Element e : fooClass.getEnclosedElements()){ // iterate over children Element parent = e.getEnclosingElement(); // parent == fooClass } TypeElement TypeElement\u4ee3\u8868\u7684\u662f\u6e90\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5143\u7d20\uff0c\u4f46\u662fTypeElement\u5e76\u4e0d\u5305\u542b\u7c7b\u672c\u8eab\u7684\u4fe1\u606f\uff0c\u4f60\u53ef\u4ee5\u4eceTypeElement\u4e2d\u83b7\u53d6\u7c7b\u7684\u540d\u5b57\uff0c\u4f46\u662f\u4f60\u83b7\u53d6\u4e0d\u5230\u7c7b\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5b83\u7684\u7236\u7c7b\u3002\u8fd9\u79cd\u4fe1\u606f\u9700\u8981\u901a\u8fc7TypeMirror\u83b7\u53d6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528elements.asType()\u83b7\u53d6\u5143\u7d20\u7684TypeMirror\u3002 5\u3001\u73b0\u5728FactoryProcessor\u5269\u4e0b\u4e00\u4e2a\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u6ca1\u6709\u5b9e\u73b0\uff0c\u5c31\u662fprocess\u65b9\u6cd5\uff0c\u4f60\u6240\u505a\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u5e94\u8be5\u4ece\u8fd9\u4e2a\u65b9\u6cd5\u5f00\u59cb\u3002 \u7b2c\u4e00\u6b65\u5de5\u4f5c\u5148\u626b\u63cf@Factory\u6ce8\u89e3 @Override public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) { // \u904d\u5386\u6240\u6709\u88ab\u6ce8\u89e3\u4e86@Factory\u7684\u5143\u7d20 for (Element annotatedElement : roundEnv.getElementsAnnotatedWith(Factory.class)) { // \u68c0\u67e5\u88ab\u6ce8\u89e3\u4e3a@Factory\u7684\u5143\u7d20\u662f\u5426\u662f\u4e00\u4e2a\u7c7b if (annotatedElement.getKind() != ElementKind.CLASS) { //\u6253\u5370\u9519\u8bef\u4fe1\u606f\uff0c\u975e\u5173\u952e\u6027\u9519\u8bef\u6700\u597d\u4e0d\u8981\u629b\u5f02\u5e38 error(annotatedElement, \"Only classes can be annotated with @%s\", Factory.class.getSimpleName()); continue; } ... } } private void error(Element e, String msg, Object... args) { messager.printMessage( Diagnostic.Kind.ERROR, String.format(msg, args), e); } \u5224\u65ad\u662f\u4e0d\u662f\u7c7b\uff0c\u80fd\u7528! (annotatedElement instanceof TypeElement) \u5417\uff1f\u8fd9\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u63a5\u53e3\uff08interface\uff09\u7c7b\u578b\u4e5f\u662fTypeElement\u3002\u6240\u4ee5\u5728\u6ce8\u89e3\u5904\u7406\u5668\u4e2d\uff0c\u6211\u4eec\u8981\u907f\u514d\u4f7f\u7528instanceof\uff0c\u800c\u662f\u914d\u5408TypeMirror\u4f7f\u7528ElementKind\u6216\u8005TypeKind\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u8fd9\u4e9b\u88ab\u6ce8\u89e3\u5728\u7c7b\u4e0a\u7684@Factory\u6ce8\u89e3\u5bf9\u8c61(TypeElement)\u4e86\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8981\u89e3\u6790\u6ce8\u89e3\u91cc\u7684\u53c2\u6570\u4e86\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u7c7bFactoryAnnotatedClass\u6765\u8bb0\u5f55\u89e3\u6790\u540e\u7684\u53c2\u6570\uff0c\u76f8\u5173\u7684\u89e3\u6790\u5de5\u4f5c\u653e\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\uff1a public class FactoryAnnotatedClass { private TypeElement annotatedClassElement; private String qualifiedSuperClassName; private String simpleTypeName; private String id; public FactoryAnnotatedClass(TypeElement classElement) throws IllegalArgumentException { this.annotatedClassElement = classElement; //\u83b7\u53d6\u7c7b\u7684Factory\u6ce8\u89e3 Factory annotation = classElement.getAnnotation(Factory.class); //\u4ece\u6ce8\u89e3\u83b7\u53d6id\u53c2\u6570 id = annotation.id(); if (StringUtils.isEmpty(id)) { throw new IllegalArgumentException( String.format(\"id() in @%s for class %s is null or empty! that's not allowed\", Factory.class.getSimpleName(), classElement.getQualifiedName().toString())); } //\u83b7\u53d6type\u53c2\u6570 try { Class<?> clazz = annotation.type();//xxx.yyy.Meal.class qualifiedSuperClassName = clazz.getCanonicalName();//xxx.yyy.Meal simpleTypeName = clazz.getSimpleName();//Meal } catch (MirroredTypeException mte) { /** annotation.type()\u8fd4\u56deClass\u5bf9\u8c61\uff0c\u53ef\u80fd\u53d1\u751fMirroredTypeException\u5f02\u5e38\u3002 \u90a3\u4ec0\u4e48\u65f6\u5019\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u5462\uff1f \u7b54\uff1a\u56e0\u4e3a\u6ce8\u89e3\u5904\u7406\u662f\u5728\u7f16\u8bd1Java\u6e90\u4ee3\u7801\u4e4b\u524d\u3002\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a 1\u3001\u8fd9\u4e2a\u7c7b\u5df2\u7ecf\u88ab\u7f16\u8bd1\uff0c\u4f8b\u5982\u7b2c\u4e09\u65b9.jar\u4e2d\u7684\u7c7b\uff0c\u5df2\u7ecf\u5305\u542b\u5df2\u7f16\u8bd1\u7684\u88ab@Factory\u6ce8\u89e3.class\u6587\u4ef6\uff0c\u8fd9\u65f6\u4e0d\u4f1a\u53d1\u751f\u5f02\u5e38\u3002 2\u3001\u8fd9\u4e2a\u7c7b\u8fd8\u672a\u88ab\u7f16\u8bd1\uff0c\u76f4\u63a5\u83b7\u53d6Class\u4f1a\u629b\u51faMirroredTypeException\u5f02\u5e38\uff0c\u5355\u5e78\u8fd0\u7684\u662f\uff0c MirroredTypeException\u5305\u542b\u4e00\u4e2aTypeMirror\uff0c\u5b83\u8868\u793a\u6211\u4eec\u672a\u7f16\u8bd1\u7c7b\u3002 \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5b83\u5fc5\u5b9a\u662f\u4e00\u4e2a\u7c7b\u7c7b\u578b\uff08\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u68c0\u67e5\u8fc7\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f3a\u5236\u8f6c\u6362\u4e3aDeclaredType\uff0c \u7136\u540e\u8bfb\u53d6TypeElement\u6765\u83b7\u53d6\u5408\u6cd5\u7684\u540d\u5b57 */ DeclaredType classTypeMirror = (DeclaredType) mte.getTypeMirror(); TypeElement classTypeElement = (TypeElement) classTypeMirror.asElement(); qualifiedSuperClassName = classTypeElement.getQualifiedName().toString(); simpleTypeName = classTypeElement.getSimpleName().toString(); } } /** * \u83b7\u53d6\u5728{@link Factory#id()}\u4e2d\u6307\u5b9a\u7684id * return the id */ public String getId() { return id; } /** * \u83b7\u53d6\u5728{@link Factory#type()}\u6307\u5b9a\u7684\u7c7b\u578b\u5408\u6cd5\u5168\u540d * * @return qualified name */ public String getQualifiedFactoryGroupName() { return qualifiedSuperClassName; } /** * \u83b7\u53d6\u5728 {@link Factory#type()} \u4e2d\u6307\u5b9a\u7684\u7c7b\u578b\u7684\u7b80\u5355\u540d\u5b57 * * @return qualified name */ public String getSimpleFactoryGroupName() { return simpleTypeName; } /** * \u83b7\u53d6\u88ab@Factory\u6ce8\u89e3\u7684\u539f\u59cb\u5143\u7d20 */ public TypeElement getTypeElement() { return annotatedClassElement; } } \u73b0\u5728\u518d\u5efa\u7acb\u4e00\u4e2a\u6570\u636e\u7ed3\u6784 FactoryGroupedClasses \uff0c\u5c06 FactoryAnnotatedClass \u6309Map\u7ed3\u6784\u7ec4\u7ec7\u8d77\u6765\uff0c\u4e5f\u5c31\u662f\u505a\u4e00\u4e2a id --> FactoryAnnotatedClass \u7684\u6620\u5c04\u5173\u7cfb\uff1a \u6bd4\u5982\uff1a \"Tiramisu\" -> FactoryAnnotatedClass@1234 \"Margherita\" -> FactoryAnnotatedClass@4321 public class FactoryGroupedClasses { private String qualifiedClassName; private Map<String, FactoryAnnotatedClass> itemsMap = new LinkedHashMap<String, FactoryAnnotatedClass>(); public FactoryGroupedClasses(String qualifiedClassName) { this.qualifiedClassName = qualifiedClassName; } public void add(FactoryAnnotatedClass toInsert) throws IdAlreadyUsedException { FactoryAnnotatedClass existing = itemsMap.get(toInsert.getId()); if (existing != null) { throw new IdAlreadyUsedException(existing); } itemsMap.put(toInsert.getId(), toInsert); } public void generateCode(Elements elementUtils, Filer filer) throws IOException { ... } } \u73b0\u5728\u6211\u4eec\u6765\u628aprocess\u65b9\u6cd5\u8865\u5145\u5b8c\uff0c\u56e0\u4e3aFactory\u6ce8\u89e3\u91cc\u7684type\u53ef\u80fd\u4e0d\u6b62\u6709Meal\u8fd9\u4e00\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2amap\u7ed3\u6784\uff08factoryClasses\uff09\u6765\u5f52\u7c7b\uff0c\u6bd4\u5982\uff1a \"Meal\" --> FactoryGroupedClasses@5678 \"Drink\" --> FactoryGroupedClasses@8765 private Map<String, FactoryGroupedClasses> factoryClasses = new LinkedHashMap<String, FactoryGroupedClasses>(); @Override public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) { for (Element annotatedElement : roundEnv.getElementsAnnotatedWith(Factory.class)) { ... // \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5b83\u662fElementKind.CLASS\u7c7b\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f3a\u5236\u8f6c\u6362 TypeElement typeElement = (TypeElement) annotatedElement; try { FactoryAnnotatedClass annotatedClass = new FactoryAnnotatedClass(typeElement); // may throws IllegalArgumentException if (!isValidClass(annotatedClass)) {//\u989d\u5916\u7684\u5176\u4ed6\u68c0\u67e5 continue; } // \u6240\u6709\u68c0\u67e5\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u53ef\u4ee5\u6dfb\u52a0\u4e86 FactoryGroupedClasses factoryClass = factoryClasses.get(annotatedClass.getQualifiedFactoryGroupName()); if (factoryClass == null) { String qualifiedGroupName = annotatedClass.getQualifiedFactoryGroupName(); factoryClass = new FactoryGroupedClasses(qualifiedGroupName); factoryClasses.put(qualifiedGroupName, factoryClass); } // \u5982\u679c\u548c\u5176\u4ed6\u7684@Factory\u6807\u6ce8\u7684\u7c7b\u7684id\u76f8\u540c\u51b2\u7a81\uff0c\u629b\u51faIdAlreadyUsedException\u5f02\u5e38 factoryClass.add(annotatedClass); } catch (IllegalArgumentException e) { // @Factory.id()\u4e3a\u7a7a --> \u6253\u5370\u9519\u8bef\u4fe1\u606f error(typeElement, e.getMessage()); continue; } catch (IdAlreadyUsedException e) { FactoryAnnotatedClass existing = e.getExisting(); // \u5df2\u7ecf\u5b58\u5728 error(annotatedElement, \"Conflict: The class %s is annotated with @%s with id ='%s' but %s already uses the same id\", typeElement.getQualifiedName().toString(), Factory.class.getSimpleName(), existing.getTypeElement().getQualifiedName().toString()); continue; } try { for (FactoryGroupedClasses factoryClass : factoryClasses.values()) { //\u751f\u6210\u4ee3\u7801 factoryClass.generateCode(elementUtils, filer); } } catch (IOException e) { error(null, e.getMessage()); } //\u52a1\u5fc5\u6e05\u7a7a\u6210\u5458\u53d8\u91cf\u7f13\u5b58factoryClasses factoryClasses.clear(); return true; } } private boolean isValidClass(FactoryAnnotatedClass item) { // \u8f6c\u6362\u4e3aTypeElement, \u542b\u6709\u66f4\u591a\u7279\u5b9a\u7684\u65b9\u6cd5 TypeElement classElement = item.getTypeElement(); // \u68c0\u67e5\u662f\u5426\u662fpublic\u7684\u7c7b if (!classElement.getModifiers().contains(Modifier.PUBLIC)) { error(classElement, \"The class %s is not public.\", classElement.getQualifiedName().toString()); return false; } // \u68c0\u67e5\u662f\u5426\u662f\u62bd\u8c61\u7684 if (classElement.getModifiers().contains(Modifier.ABSTRACT)) { error(classElement, \"The class %s is abstract. You can't annotate abstract classes with @%\", classElement.getQualifiedName().toString(), Factory.class.getSimpleName()); return false; } // \u68c0\u67e5\u7ee7\u627f\u5173\u7cfb: \u5fc5\u987b\u662f@Factory.type()\u6307\u5b9a\u7684\u7c7b\u578b\u5b50\u7c7b\uff0c\u6bd4\u5982\uff1aTiramisu\u5fc5\u987b\u662fMeal\u7c7b\u578b\u7684 TypeElement superClassElement = elementUtils.getTypeElement(item.getQualifiedFactoryGroupName());//Meal if (superClassElement.getKind() == ElementKind.INTERFACE) {//\u5982\u679cMeal\u662f\u4e2a\u63a5\u53e3 // \u68c0\u67e5\u63a5\u53e3\u662f\u5426\u5b9e\u73b0\u4e86 if (!classElement.getInterfaces().contains(superClassElement.asType())) {//Tiramisu\u7684\u63a5\u53e3\u4e2d\u662f\u5426\u5305\u542bMeal\u63a5\u53e3 error(classElement, \"The class %s annotated with @%s must implement the interface %s\", classElement.getQualifiedName().toString(), Factory.class.getSimpleName(), item.getQualifiedFactoryGroupName()); return false; } } else {//\u5982\u679cMeal\u662f\u4e2a\u7c7b // \u5faa\u73af\u68c0\u67e5\u7236\u7c7b TypeElement currentClass = classElement; while (true) { TypeMirror superClassType = currentClass.getSuperclass();//\u7236\u7c7b if (superClassType.getKind() == TypeKind.NONE) { // \u5230\u8fbe\u4e86\u57fa\u672c\u7c7b\u578b(java.lang.Object), \u6240\u4ee5\u9000\u51fa error(classElement, \"The class %s annotated with @%s must inherit from %s\", classElement.getQualifiedName().toString(), Factory.class.getSimpleName(), item.getQualifiedFactoryGroupName()); return false; } if (superClassType.toString().equals(item.getQualifiedFactoryGroupName())) { // \u627e\u5230\u4e86\u8981\u6c42\u7684\u7236\u7c7b break; } // \u5728\u7ee7\u627f\u6811\u4e0a\u7ee7\u7eed\u5411\u4e0a\u641c\u5bfb currentClass = (TypeElement) typeUtils.asElement(superClassType); } } // \u68c0\u67e5\u662f\u5426\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u516c\u5f00\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u4ee3\u7801\u4e2d\u8981\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u6bd4\u5982new Tiramisu() for (Element enclosed : classElement.getEnclosedElements()) { if (enclosed.getKind() == ElementKind.CONSTRUCTOR) { ExecutableElement constructorElement = (ExecutableElement) enclosed; if (constructorElement.getParameters().size() == 0 && constructorElement.getModifiers() .contains(Modifier.PUBLIC)) { // \u627e\u5230\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 return true; } } } // \u6ca1\u6709\u627e\u5230\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 error(classElement, \"The class %s must provide an public empty default constructor\", classElement.getQualifiedName().toString()); return false; } \u73b0\u5728\u89e3\u6790\u5de5\u4f5c\u7ed3\u675f\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u751f\u6210\u5bf9\u5e94\u7684java\u4ee3\u7801\u4e86\uff0c\u6211\u4eec\u6765\u5b9e\u73b0FactoryGroupedClassesFactoryGroupedClasses\u4e2d\u9057\u7559\u7684generateCode\u65b9\u6cd5\u3002 \u8fd9\u91cc\u4f7f\u7528 javapoet \u52a8\u6001\u751f\u6210java\u6e90\u6587\u4ef6\uff1a private static final String SUFFIX = \"Factory\"; public void generateCode(Elements elementUtils, Filer filer) throws IOException { TypeElement superClassName = elementUtils.getTypeElement(qualifiedClassName);//Meal String factoryClassName = superClassName.getSimpleName() + SUFFIX;//\"MealFactory\" MethodSpec.Builder methodSpecBuilder = MethodSpec.methodBuilder(\"create\")//public Meal create(String id) .addModifiers(Modifier.PUBLIC) .addParameter(ParameterSpec.builder(String.class, \"id\").build()) .returns(TypeName.get(superClassName.asType())); CodeBlock.Builder toStringCodeBuilder = CodeBlock.builder(); toStringCodeBuilder.beginControlFlow(\"if (id == null)\"); toStringCodeBuilder.add(CodeBlock.of(\"throw new IllegalArgumentException(\\\"id is null!\\\");\\n\")); toStringCodeBuilder.endControlFlow(); methodSpecBuilder.addCode(toStringCodeBuilder.build()); for (FactoryAnnotatedClass item : itemsMap.values()) { toStringCodeBuilder = CodeBlock.builder(); toStringCodeBuilder.beginControlFlow(\"if ($S.equals(id))\", item.getId()); toStringCodeBuilder.add(CodeBlock.of(\"return new $T();\\n\", item.getTypeElement())); toStringCodeBuilder.endControlFlow(); methodSpecBuilder.addCode(toStringCodeBuilder.build()); } methodSpecBuilder.addCode(CodeBlock.of(\"throw new IllegalArgumentException(\\\"Unknown id = \\\" + id);\\n\")); TypeSpec typeSpec = TypeSpec.classBuilder(factoryClassName) .addModifiers(Modifier.PUBLIC) .addMethod(methodSpecBuilder.build()) .build(); JavaFile.builder(\"com.example.annotation\", typeSpec)//\u751f\u6210com.example.annotation.MealFactory .build().writeTo(filer); } \u6700\u540e\u662f\u6d4b\u8bd5\u4ee3\u7801\uff1a public class Test { public static void main(String[] args) { System.out.println(new MealFactory().create(\"Tiramisu\").getPrice()); } } \u5b8c\u6574\u4ee3\u7801\uff1a https://github.com/qylk/MyAnnotationTest/tree/master","title":"Annotation\u6ce8\u89e3\u5904\u7406\u5668"},{"location":"annotation/#_1","text":"APT(Annotation Processing Tool)\u5373\u6ce8\u89e3\u5904\u7406\u5668\uff0c\u662f\u4e00\u79cd\u5904\u7406\u6ce8\u89e3\u7684\u5de5\u5177\uff0c\u786e\u5207\u7684\u8bf4\u5b83\u662fjavac\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u5b83\u7528\u6765\u5728\u7f16\u8bd1\u65f6\u626b\u63cf\u548c\u5904\u7406\u6ce8\u89e3\u3002 \u6ce8\u89e3\u5904\u7406\u5668\u4ee5Java\u4ee3\u7801(\u6216\u8005\u7f16\u8bd1\u8fc7\u7684\u5b57\u8282\u7801)\u4f5c\u4e3a\u8f93\u5165\uff0c\u751f\u6210.java\u6587\u4ef6\u4f5c\u4e3a\u8f93\u51fa\u3002 \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u7f16\u8bd1\u671f\uff0c\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3\u751f\u6210.java\u6587\u4ef6\u3002 Android-apt\u662f\u7531\u4e00\u4f4d\u5f00\u53d1\u8005\u81ea\u5df1\u5f00\u53d1\u7684apt\u6846\u67b6\uff0c\u968f\u7740Android Gradle \u63d2\u4ef6 2.2 \u7248\u672c\u7684\u53d1\u5e03\uff0cAndroid Gradle \u63d2\u4ef6\u63d0\u4f9b\u4e86\u540d\u4e3a annotationProcessor \u7684\u529f\u80fd\u6765\u5b8c\u5168\u4ee3\u66ff android-apt \uff0c\u81ea\u6b64android-apt \u4f5c\u8005\u5728\u5b98\u7f51\u53d1\u8868\u58f0\u660e\u8bc1\u5b9e\u4e86\u540e\u7eed\u5c06\u4e0d\u4f1a\u7ee7\u7eed\u7ef4\u62a4 android-apt \uff0c\u5e76\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Android \u5b98\u65b9\u63d2\u4ef6 annotationProcessor\u3002 AnnotationProcessor\u5c31\u662fAPT\u5de5\u5177\u4e2d\u7684\u4e00\u79cd\uff0c\u662f google\u5f00\u53d1\u7684\u5185\u7f6e\u6846\u67b6\uff0c\u4e0d\u9700\u8981\u5f15\u5165\u3002","title":"\u6982\u5ff5\uff1a"},{"location":"annotation/#_2","text":"\u5b9a\u4e49\u4e00\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\uff0c\u9700\u8981\u7ee7\u627f\u81eaAbstractProcessor\u3002 package com.example; public class MyProcessor extends AbstractProcessor { @Override public synchronized void init(ProcessingEnvironment env){ } @Override public boolean process(Set<? extends TypeElement> annoations, RoundEnvironment env) { } @Override public Set<String> getSupportedAnnotationTypes() { } @Override public SourceVersion getSupportedSourceVersion() { } } init(ProcessingEnvironment env): \u6bcf\u4e00\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\u7c7b\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u7684\u6784\u9020\u51fd\u6570\u3002\u7136\u800c\u8fd9\u91cc\u6709\u4e00\u4e2a\u7279\u6b8a\u7684init()\u65b9\u6cd5\uff0c\u5b83\u4f1a\u88ab\u6ce8\u89e3\u5904\u7406\u5de5\u5177\u8c03\u7528\uff0c\u5e76\u8f93\u5165ProcessingEnviroment\u53c2\u6570\u3002ProcessingEnviroment\u63d0\u4f9b\u5f88\u591a\u6709\u7528\u7684\u5de5\u5177\u7c7b\u5982Elements, Types\u548cFiler\u7b49\u3002 process(Set< ? extends TypeElement> annotations, RoundEnvironment env): \u8fd9\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u4e3b\u51fd\u6570main()\u3002\u4f60\u5728\u8fd9\u91cc\u5199\u4f60\u7684\u626b\u63cf\u3001\u8bc4\u4f30\u548c\u5904\u7406\u6ce8\u89e3\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u751f\u6210Java\u6587\u4ef6\u3002\u8f93\u5165\u53c2\u6570RoundEnviroment\uff0c\u53ef\u4ee5\u8ba9\u4f60\u67e5\u8be2\u51fa\u5305\u542b\u7279\u5b9a\u6ce8\u89e3\u7684\u88ab\u6ce8\u89e3\u5143\u7d20\u3002 getSupportedAnnotationTypes(): \u8fd9\u91cc\u4f60\u5fc5\u987b\u6307\u5b9a\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\u662f\u6ce8\u518c\u7ed9\u54ea\u4e2a\u6ce8\u89e3\u7684\u3002\u6ce8\u610f\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u96c6\u5408\uff0c\u5305\u542b\u672c\u5904\u7406\u5668\u60f3\u8981\u5904\u7406\u7684\u6ce8\u89e3\u7c7b\u578b\u7684\u5408\u6cd5\u5168\u79f0\u3002 getSupportedSourceVersion(): \u7528\u6765\u6307\u5b9a\u4f60\u4f7f\u7528\u7684Java\u7248\u672c\u3002\u901a\u5e38\u8fd9\u91cc\u8fd4\u56deSourceVersion.latestSupported()\uff0c\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u8db3\u591f\u7684\u7406\u7531\u53ea\u652f\u6301Java 6\u7684\u8bdd\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8fd4\u56deSourceVersion.RELEASE_6\u3002 \u5728Java 7\u4e2d\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u6765\u4ee3\u66ffgetSupportedAnnotationTypes()\u548cgetSupportedSourceVersion() @SupportedSourceVersion(SourceVersion.latestSupported()) @SupportedAnnotationTypes({ // \u5408\u6cd5\u6ce8\u89e3\u5168\u540d\u7684\u96c6\u5408 }) public class MyProcessor extends AbstractProcessor { @Override public synchronized void init(ProcessingEnvironment env){ } @Override public boolean process(Set<? extends TypeElement> annoations, RoundEnvironment env) { } } \u53e6\u5916\u9700\u8981\u77e5\u9053\u7684\u662f\uff1a\u6ce8\u89e3\u5904\u7406\u5668\u662f\u8fd0\u884c\u5b83\u81ea\u5df1\u7684\u865a\u62df\u673aJVM\u4e2d\uff0cjavac\u542f\u52a8\u4e00\u4e2a\u5b8c\u6574Java\u865a\u62df\u673a\u6765\u8fd0\u884c\u6ce8\u89e3\u5904\u7406\u5668\u3002\u8fd9\u5bf9\u4f60\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u4f60\u5728\u5176\u4ed6java\u5e94\u7528\u4e2d\u4f7f\u7528\u7684\u7684\u4e1c\u897f\u3002","title":"\u81ea\u5b9a\u4e49\u6ce8\u89e3\u5668"},{"location":"annotation/#_3","text":"\u5982\u4f55\u5c06\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u5904\u7406\u5668MyProcessor\u6ce8\u518c\u5230javac\u4e2d\u5462\uff1f \u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u6211\u4eec\u7684\u6ce8\u89e3\u5904\u7406\u5668\u6253\u5305\u5230\u4e00\u4e2ajar\u6587\u4ef6\u4e2d\uff0c\u5176\u6b21\u5728\u8fd9\u4e2ajar\u4e2d\uff0c\u9700\u8981\u6253\u5305\u4e00\u4e2a\u7279\u5b9a\u7684\u6587\u4ef6 javax.annotation.processing.Processor \u5230META-INF/services\u8def\u5f84\u4e0b\u3002 \u4ee5\u4e0b\u662f\u8fd9\u4e2ajar\u7684\u5927\u81f4\u7ed3\u6784\u793a\u610f\u56fe\uff1a MyProcessor.jar com example MyProcessor.jar META-INF services javax.annotation.processing.Processor \u6253\u5305\u8fdbMyProcessor.jar\u4e2d\u7684 javax.annotation.processing.Processor \u7684\u5185\u5bb9\u662f\u6ce8\u89e3\u5904\u7406\u5668\u7684\u5408\u6cd5\u7684\u5168\u540d\u5217\u8868\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u6362\u884c\u5206\u5272\uff1a com.example.MyProcessor com.foo.OtherProcessor net.blabla.SpecialProcessor \u628aMyProcessor.jar\u653e\u5230\u4f60\u7684build path\u4e2d\uff0cjavac\u4f1a\u81ea\u52a8\u68c0\u67e5\u548c\u8bfb\u53d6javax.annotation.processing.Processor\u4e2d\u7684\u5185\u5bb9\uff0c\u5e76\u4e14\u6ce8\u518cMyProcessor\u7b49\u4f5c\u4e3a\u6ce8\u89e3\u5904\u7406\u5668\u3002 Google\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63d2\u4ef6\u6765\u5e2e\u52a9\u6211\u4eec\u66f4\u65b9\u4fbf\u7684\u6ce8\u518c\u6ce8\u89e3\u5904\u7406\u5668\uff0c@AutoService\u6ce8\u89e3\u53ef\u4ee5\u65b9\u4fbf\u7684\u751f\u6210 META-INF/services/javax.annotation.processing.Processor\u4e2d\u6ce8\u89e3\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u4f60\u53ea\u9700\u8981\u5bfc\u5165\u5bf9\u5e94\u7684\u4f9d\u8d56\u5305\uff0c\u5728\u81ea\u5b9a\u4e49\u7684Processor\u7c7b\u4e0a\u65b9\u6dfb\u52a0@AutoService(Processor.class)\u5373\u53ef\uff0c\u5982\u4e0b: \u5bfc\u5165\u4f9d\u8d56\u5305 compile 'com.google.auto.service:auto-service:1.0-rc2' \u6dfb\u52a0\u58f0\u660e @AutoService(Processor.class) public class MyProcessor extends AbstractProcessor { ... }","title":"\u6ce8\u518c\u6ce8\u89e3\u5904\u7406\u5668"},{"location":"annotation/#_4","text":"\u6dfb\u52a0\u5904\u7406\u58f0\u660e\uff1a annotationProcessor project(':xxx-compiler')","title":"\u4f7f\u7528\u6ce8\u89e3\u5904\u7406\u5668"},{"location":"annotation/#_5","text":"1\u3001\u5047\u8bbe\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6ce8\u89e3\uff0c\u53eb@Factory\uff0c\u7528\u6765\u751f\u4ea7\u4e00\u4e9b\u4ea7\u54c1\u3002@Factory\u6ce8\u89e3\u7684\u53c2\u6570\u662ftype\u548cid\uff0c\u5206\u522b\u8868\u793a\u4ea7\u54c1\u7684\u5177\u4f53\u7c7b\u578b\u548c\u4ea7\u54c1id\u3002 /** \u5143\u6ce8\u89e3\uff0c\u662f\u653e\u5728\u88ab\u5b9a\u4e49\u7684\u4e00\u4e2a\u6ce8\u89e3\u7c7b\u7684\u524d\u9762 \uff0c\u662f\u5bf9\u6ce8\u89e3\u4e00\u79cd\u9650\u5236\u3002 @Target : \u7528\u6765\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ef\u4ee5\u88ab\u58f0\u660e\u5728\u54ea\u4e9b\u5143\u7d20\u4e4b\u524d\uff1a ElementType.TYPE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u524d\u3002 ElementType.FIELD\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u7684\u5b57\u6bb5\u524d\u3002 ElementType.METHOD\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\u524d\u3002 ElementType.PARAMETER\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u88ab\u58f0\u660e\u5728\u4e00\u4e2a\u65b9\u6cd5\u53c2\u6570\u524d\u3002 ElementType.CONSTRUCTOR\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u524d\u3002 ElementType.LOCAL_VARIABLE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u524d\u3002 ElementType.ANNOTATION_TYPE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u6ce8\u89e3\u7c7b\u578b\u524d\u3002 ElementType.PACKAGE\uff1a\u8bf4\u660e\u8be5\u6ce8\u89e3\u53ea\u80fd\u58f0\u660e\u5728\u4e00\u4e2a\u5305\u540d\u524d\u3002 @Retention \uff1a\u7528\u6765\u8bf4\u660e\u8be5\u6ce8\u89e3\u7c7b\u7684\u751f\u547d\u5468\u671f\u3002\u5b83\u6709\u4ee5\u4e0b\u4e09\u4e2a\u53c2\u6570\uff1a RetentionPolicy.SOURCE\uff1a \u6ce8\u89e3\u53ea\u4fdd\u7559\u5728\u6e90\u6587\u4ef6\u4e2d RetentionPolicy.CLASS\uff1a \u6ce8\u89e3\u4fdd\u7559\u5728class\u6587\u4ef6\u4e2d\uff0c\u5728\u52a0\u8f7d\u5230JVM\u865a\u62df\u673a\u65f6\u4e22\u5f03 RetentionPolicy.RUNTIME\uff1a\u6ce8\u89e3\u4fdd\u7559\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u5f97\u5b9a\u4e49\u5728\u67d0\u4e2a\u7c7b\u4e0a\u7684\u6240\u6709\u6ce8\u89e3\u3002 */ @Target(ElementType.TYPE) //\u8be5\u6ce8\u89e3\u53ea\u80fd\u7528\u5728\u7c7b\u4e0a @Retention(RetentionPolicy.CLASS)//\u8be5\u6ce8\u89e3\u4fdd\u7559\u5728class\u6587\u4ef6\u4e0a public @interface Factory { /** * \u5de5\u5382\u7684\u540d\u5b57 */ Class type(); /** * \u7528\u6765\u8868\u793a\u751f\u6210\u54ea\u4e2a\u5bf9\u8c61\u7684\u552f\u4e00id */ String id(); } 2\u3001\u73b0\u5728\u6211\u4eec\u4f7f\u7528@Factory\u6ce8\u89e3\u4e00\u4e9b\u4ea7\u54c1\uff0c\u5047\u8bbe\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u4e2aMeal\u7c7b\u578b\u7684\u4ea7\u54c1\uff1aMargheritaPizza\uff08\u4e00\u79cd\u62ab\u8428\uff09\u548cTiramisu\uff08\u63d0\u62c9\u7c73\u82cf\uff09 @Factory( id = \"Margherita\", type = Meal.class ) public class MargheritaPizza implements Meal { @Override public float getPrice() { return 6f; } } @Factory( id = \"Tiramisu\", type = Meal.class ) public class Tiramisu implements Meal { @Override public float getPrice() { return 4.5f; } } 3\u3001\u6211\u4eec\u5e0c\u671b\u81ea\u52a8\u751f\u6210\u8fd9\u6837\u4e00\u4e2aFactory\u5de5\u5382\u7c7b\u53ca\u5de5\u5382\u65b9\u6cd5\uff0c\u80fd\u591f\u901a\u8fc7\u4ea7\u54c1id\u751f\u4ea7\u5bf9\u5e94\u7684\u4ea7\u54c1\uff1a public class MealFactory { public Meal create(String id) { if (id == null) { throw new IllegalArgumentException(\"id is null!\"); } if (\"Tiramisu\".equals(id)) { return new Tiramisu(); } if (\"Margherita\".equals(id)) { return new MargheritaPizza(); } throw new IllegalArgumentException(\"Unknown id = \" + id); } } \u6709\u4e86\u8fd9\u4e2aMealFactory\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u4e00\u5bb6\u62ab\u8428\u5e97\u4e86\uff08\u867d\u7136\u76ee\u524d\u53ea\u80fd\u63d0\u4f9b2\u79cd\u98df\u7269\uff0c\u4f46\u662f\u540e\u7eed\u8fd8\u53ef\u4ee5\u52a0) public class PizzaStore { private MealFactory factory = new MealFactory(); public Meal order(String mealName) { return factory.create(mealName); } public static void main(String[] args) throws IOException { PizzaStore pizzaStore = new PizzaStore(); Meal meal = pizzaStore.order(readConsole()); System.out.println(\"Bill: $\" + meal.getPrice()); } } 4\u3001\u4e3a\u4e86\u5b9e\u73b0MealFactory\u7c7b\u81ea\u52a8\u751f\u6210\uff0c\u6211\u4eec\u4f7f\u7528\u6ce8\u89e3\u5904\u7406\u5668\u6765\u5904\u7406\u3002\u5b9a\u4e49\u4e00\u4e2a\u6ce8\u89e3\u5904\u7406\u5668\u53eb FactoryProcessor\u3002 @AutoService(Processor.class)//google\u7684\u6ce8\u89e3 public class FactoryProcessor extends AbstractProcessor { private Types typeUtils; private Elements elementUtils; private Filer filer; private Messager messager; @Override public synchronized void init(ProcessingEnvironment processingEnv) { super.init(processingEnv); /** \u5728init()\u4e2d\u6211\u4eec\u83b7\u5f97\u5982\u4e0b\u5f15\u7528\uff1a TypeUtils\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406TypeMirror\u7684\u5de5\u5177\u7c7b\uff1b ElementUtils\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406Element\u7684\u5de5\u5177\u7c7b\uff1b Filer\uff1a\u4f7f\u7528Filer\u4f60\u53ef\u4ee5\u521b\u5efa\u6587\u4ef6\uff1b Messager\uff1a\u53ef\u4ee5\u7528\u6765\u6253\u5370\u65e5\u5fd7\uff1b */ typeUtils = processingEnv.getTypeUtils(); elementUtils = processingEnv.getElementUtils(); filer = processingEnv.getFiler(); messager = processingEnv.getMessager(); } @Override public Set<String> getSupportedAnnotationTypes() { Set<String> annotations = new LinkedHashSet<String>(); annotations.add(Factory.class.getCanonicalName());//\u53ea\u5904\u7406@Factory\u6ce8\u89e3 return annotations; } @Override public SourceVersion getSupportedSourceVersion() { return SourceVersion.latestSupported(); } @Override public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) { ... return true; } }","title":"\u5b9e\u8df5\u4f8b\u5b50"},{"location":"annotation/#element","text":"\u5728\u6ce8\u89e3\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u626b\u63cf\u6240\u6709\u7684Java\u6e90\u6587\u4ef6\u3002\u6e90\u4ee3\u7801\u7684\u6bcf\u4e00\u4e2a\u90e8\u5206\u90fd\u662f\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684Element\u3002\u6362\u53e5\u8bdd\u8bf4\uff1aElement\u4ee3\u8868\u7a0b\u5e8f\u7684\u5143\u7d20\uff0c\u4f8b\u5982\u5305\u3001\u7c7b\u6216\u8005\u65b9\u6cd5\u3002\u6bcf\u4e2aElement\u4ee3\u8868\u4e00\u4e2a\u9759\u6001\u7684\u3001\u8bed\u8a00\u7ea7\u522b\u7684\u6784\u4ef6\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6ce8\u91ca\u6765\u8bf4\u660e\u8fd9\u4e2a\uff1a package com.example; // PackageElement public class Foo { // TypeElement private int a; // VariableElement private Foo other; // VariableElement public Foo () {} // ExecuteableElement public void setA ( // ExecuteableElement int newA // VariableElement ) {} } Element\u662f\u62bd\u8c61\u7684\u7ed3\u70b9\uff0c\u5c31\u50cfXML\u89e3\u91ca\u5668\u4e00\u6837\uff0c\u6709\u4e00\u4e9b\u7c7b\u4f3cDOM\u7684\u5143\u7d20\u3002\u4f60\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5143\u7d20\u5bfc\u822a\u5230\u5b83\u7684\u7236\u6216\u8005\u5b50\u5143\u7d20\u4e0a\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u5982\u4f60\u6709\u4e00\u4e2a Foo \u7c7b\u7684TypeElement\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u904d\u5386\u5b83\u7684\u5b69\u5b50\uff0c\u5982\u4e0b\uff1a TypeElement fooClass = ... ; for (Element e : fooClass.getEnclosedElements()){ // iterate over children Element parent = e.getEnclosingElement(); // parent == fooClass }","title":"Element\u662f\u4ec0\u4e48\uff1f"},{"location":"annotation/#typeelement","text":"TypeElement\u4ee3\u8868\u7684\u662f\u6e90\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5143\u7d20\uff0c\u4f46\u662fTypeElement\u5e76\u4e0d\u5305\u542b\u7c7b\u672c\u8eab\u7684\u4fe1\u606f\uff0c\u4f60\u53ef\u4ee5\u4eceTypeElement\u4e2d\u83b7\u53d6\u7c7b\u7684\u540d\u5b57\uff0c\u4f46\u662f\u4f60\u83b7\u53d6\u4e0d\u5230\u7c7b\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5b83\u7684\u7236\u7c7b\u3002\u8fd9\u79cd\u4fe1\u606f\u9700\u8981\u901a\u8fc7TypeMirror\u83b7\u53d6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528elements.asType()\u83b7\u53d6\u5143\u7d20\u7684TypeMirror\u3002 5\u3001\u73b0\u5728FactoryProcessor\u5269\u4e0b\u4e00\u4e2a\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u6ca1\u6709\u5b9e\u73b0\uff0c\u5c31\u662fprocess\u65b9\u6cd5\uff0c\u4f60\u6240\u505a\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u5e94\u8be5\u4ece\u8fd9\u4e2a\u65b9\u6cd5\u5f00\u59cb\u3002 \u7b2c\u4e00\u6b65\u5de5\u4f5c\u5148\u626b\u63cf@Factory\u6ce8\u89e3 @Override public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) { // \u904d\u5386\u6240\u6709\u88ab\u6ce8\u89e3\u4e86@Factory\u7684\u5143\u7d20 for (Element annotatedElement : roundEnv.getElementsAnnotatedWith(Factory.class)) { // \u68c0\u67e5\u88ab\u6ce8\u89e3\u4e3a@Factory\u7684\u5143\u7d20\u662f\u5426\u662f\u4e00\u4e2a\u7c7b if (annotatedElement.getKind() != ElementKind.CLASS) { //\u6253\u5370\u9519\u8bef\u4fe1\u606f\uff0c\u975e\u5173\u952e\u6027\u9519\u8bef\u6700\u597d\u4e0d\u8981\u629b\u5f02\u5e38 error(annotatedElement, \"Only classes can be annotated with @%s\", Factory.class.getSimpleName()); continue; } ... } } private void error(Element e, String msg, Object... args) { messager.printMessage( Diagnostic.Kind.ERROR, String.format(msg, args), e); } \u5224\u65ad\u662f\u4e0d\u662f\u7c7b\uff0c\u80fd\u7528! (annotatedElement instanceof TypeElement) \u5417\uff1f\u8fd9\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u63a5\u53e3\uff08interface\uff09\u7c7b\u578b\u4e5f\u662fTypeElement\u3002\u6240\u4ee5\u5728\u6ce8\u89e3\u5904\u7406\u5668\u4e2d\uff0c\u6211\u4eec\u8981\u907f\u514d\u4f7f\u7528instanceof\uff0c\u800c\u662f\u914d\u5408TypeMirror\u4f7f\u7528ElementKind\u6216\u8005TypeKind\u3002 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u8fd9\u4e9b\u88ab\u6ce8\u89e3\u5728\u7c7b\u4e0a\u7684@Factory\u6ce8\u89e3\u5bf9\u8c61(TypeElement)\u4e86\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8981\u89e3\u6790\u6ce8\u89e3\u91cc\u7684\u53c2\u6570\u4e86\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u7c7bFactoryAnnotatedClass\u6765\u8bb0\u5f55\u89e3\u6790\u540e\u7684\u53c2\u6570\uff0c\u76f8\u5173\u7684\u89e3\u6790\u5de5\u4f5c\u653e\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\uff1a public class FactoryAnnotatedClass { private TypeElement annotatedClassElement; private String qualifiedSuperClassName; private String simpleTypeName; private String id; public FactoryAnnotatedClass(TypeElement classElement) throws IllegalArgumentException { this.annotatedClassElement = classElement; //\u83b7\u53d6\u7c7b\u7684Factory\u6ce8\u89e3 Factory annotation = classElement.getAnnotation(Factory.class); //\u4ece\u6ce8\u89e3\u83b7\u53d6id\u53c2\u6570 id = annotation.id(); if (StringUtils.isEmpty(id)) { throw new IllegalArgumentException( String.format(\"id() in @%s for class %s is null or empty! that's not allowed\", Factory.class.getSimpleName(), classElement.getQualifiedName().toString())); } //\u83b7\u53d6type\u53c2\u6570 try { Class<?> clazz = annotation.type();//xxx.yyy.Meal.class qualifiedSuperClassName = clazz.getCanonicalName();//xxx.yyy.Meal simpleTypeName = clazz.getSimpleName();//Meal } catch (MirroredTypeException mte) { /** annotation.type()\u8fd4\u56deClass\u5bf9\u8c61\uff0c\u53ef\u80fd\u53d1\u751fMirroredTypeException\u5f02\u5e38\u3002 \u90a3\u4ec0\u4e48\u65f6\u5019\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u5462\uff1f \u7b54\uff1a\u56e0\u4e3a\u6ce8\u89e3\u5904\u7406\u662f\u5728\u7f16\u8bd1Java\u6e90\u4ee3\u7801\u4e4b\u524d\u3002\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a 1\u3001\u8fd9\u4e2a\u7c7b\u5df2\u7ecf\u88ab\u7f16\u8bd1\uff0c\u4f8b\u5982\u7b2c\u4e09\u65b9.jar\u4e2d\u7684\u7c7b\uff0c\u5df2\u7ecf\u5305\u542b\u5df2\u7f16\u8bd1\u7684\u88ab@Factory\u6ce8\u89e3.class\u6587\u4ef6\uff0c\u8fd9\u65f6\u4e0d\u4f1a\u53d1\u751f\u5f02\u5e38\u3002 2\u3001\u8fd9\u4e2a\u7c7b\u8fd8\u672a\u88ab\u7f16\u8bd1\uff0c\u76f4\u63a5\u83b7\u53d6Class\u4f1a\u629b\u51faMirroredTypeException\u5f02\u5e38\uff0c\u5355\u5e78\u8fd0\u7684\u662f\uff0c MirroredTypeException\u5305\u542b\u4e00\u4e2aTypeMirror\uff0c\u5b83\u8868\u793a\u6211\u4eec\u672a\u7f16\u8bd1\u7c7b\u3002 \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5b83\u5fc5\u5b9a\u662f\u4e00\u4e2a\u7c7b\u7c7b\u578b\uff08\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u68c0\u67e5\u8fc7\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f3a\u5236\u8f6c\u6362\u4e3aDeclaredType\uff0c \u7136\u540e\u8bfb\u53d6TypeElement\u6765\u83b7\u53d6\u5408\u6cd5\u7684\u540d\u5b57 */ DeclaredType classTypeMirror = (DeclaredType) mte.getTypeMirror(); TypeElement classTypeElement = (TypeElement) classTypeMirror.asElement(); qualifiedSuperClassName = classTypeElement.getQualifiedName().toString(); simpleTypeName = classTypeElement.getSimpleName().toString(); } } /** * \u83b7\u53d6\u5728{@link Factory#id()}\u4e2d\u6307\u5b9a\u7684id * return the id */ public String getId() { return id; } /** * \u83b7\u53d6\u5728{@link Factory#type()}\u6307\u5b9a\u7684\u7c7b\u578b\u5408\u6cd5\u5168\u540d * * @return qualified name */ public String getQualifiedFactoryGroupName() { return qualifiedSuperClassName; } /** * \u83b7\u53d6\u5728 {@link Factory#type()} \u4e2d\u6307\u5b9a\u7684\u7c7b\u578b\u7684\u7b80\u5355\u540d\u5b57 * * @return qualified name */ public String getSimpleFactoryGroupName() { return simpleTypeName; } /** * \u83b7\u53d6\u88ab@Factory\u6ce8\u89e3\u7684\u539f\u59cb\u5143\u7d20 */ public TypeElement getTypeElement() { return annotatedClassElement; } } \u73b0\u5728\u518d\u5efa\u7acb\u4e00\u4e2a\u6570\u636e\u7ed3\u6784 FactoryGroupedClasses \uff0c\u5c06 FactoryAnnotatedClass \u6309Map\u7ed3\u6784\u7ec4\u7ec7\u8d77\u6765\uff0c\u4e5f\u5c31\u662f\u505a\u4e00\u4e2a id --> FactoryAnnotatedClass \u7684\u6620\u5c04\u5173\u7cfb\uff1a \u6bd4\u5982\uff1a \"Tiramisu\" -> FactoryAnnotatedClass@1234 \"Margherita\" -> FactoryAnnotatedClass@4321 public class FactoryGroupedClasses { private String qualifiedClassName; private Map<String, FactoryAnnotatedClass> itemsMap = new LinkedHashMap<String, FactoryAnnotatedClass>(); public FactoryGroupedClasses(String qualifiedClassName) { this.qualifiedClassName = qualifiedClassName; } public void add(FactoryAnnotatedClass toInsert) throws IdAlreadyUsedException { FactoryAnnotatedClass existing = itemsMap.get(toInsert.getId()); if (existing != null) { throw new IdAlreadyUsedException(existing); } itemsMap.put(toInsert.getId(), toInsert); } public void generateCode(Elements elementUtils, Filer filer) throws IOException { ... } } \u73b0\u5728\u6211\u4eec\u6765\u628aprocess\u65b9\u6cd5\u8865\u5145\u5b8c\uff0c\u56e0\u4e3aFactory\u6ce8\u89e3\u91cc\u7684type\u53ef\u80fd\u4e0d\u6b62\u6709Meal\u8fd9\u4e00\u79cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2amap\u7ed3\u6784\uff08factoryClasses\uff09\u6765\u5f52\u7c7b\uff0c\u6bd4\u5982\uff1a \"Meal\" --> FactoryGroupedClasses@5678 \"Drink\" --> FactoryGroupedClasses@8765 private Map<String, FactoryGroupedClasses> factoryClasses = new LinkedHashMap<String, FactoryGroupedClasses>(); @Override public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) { for (Element annotatedElement : roundEnv.getElementsAnnotatedWith(Factory.class)) { ... // \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5b83\u662fElementKind.CLASS\u7c7b\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f3a\u5236\u8f6c\u6362 TypeElement typeElement = (TypeElement) annotatedElement; try { FactoryAnnotatedClass annotatedClass = new FactoryAnnotatedClass(typeElement); // may throws IllegalArgumentException if (!isValidClass(annotatedClass)) {//\u989d\u5916\u7684\u5176\u4ed6\u68c0\u67e5 continue; } // \u6240\u6709\u68c0\u67e5\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u53ef\u4ee5\u6dfb\u52a0\u4e86 FactoryGroupedClasses factoryClass = factoryClasses.get(annotatedClass.getQualifiedFactoryGroupName()); if (factoryClass == null) { String qualifiedGroupName = annotatedClass.getQualifiedFactoryGroupName(); factoryClass = new FactoryGroupedClasses(qualifiedGroupName); factoryClasses.put(qualifiedGroupName, factoryClass); } // \u5982\u679c\u548c\u5176\u4ed6\u7684@Factory\u6807\u6ce8\u7684\u7c7b\u7684id\u76f8\u540c\u51b2\u7a81\uff0c\u629b\u51faIdAlreadyUsedException\u5f02\u5e38 factoryClass.add(annotatedClass); } catch (IllegalArgumentException e) { // @Factory.id()\u4e3a\u7a7a --> \u6253\u5370\u9519\u8bef\u4fe1\u606f error(typeElement, e.getMessage()); continue; } catch (IdAlreadyUsedException e) { FactoryAnnotatedClass existing = e.getExisting(); // \u5df2\u7ecf\u5b58\u5728 error(annotatedElement, \"Conflict: The class %s is annotated with @%s with id ='%s' but %s already uses the same id\", typeElement.getQualifiedName().toString(), Factory.class.getSimpleName(), existing.getTypeElement().getQualifiedName().toString()); continue; } try { for (FactoryGroupedClasses factoryClass : factoryClasses.values()) { //\u751f\u6210\u4ee3\u7801 factoryClass.generateCode(elementUtils, filer); } } catch (IOException e) { error(null, e.getMessage()); } //\u52a1\u5fc5\u6e05\u7a7a\u6210\u5458\u53d8\u91cf\u7f13\u5b58factoryClasses factoryClasses.clear(); return true; } } private boolean isValidClass(FactoryAnnotatedClass item) { // \u8f6c\u6362\u4e3aTypeElement, \u542b\u6709\u66f4\u591a\u7279\u5b9a\u7684\u65b9\u6cd5 TypeElement classElement = item.getTypeElement(); // \u68c0\u67e5\u662f\u5426\u662fpublic\u7684\u7c7b if (!classElement.getModifiers().contains(Modifier.PUBLIC)) { error(classElement, \"The class %s is not public.\", classElement.getQualifiedName().toString()); return false; } // \u68c0\u67e5\u662f\u5426\u662f\u62bd\u8c61\u7684 if (classElement.getModifiers().contains(Modifier.ABSTRACT)) { error(classElement, \"The class %s is abstract. You can't annotate abstract classes with @%\", classElement.getQualifiedName().toString(), Factory.class.getSimpleName()); return false; } // \u68c0\u67e5\u7ee7\u627f\u5173\u7cfb: \u5fc5\u987b\u662f@Factory.type()\u6307\u5b9a\u7684\u7c7b\u578b\u5b50\u7c7b\uff0c\u6bd4\u5982\uff1aTiramisu\u5fc5\u987b\u662fMeal\u7c7b\u578b\u7684 TypeElement superClassElement = elementUtils.getTypeElement(item.getQualifiedFactoryGroupName());//Meal if (superClassElement.getKind() == ElementKind.INTERFACE) {//\u5982\u679cMeal\u662f\u4e2a\u63a5\u53e3 // \u68c0\u67e5\u63a5\u53e3\u662f\u5426\u5b9e\u73b0\u4e86 if (!classElement.getInterfaces().contains(superClassElement.asType())) {//Tiramisu\u7684\u63a5\u53e3\u4e2d\u662f\u5426\u5305\u542bMeal\u63a5\u53e3 error(classElement, \"The class %s annotated with @%s must implement the interface %s\", classElement.getQualifiedName().toString(), Factory.class.getSimpleName(), item.getQualifiedFactoryGroupName()); return false; } } else {//\u5982\u679cMeal\u662f\u4e2a\u7c7b // \u5faa\u73af\u68c0\u67e5\u7236\u7c7b TypeElement currentClass = classElement; while (true) { TypeMirror superClassType = currentClass.getSuperclass();//\u7236\u7c7b if (superClassType.getKind() == TypeKind.NONE) { // \u5230\u8fbe\u4e86\u57fa\u672c\u7c7b\u578b(java.lang.Object), \u6240\u4ee5\u9000\u51fa error(classElement, \"The class %s annotated with @%s must inherit from %s\", classElement.getQualifiedName().toString(), Factory.class.getSimpleName(), item.getQualifiedFactoryGroupName()); return false; } if (superClassType.toString().equals(item.getQualifiedFactoryGroupName())) { // \u627e\u5230\u4e86\u8981\u6c42\u7684\u7236\u7c7b break; } // \u5728\u7ee7\u627f\u6811\u4e0a\u7ee7\u7eed\u5411\u4e0a\u641c\u5bfb currentClass = (TypeElement) typeUtils.asElement(superClassType); } } // \u68c0\u67e5\u662f\u5426\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u516c\u5f00\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u4ee3\u7801\u4e2d\u8981\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u6bd4\u5982new Tiramisu() for (Element enclosed : classElement.getEnclosedElements()) { if (enclosed.getKind() == ElementKind.CONSTRUCTOR) { ExecutableElement constructorElement = (ExecutableElement) enclosed; if (constructorElement.getParameters().size() == 0 && constructorElement.getModifiers() .contains(Modifier.PUBLIC)) { // \u627e\u5230\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 return true; } } } // \u6ca1\u6709\u627e\u5230\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 error(classElement, \"The class %s must provide an public empty default constructor\", classElement.getQualifiedName().toString()); return false; } \u73b0\u5728\u89e3\u6790\u5de5\u4f5c\u7ed3\u675f\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u751f\u6210\u5bf9\u5e94\u7684java\u4ee3\u7801\u4e86\uff0c\u6211\u4eec\u6765\u5b9e\u73b0FactoryGroupedClassesFactoryGroupedClasses\u4e2d\u9057\u7559\u7684generateCode\u65b9\u6cd5\u3002 \u8fd9\u91cc\u4f7f\u7528 javapoet \u52a8\u6001\u751f\u6210java\u6e90\u6587\u4ef6\uff1a private static final String SUFFIX = \"Factory\"; public void generateCode(Elements elementUtils, Filer filer) throws IOException { TypeElement superClassName = elementUtils.getTypeElement(qualifiedClassName);//Meal String factoryClassName = superClassName.getSimpleName() + SUFFIX;//\"MealFactory\" MethodSpec.Builder methodSpecBuilder = MethodSpec.methodBuilder(\"create\")//public Meal create(String id) .addModifiers(Modifier.PUBLIC) .addParameter(ParameterSpec.builder(String.class, \"id\").build()) .returns(TypeName.get(superClassName.asType())); CodeBlock.Builder toStringCodeBuilder = CodeBlock.builder(); toStringCodeBuilder.beginControlFlow(\"if (id == null)\"); toStringCodeBuilder.add(CodeBlock.of(\"throw new IllegalArgumentException(\\\"id is null!\\\");\\n\")); toStringCodeBuilder.endControlFlow(); methodSpecBuilder.addCode(toStringCodeBuilder.build()); for (FactoryAnnotatedClass item : itemsMap.values()) { toStringCodeBuilder = CodeBlock.builder(); toStringCodeBuilder.beginControlFlow(\"if ($S.equals(id))\", item.getId()); toStringCodeBuilder.add(CodeBlock.of(\"return new $T();\\n\", item.getTypeElement())); toStringCodeBuilder.endControlFlow(); methodSpecBuilder.addCode(toStringCodeBuilder.build()); } methodSpecBuilder.addCode(CodeBlock.of(\"throw new IllegalArgumentException(\\\"Unknown id = \\\" + id);\\n\")); TypeSpec typeSpec = TypeSpec.classBuilder(factoryClassName) .addModifiers(Modifier.PUBLIC) .addMethod(methodSpecBuilder.build()) .build(); JavaFile.builder(\"com.example.annotation\", typeSpec)//\u751f\u6210com.example.annotation.MealFactory .build().writeTo(filer); } \u6700\u540e\u662f\u6d4b\u8bd5\u4ee3\u7801\uff1a public class Test { public static void main(String[] args) { System.out.println(new MealFactory().create(\"Tiramisu\").getPrice()); } } \u5b8c\u6574\u4ee3\u7801\uff1a https://github.com/qylk/MyAnnotationTest/tree/master","title":"TypeElement"},{"location":"annotation_debug/","text":"\u7f16\u8bd1\u65f6\u6ce8\u89e3\u5904\u7406\u5668\u662f\u8fd0\u884c\u5728\u4e00\u4e2a\u5355\u72ec\u7684JVM\u5f53\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u60f3\u8981\u5bf9\u5b83\u8fdb\u884c\u8c03\u8bd5\u53ef\u4ee5\u4f7f\u7528Remote Debug\u3002\u65e0\u8bba\u662f\u662fEclipse\u4e2d\u8fd8\u662f\uff0cIDEA\u5f53\u4e2d\uff0c\u5bf9Remote Debug\u529f\u80fd\u90fd\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u652f\u6301\uff0c\u4f5c\u4e3aIDEA\u4e8c\u6b21\u5f00\u53d1\u51fa\u7684Android Studio\u540c\u6837\u4e5f\u4e0d\u4f8b\u5916\u3002 \u5148\u6765\u770b\u4e00\u4e0b\u5982\u4f55\u5f00\u542fJVM\u7684\u8fdc\u7a0b\u8c03\u8bd5\u529f\u80fd\uff0c\u5728\u542f\u52a8JVM\u7684\u65f6\u5019\u52a0\u4e0a\u4ee5\u4e0b\u53c2\u6570\u5373\u53ef\uff1a //jdk 1.5\u4ee5\u524d\u5199\u6cd5\uff0c\u5f53\u7136\u8be5\u547d\u4ee4\u662f\u5148\u540e\u517c\u5bb9\u7684 -J-Xdebug -J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 //jdk 1.5\u53ca\u4ee5\u540e\u7248\u672c\u5199\u6cd5 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 \u8fd9\u4e9b\u53c2\u6570\u7684\u542b\u4e49\u8fd9\u91cc\u4e0d\u7ec6\u8bf4\uff0c\u4f60\u552f\u4e00\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539address\u6307\u5b9a\u4e00\u4e2a\u7aef\u53e3\u53f7\u3002 \u73b0\u5728\u6211\u4eec\u4ee5Android Studio\u4e2d\u8c03\u8bd5\u6ce8\u89e3\u5904\u7406\u5668\u4e3a\u4f8b 1\u3001\u6253\u5f00Edit Configurations\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2+\u53f7\uff0c\u9009\u62e9Remote\uff0cName\u53ef\u4ee5\u968f\u4fbf\u8d77\u540d\uff0c\u5047\u8bbe\u8fd9\u91cc\u53ebApt\uff0cport\u9ed8\u8ba4\u586b\u51995005\uff0c\u70b9\u51fbok\u3002 2\u3001\u7531\u4e8e\u7f16\u8bd1\u65f6\u6ce8\u89e3\u662f\u5728compileDebugJavaWithJavac\u811a\u672c\u4e2d\u5904\u7406\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4e3a\u5176\u6dfb\u52a0JVM\u53c2\u6570\u5c06\u5176\u8bbe\u7f6e\u4e3a\u53ef\u8fdc\u7a0b\u8c03\u8bd5\u3002 ./gradlew --no-daemon -Dorg.gradle.debug=true :app:clean :app:compileDebugJavaWithJavac \u8fd9\u65f6\u547d\u4ee4\u884c\u4f1a\u5361\u4e3b\uff0c\u7b49\u5f85debug\u8fdb\u7a0b\u8fde\u4e0a5005\u7aef\u53e3 3\u3001\u7136\u540e\u5728\u4f60\u9700\u8981\u8c03\u8bd5\u7684\u5730\u65b9\u6253\u4e0a\u65ad\u70b9\uff0c\u8fd9\u65f6\u5019\u70b9\u51fbdebug\u6309\u94ae\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u5c31\u53ef\u4ee5\u8fde\u63a5\u4e0a\u8fdc\u7a0b\u8c03\u8bd5\u5668\u8fdb\u884cAnnotation\u7684\u8c03\u8bd5\u5566\u3002","title":"\u6ce8\u89e3\u5904\u7406\u5668\u8c03\u8bd5"},{"location":"apm/","text":"//todo apm\u76d1\u63a7","title":"Apm"},{"location":"applet/","text":"\u5f53\u524dhybird\u7684\u8d8b\u52bf\u662f\uff1a h5 -> h5 + jsBridge \u2013> h5 + jsBridge + \u90e8\u5206NativeUI\u7ec4\u4ef6 \u2013> ReactNative \u5168\u91cfNative\u7ec4\u4ef6\u5316\u3002 \u5bf9H5\u4e1a\u52a1\u8fdb\u884c\u5b8c\u6574\u7684Hybrid\u79bb\u7ebf\u5316\u3002\u5373\uff1a\u53d1\u7248\u5185\u7f6e\u521d\u59cb\u7248\u672c\uff0c\u540e\u7eed\u53ef\u901a\u8fc7\u670d\u52a1\u7aef\u589e\u91cf\u66f4\u65b0\uff0c\u5177\u4f53\u7248\u672c\u66f4\u65b0\u7ec6\u5219\u53ef\u4ee5\u53c2\u7167\u63d2\u4ef6\u5316\u589e\u91cf\u66f4\u65b0\u673a\u5236\uff0c\u8fd9\u6837\u5bf9\u4e8e\u5feb\u901f\u66f4\u65b0\u7684\u4e1a\u52a1\u6709\u975e\u5e38\u5927\u7684\u4f18\u52bf\uff0c\u53ef\u4ee5\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5185\u52a8\u6001\u4e0a\u7ebf\uff0c\u800c\u4e14\u53ef\u4ee5\u505a\u5230\u591a\u7aef\u7edf\u4e00\u3002 \u5982\u4e0b\u4e3a\u53c2\u7167\u67d0Hybrid\u7684\u76ee\u5f55\u7ed3\u6784\uff1a webapp //\u6839\u76ee\u5f55 \u251c\u2500 \u251c\u2500business1 //\u4e1a\u52a11 \u2502 \u2502 index.html //\u4e1a\u52a1\u5165\u53e3html\u8d44\u6e90 \u2502 \u2502 main.js //\u4e1a\u52a1\u6240\u6709js\u8d44\u6e90\u6253\u5305 \u2502 \u2502 \u2502 \u2514\u2500static //\u9759\u6001\u6837\u5f0f\u8d44\u6e90 \u2502 \u251c\u2500css \u2502 \u251c\u2500hybrid //\u5b58\u50a8\u4e1a\u52a1\u5b9a\u5236\u5316\u7c7bNative Header\u56fe\u6807 \u2502 \u2514\u2500images \u251c\u2500libs \u2502 libs.js //\u6846\u67b6\u6240\u6709js\u8d44\u6e90\u6253\u5305 \u2502 \u2514\u2500static //\u6846\u67b6\u9759\u6001\u8d44\u6e90\u6837\u5f0f\u6587\u4ef6 \u251c\u2500css \u2514\u2500images","title":"Applet"},{"location":"bitmap_insampleSize/","text":"BitmapFactory#Options\u4e2d\u5bf9inSampleSize\u662f\u8fd9\u6837\u8bf4\u660e\u7684\uff1a /** * If set to a value > 1, requests the decoder to subsample the original * image, returning a smaller image to save memory. The sample size is * the number of pixels in either dimension that correspond to a single * pixel in the decoded bitmap. For example, inSampleSize == 4 returns * an image that is 1/4 the width/height of the original, and 1/16 the * number of pixels. Any value <= 1 is treated the same as 1. Note: the * decoder uses a final value based on powers of 2, any other value will * be rounded down to the nearest power of 2. */ public int inSampleSize; \u770b\u8d77\u6765inSampleSize\u6700\u7ec8\u5bf9\u56fe\u7247\u7684\u7f29\u653e\u6bd4\u4f8b\u53ea\u80fd\u662f2\u7684\u5e42\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u80fd\u7f29\u653e\u51fa1\u500d\u30011/2\u30011/4\u30011/8\u8fd9\u6837\u5b50\uff0c\u6bd4\u5982inSampleSize=3\u65f6\uff0c\u6700\u7ec8\u7f29\u653e\u6bd4\u4f8b\u53ef\u80fd\u4ecd\u7136\u662f1/2\uff0c\u800c\u4e0d\u662f1/3\u3002 \u901a\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u4e00\u70b9\u4e0d\u4e00\u5b9a\uff1a * 4.4 \u7f29\u653e\u52302\u7684 k \u6b21\u65b9 * 5.0 \u7f29\u653e\u52302\u7684 k \u6b21\u65b9 * 6.0 \u7f29\u653e\u52302\u7684 k \u6b21\u65b9 * 7.0 \u7ed9\u591a\u5c11\u500d\uff0c\u662f\u591a\u5c11\u500d\uff0c\u5373\u652f\u63011/3, 1/5\u6bd4\u4f8b\u7f29\u653e\u7b49\u7b49","title":"bitmap insampleSize"},{"location":"bookmark/","text":"\u5bcc\u6587\u672c\u7f16\u8f91\uff1a http://www.vemmis.com/bjq/index.html json\u5728\u7ebf\u89e3\u6790\uff1a https://www.json.cn/# json\u8f6cjavaBean\u4ee3\u7801\uff1a http://www.jsonschema2pojo.org/ \u5e55\u5e03-\u521b\u5efa\u601d\u7ef4\u5bfc\u56fe\uff1a https://mubu.com/doc/oyR7LjAy1q android: \u591a\u6a21\u5757\u6253\u5305aar: https://github.com/adwiv/android-fat-aar \u84b2\u516c\u82f1\u5e94\u7528\u5185\u6d4b\u5206\u53d1\uff1a https://www.pgyer.com/ \u97f3\u4e50\uff1a \u65e0\u635f\u97f3\u4e50\uff1a https://www.sq688.com/ \u5176\u4ed6\uff1a \u5fae\u4fe1\u5b89\u5353\u7aef\u5c0f\u7a0b\u5e8f\u9006\u5411\u5206\u6790 \u7a81\u7834Android P\u975eSDK API\u9650\u5236\u7684\u51e0\u79cd\u4ee3\u7801\u5b9e\u73b0 Android\u76f8\u673a\u5b9e\u65f6\u81ea\u52a8\u5bf9\u7126\u7684\u5b8c\u7f8e\u5b9e\u73b0 npm \u672c\u5730HTTP Server: https://www.npmjs.com/package/local-web-server","title":"\u6536\u85cf"},{"location":"class_access/","text":"\u53cd\u7f16\u8bd1class\u51fa\u73b0access$xxx\u7c7b\u51fd\u6570\u7684\u8bf4\u660e public class TestOuter { private int a; private int b; public TestOuter() { } private void fun() { ++this.a; } class TestInner { int x = 0; TestInner() { TestOuter.this.b = 1; TestOuter.this.a = 0; TestOuter.this.fun(); } } } TestInner \u662f TestOuter \u7684\u5185\u90e8\u7c7b\uff0c\u751f\u6210\u7684TestInner.class\u5982\u4e0b\uff1a class TestOuter$TestInner { int x; TestOuter$TestInner(TestOuter this$0) { this.this$0 = this$0; this.x = 0; TestOuter.access$002(this$0, 1); TestOuter.access$102(this$0, 0); TestOuter.access$200(this$0); } } \u53ef\u4ee5\u770b\u51fa\uff1a 1. TestInner\u4f1a\u9690\u5f0f\u5f15\u7528\u5916\u5c42\u7684TestOuter.this\u5bf9\u8c61\uff0c\u653e\u5728this$0\u5b57\u6bb5\u4e2d\u3002 2. \u4e3a\u4e86\u4f7f\u5185\u90e8\u7c7b\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u7f16\u8bd1\u5668\u751f\u6210\u4e86\u5f62\u4f3c \"\u5916\u90e8\u7c7b.access$XYZ\"\u7684\u51fd\u6570\uff0cXYZ\u4e3a\u6570\u5b57\u3002 X\u662f\u6309\u7167\u79c1\u6709\u6210\u5458\u5728\u5185\u90e8\u7c7b\u51fa\u73b0\u7684\u987a\u5e8f\u9012\u589e\u7684 YZ\u4e3a02\u7684\u8bdd\uff0c\u6807\u660e\u662f\u57fa\u672c\u53d8\u91cf\u6210\u5458 YZ\u4e3a00\u7684\u8bdd\u6807\u660e\u662f\u5bf9\u8c61\u6210\u5458\u6216\u8005\u51fd\u6570","title":"Class access"},{"location":"dev_compat/","text":"1. Android 7.0 Notification Sound Issue \u901a\u77e5\u94c3\u58f0Uri\u5982\u4e0b\uff0c\u683c\u5f0f\u4e3aFileProvider Uri ``` content://xxxxxxxx/yyyy.mp3 ``` **\u539f\u56e0**\uff1a Notification\u6240\u5728\u8fdb\u7a0b\"com.android.systemui\"\u65e0\u8bbf\u95ee\u6743\u9650\uff0c\u5bfc\u81f4\u8bbe\u7f6e\u7684MP3\u65e0\u6cd5\u64ad\u653e **\u89e3\u51b3**\uff1a 1. \u5bf9\u4e8exxxxxxxx\u4e3a\u81ea\u8eab\u5e94\u7528\u7684authorities\u65f6\uff0c\u6dfb\u52a0\u4e00\u4e0b\u4ee3\u7801\uff0c\u53ef\u6388\u6743\u8bbf\u95ee\u6743\u9650\u3002 ``` grantUriPermission(\"com.android.systemui\", sound,Intent.FLAG_GRANT_READ_URI_PERMISSION); ``` 2. \u5bf9\u4e8exxxxxxxx\u4e3a\u5176\u4ed6\u5e94\u7528\u7684authorities\u65f6\uff0c\u9700\u8981\u5c06xxxxxxxx\u6539\u4e3a\u81ea\u8eab\u5e94\u7528\u7684authorities\uff0c\u5426\u5219\u65e0\u6cd5\u6388\u6743\u3002 3. \u5bf9\u4e8e\u81ea\u8eab\u5e94\u7528\u7684\u8d44\u6e90\u6587\u4ef6, \u53ef\u4f7f\u7528\u4f7f\u7528android.resource\u534f\u8bae\uff0c\u65e0\u9700\u6388\u6743\u3002 ``` Uri uri = Uri.parse(\"android.resource://\u201c+ context.getPackageName() + \"/raw/test.mp3\") ``` > \u5907\u6ce8\uff1a\u4ece android 7.0\u5f00\u59cb\uff0c\u5982\u679c\u5e94\u7528\u7684targetSdkVersion>=24\uff0c\u5219\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u4f20\u9012uri\u4e0d\u80fd\u518d\u4f7f\u7528file://\u534f\u8bae\uff0c\u5426\u5219\u5c06\u629b\u51faFileUriExposedException","title":"\u7cfb\u7edf\u9002\u914d"},{"location":"dev_compat/#1-android-70-notification-sound-issue","text":"\u901a\u77e5\u94c3\u58f0Uri\u5982\u4e0b\uff0c\u683c\u5f0f\u4e3aFileProvider Uri ``` content://xxxxxxxx/yyyy.mp3 ``` **\u539f\u56e0**\uff1a Notification\u6240\u5728\u8fdb\u7a0b\"com.android.systemui\"\u65e0\u8bbf\u95ee\u6743\u9650\uff0c\u5bfc\u81f4\u8bbe\u7f6e\u7684MP3\u65e0\u6cd5\u64ad\u653e **\u89e3\u51b3**\uff1a 1. \u5bf9\u4e8exxxxxxxx\u4e3a\u81ea\u8eab\u5e94\u7528\u7684authorities\u65f6\uff0c\u6dfb\u52a0\u4e00\u4e0b\u4ee3\u7801\uff0c\u53ef\u6388\u6743\u8bbf\u95ee\u6743\u9650\u3002 ``` grantUriPermission(\"com.android.systemui\", sound,Intent.FLAG_GRANT_READ_URI_PERMISSION); ``` 2. \u5bf9\u4e8exxxxxxxx\u4e3a\u5176\u4ed6\u5e94\u7528\u7684authorities\u65f6\uff0c\u9700\u8981\u5c06xxxxxxxx\u6539\u4e3a\u81ea\u8eab\u5e94\u7528\u7684authorities\uff0c\u5426\u5219\u65e0\u6cd5\u6388\u6743\u3002 3. \u5bf9\u4e8e\u81ea\u8eab\u5e94\u7528\u7684\u8d44\u6e90\u6587\u4ef6, \u53ef\u4f7f\u7528\u4f7f\u7528android.resource\u534f\u8bae\uff0c\u65e0\u9700\u6388\u6743\u3002 ``` Uri uri = Uri.parse(\"android.resource://\u201c+ context.getPackageName() + \"/raw/test.mp3\") ``` > \u5907\u6ce8\uff1a\u4ece android 7.0\u5f00\u59cb\uff0c\u5982\u679c\u5e94\u7528\u7684targetSdkVersion>=24\uff0c\u5219\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u4f20\u9012uri\u4e0d\u80fd\u518d\u4f7f\u7528file://\u534f\u8bae\uff0c\u5426\u5219\u5c06\u629b\u51faFileUriExposedException","title":"1. Android 7.0 Notification Sound Issue"},{"location":"dmg/","text":"DMG\u5236\u4f5c \u672a\u52a0\u5bc6dmg hdiutil create -srcfolder ./docs ##\u8f93\u5165\u76ee\u5f55 -ov a.dmg ##\u8f93\u51fa \u52a0\u5bc6dmg echo -n \"password\" | hdiutil create -encryption -stdinpass -srcfolder ./docs encrypted.dmg \u5c06dmg\u8f6c\u6362\u4e3a\u53ef\u8bfb\u5199\u6a21\u5f0f hdiutil convert input.dmg -format UDRW -o output.dmg iso\u5236\u4f5c hdiutil makehybrid -iso <srcFolder> -o dest.iso hdiutil\u53c2\u6570\u67e5\u8be2\uff1a https://ss64.com/osx/hdiutil.html","title":"DMG"},{"location":"dmg/#dmg","text":"\u672a\u52a0\u5bc6dmg hdiutil create -srcfolder ./docs ##\u8f93\u5165\u76ee\u5f55 -ov a.dmg ##\u8f93\u51fa \u52a0\u5bc6dmg echo -n \"password\" | hdiutil create -encryption -stdinpass -srcfolder ./docs encrypted.dmg \u5c06dmg\u8f6c\u6362\u4e3a\u53ef\u8bfb\u5199\u6a21\u5f0f hdiutil convert input.dmg -format UDRW -o output.dmg iso\u5236\u4f5c hdiutil makehybrid -iso <srcFolder> -o dest.iso hdiutil\u53c2\u6570\u67e5\u8be2\uff1a https://ss64.com/osx/hdiutil.html","title":"DMG\u5236\u4f5c"},{"location":"eventbus/","text":"","title":"Eventbus"},{"location":"ffmpeg/","text":"\u89c6\u9891\u538b\u7f29 ffmpeg -i input.mp4 ##\u8f93\u5165 -c:v libx264 ##\u89c6\u9891\u7f16\u7801 -preset slow ##\u9884\u7f6e\u901f\u5ea6, \u8d8a\u6162\u753b\u8d28\u8d8a\u597d, \u53ef\u9009ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow, placebo -c:a copy ##\u97f3\u9891\u7f16\u7801 -b:v 3000k ##\u89c6\u9891\u8f93\u51fa\u7801\u7387 -r 30 ##\u8f93\u51fa\u5e27\u7387 -crf 18 ##\u52a8\u6001\u7801\u7387\uff0c18~28\u662f\u4e00\u4e2a\u5408\u7406\u7684\u8303\u56f4, 18\u88ab\u8ba4\u4e3a\u662f\u89c6\u89c9\u65e0\u635f\u7684. -fs 10MB ##\u8f93\u51fa\u6587\u4ef6\u5927\u5c0f\u6307\u5b9a -s 500\u00d7500 #\u8f93\u51fa\u89c6\u9891\u5c3a\u5bf8 -threads 1 #\u5904\u7406\u7ebf\u7a0b\u6570\uff0c\u5f71\u54cdCPU\u6d88\u8017 output.mp4 ##\u8f93\u51fa \u89c6\u9891\u526a\u5207 ffmpeg -ss 00:01:00 ##\u6307\u5b9a\u526a\u5207\u8d77\u70b9 -i input.mp4 ##\u8f93\u5165 -t 00:03:00 ##\u53ef\u9009\uff0c\u6307\u5b9a\u526a\u5207\u65f6\u957f(\u6216-t 180) -to 00:04:00 ##\u53ef\u9009\uff0c\u6307\u5b9a\u526a\u5207\u7ed3\u675f\u70b9(\u6216-t0 180) -c copy ## \u65e0\u9700\u7f16\u7801\uff0c\u76f4\u63a5copy output.mp4 ##\u8f93\u51fa \u89c6\u9891\u5408\u5e76 #filelist.txt file 'input1.mkv' file 'input2.mkv' file 'input3.mkv' ffmpeg -f concat -i filelist.txt -c copy output.mkv ffmpeg\u4e0b\u8f7d\uff1a https://ffmpeg.zeranoe.com/builds/macos64/static/","title":"FFMPEG"},{"location":"ffmpeg/#_1","text":"ffmpeg -i input.mp4 ##\u8f93\u5165 -c:v libx264 ##\u89c6\u9891\u7f16\u7801 -preset slow ##\u9884\u7f6e\u901f\u5ea6, \u8d8a\u6162\u753b\u8d28\u8d8a\u597d, \u53ef\u9009ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow, placebo -c:a copy ##\u97f3\u9891\u7f16\u7801 -b:v 3000k ##\u89c6\u9891\u8f93\u51fa\u7801\u7387 -r 30 ##\u8f93\u51fa\u5e27\u7387 -crf 18 ##\u52a8\u6001\u7801\u7387\uff0c18~28\u662f\u4e00\u4e2a\u5408\u7406\u7684\u8303\u56f4, 18\u88ab\u8ba4\u4e3a\u662f\u89c6\u89c9\u65e0\u635f\u7684. -fs 10MB ##\u8f93\u51fa\u6587\u4ef6\u5927\u5c0f\u6307\u5b9a -s 500\u00d7500 #\u8f93\u51fa\u89c6\u9891\u5c3a\u5bf8 -threads 1 #\u5904\u7406\u7ebf\u7a0b\u6570\uff0c\u5f71\u54cdCPU\u6d88\u8017 output.mp4 ##\u8f93\u51fa","title":"\u89c6\u9891\u538b\u7f29"},{"location":"ffmpeg/#_2","text":"ffmpeg -ss 00:01:00 ##\u6307\u5b9a\u526a\u5207\u8d77\u70b9 -i input.mp4 ##\u8f93\u5165 -t 00:03:00 ##\u53ef\u9009\uff0c\u6307\u5b9a\u526a\u5207\u65f6\u957f(\u6216-t 180) -to 00:04:00 ##\u53ef\u9009\uff0c\u6307\u5b9a\u526a\u5207\u7ed3\u675f\u70b9(\u6216-t0 180) -c copy ## \u65e0\u9700\u7f16\u7801\uff0c\u76f4\u63a5copy output.mp4 ##\u8f93\u51fa","title":"\u89c6\u9891\u526a\u5207"},{"location":"ffmpeg/#_3","text":"#filelist.txt file 'input1.mkv' file 'input2.mkv' file 'input3.mkv' ffmpeg -f concat -i filelist.txt -c copy output.mkv ffmpeg\u4e0b\u8f7d\uff1a https://ffmpeg.zeranoe.com/builds/macos64/static/","title":"\u89c6\u9891\u5408\u5e76"},{"location":"glide/","text":"glide\u67b6\u6784\u56fe glide\u67b6\u6784\u5206\u6790 glide\u914d\u7f6e\uff1a\u901a\u8fc7GlideModule\u914d\u7f6e public class MyGlideModule implements GlideMGlideModuleodule { @Override public void applyOptions(Context context, GlideBuilder builder) { //\u8bbe\u7f6e\u56fe\u7247\u683c\u5f0f\u3001\u8bbe\u7f6e\u7f13\u5b58\u76ee\u5f55\u3001\u8bbe\u7f6e\u5185\u5b58\u548c\u786c\u76d8\u7f13\u5b58\u5927\u5c0f\u7b49 buidler.setDecodeFormat(DecodeFormat.PREFER_ARGB_8888); } @Override public void registerComponents(Context context, Glide glide) { //\u6ce8\u518c\u81ea\u5b9a\u4e49\u7ec4\u4ef6 glide.register(MyDataModel.class, InputStream.class, new MyUrlLoader.Factory()); } } \u6ce8\u518c\u7ec4\u4ef6\u7684\u76ee\u7684\u5c31\u662f\u544a\u8bc9Glide\uff0c\u5f53\u6211\u4eec\u8c03\u7528 load(xxxx) \u65b9\u6cd5\u65f6\uff0c\u5e94\u8be5\u7528\u4ec0\u4e48\u65b9\u5f0f\u6765\u83b7\u53d6\u8fd9\u4e2axxxx\u6240\u6307\u5411\u7684\u8d44\u6e90\u3002 register \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u6211\u4eec load(xxxx) \u7684\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5bf9\u5e94\u7684\u8f93\u5165\u6d41\uff0c\u800c\u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f\u5b9a\u4e49\u83b7\u53d6\u8d44\u6e90\u7684\u65b9\u5f0f\u3002 Glide(Engine engine, MemoryCache memoryCache, BitmapPool bitmapPool, Context context, DecodeFormat decodeFormat) { //Glide\u9ed8\u8ba4\u6ce8\u518c\u7684\u7ec4\u4ef6. register(File.class, ParcelFileDescriptor.class, new FileDescriptorFileLoader.Factory()); register(File.class, InputStream.class, new StreamFileLoader.Factory()); register(int.class, ParcelFileDescriptor.class, new FileDescriptorResourceLoader.Factory()); register(int.class, InputStream.class, new StreamResourceLoader.Factory()); register(Integer.class, ParcelFileDescriptor.class, new FileDescriptorResourceLoader.Factory()); register(Integer.class, InputStream.class, new StreamResourceLoader.Factory()); register(String.class, ParcelFileDescriptor.class, new FileDescriptorStringLoader.Factory()); register(String.class, InputStream.class, new StreamStringLoader.Factory()); register(Uri.class, ParcelFileDescriptor.class, new FileDescriptorUriLoader.Factory()); register(Uri.class, InputStream.class, new StreamUriLoader.Factory()); register(URL.class, InputStream.class, new StreamUrlLoader.Factory()); register(GlideUrl.class, InputStream.class, new HttpUrlGlideUrlLoader.Factory()); register(byte[].class, InputStream.class, new StreamByteArrayLoader.Factory()); } GlideModule\u7684\u521d\u59cb\u5316\uff1a manifest.xml \u914d\u7f6e meta-data \u8282\u70b9\uff0cGlide\u5728\u8c03\u7528 get(context) \u65f6\u8bfb\u53d6\u5e76\u521d\u59cb\u5316\u3002 glide\u751f\u547d\u5468\u671f\u7ba1\u7406\uff1a\u4f7f\u7528\u6302\u8f7dfragment\u7684\u65b9\u5f0f\u76d1\u542cActivity\u751f\u547d\u5468\u671f\u3002 \u5bf9\u4e8e\u56fe\u7247\u8bf7\u6c42\u4f1a\u5728onStop\u7684\u65f6\u5019\u81ea\u52a8\u6682\u505c\uff0c\u7136\u540e\u5728onStart\u7684\u65f6\u5019\u91cd\u65b0\u542f\u52a8\uff0cgif\u7684\u52a8\u753b\u4e5f\u4f1a\u5728onStop\u7684\u65f6\u5019\u505c\u6b62\uff0c\u4ee5\u514d\u5728\u540e\u53f0\u6d88\u8017\u7535\u91cf\uff0c \u6b64\u5916\uff0c\u5f53\u8bbe\u5907\u7684\u7f51\u7edc\u72b6\u6001\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\uff0c\u6240\u6709\u5931\u8d25\u7684\u8bf7\u6c42\u4f1a\u81ea\u52a8\u91cd\u542f\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\u3002 glide\u9ed8\u8ba4\u7684\u8fdc\u7a0b\u4e0b\u8f7d\u4f7f\u7528 HttpURLConnection \uff0c\u76f8\u5173\u7c7b\u89c1\uff1a HttpUrlGlideUrlLoader \u548c HttpUrlFetcher \uff0c\u5982\u679c\u4f7f\u7528okHttp\uff0c\u9700\u8981\u4f7f\u7528\u5b98\u65b9\u4f9d\u8d56\u5e93\uff1a okhttp3-integration public class MyGlideModule implements GlideModule { ... @Override public void registerComponents(Context context, Registry registry) { //\u4f7f\u7528\u5b9a\u4e49\u7684OkhttpClient\u66ff\u6362\u539f\u6709\u7684\u8bf7\u6c42 registry.replace(GlideUrl.class, InputStream.class, new OkHttpUrlLoader.Factory()); } } glide\u56fe\u7247\u53d8\u6362\uff1a\u4f7f\u7528transform\u63a5\u53e3\uff0c\u7b2c\u4e09\u65b9\u5e93 glide-transformations \u5305\u542b\u5f88\u591a\u5e38\u7528\u53d8\u6362 glide\u52a8\u753b: \u4f7f\u7528 animate \u63a5\u53e3\uff0c\u8868\u73b0\u56fe\u50cf\u5230\u56fe\u50cf\u7684\u5e73\u6ed1\u8fc7\u6e21 glide\u7684\u7f13\u5b58\u6bd4Picasso\u590d\u6742\uff0cPicasso\u53ea\u7f13\u5b58\u4e86\u5168\u5c3a\u5bf8\u7684\u56fe\u7247\uff0c\u800c Glide \u4e0d\u4ec5\u7f13\u5b58\u4e86\u5168\u5c3a\u5bf8\u7684\u56fe\uff0c\u8fd8\u4f1a\u6839\u636e ImageView \u5927\u5c0f\u6240\u751f\u6210\u7684\u56fe\u4e5f\u4f1a\u7f13\u5b58\u8d77\u6765 glide\u652f\u6301gif\u548cvideo glide\u9ed8\u8ba4\u4e0d\u652f\u6301webp\uff0c\u9700\u8981\u501f\u52a9\u7b2c\u4e09\u65b9\u5e93\uff1a GlideWebpSupport \uff08\u5176\u4f9d\u8d56 fresco-webp \u5b9e\u73b0\u5e93\uff09 glide\u6700\u65b0\u5927\u7248\u672c\uff1aGlide v4","title":"Glide\u77e5\u8bc6\u70b9"},{"location":"hotFix/","text":"multidex\u7c7b\u52a0\u8f7d\u65b9\u6848 multidex\u7c7b\u52a0\u8f7d\u65b9\u6848\u662f\u8981\u6c42\u5e94\u7528\u91cd\u542f\u540e\uff0c\u4f18\u5148\u52a0\u8f7d\u8865\u4e01\u5305\u4e2d\u7684\u7c7b\uff0c\u4ece\u800c\u8fbe\u5230\u4fee\u590d\u7684\u76ee\u7684\uff0c\u4e3a\u4ec0\u4e48\u8981\u6c42\u91cd\u542f\u5462\uff1f\u56e0\u4e3a\u5728java\u4e2d\u7c7b\u662f\u65e0\u6cd5\u5378\u8f7d\u7684\uff0c\u5982\u679c\u8981\u91cd\u65b0\u52a0\u8f7d\u7c7b\uff0c\u53ea\u80fd\u91cd\u542fjvm\uff0c\u56e0\u6b64\u8fd9\u7c7b\u4fee\u590d\u65b9\u6848\u7684\u7279\u70b9\u662f \u4e0d\u80fd\u5373\u65f6\u751f\u6548 \uff0c\u9700\u8981\u51b7\u542f\u52a8\u3002 \u6211\u4eec\u4eceClassLoader\u7c7b\u52a0\u8f7d\u7684\u903b\u8f91( ClassLoader )\u4e2d\u53ef\u77e5\uff0c\u5728android\u4e2d\uff0cclassLoader\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u5176\u5b9e\u662f\u6309\u987a\u5e8f\u904d\u5386dexElements\u6570\u7ec4\uff0c\u4ece\u6bcf\u4e00\u4e2aDexFile\u4e2d\u5c1d\u8bd5\u52a0\u8f7d\u7c7b\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u4e0b\u6b21\u5c31\u4e0d\u4f1a\u91cd\u590d\u52a0\u8f7d\u4e86\uff0c\u800c\u662f\u4ece\u5df2\u52a0\u8f7d\u7684\u7c7b\u4e2d\u76f4\u63a5\u67e5\u627e\u3002 \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u8865\u4e01\u7c7b\u6253\u5305\u6210patch.dex\uff0c\u653e\u5230dexElement\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u6837\u865a\u62df\u673a\u5728\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u4f1a\u5148\u627e\u5230\u6211\u4eec\u8865\u4e01\u5305patch.dex\u4e2d\u5df2\u7ecf\u4fee\u590d\u7684\u7c7b\uff0c\u800c\u6709\u95ee\u9898\u7684\u7c7b\u56e0\u4e3a\u6392\u5728\u540e\u9762\u7684dex\u4e2d\uff0c\u5c31\u4e5f\u6ca1\u6709\u673a\u4f1a\u88ab\u52a0\u8f7d\u3002 \u5b9e\u8df5 1\u3001\u4fee\u6539\u9700\u8981\u4fee\u590d\u7684\u7c7b package com.test.fix; public class Test() { public void test(){ //sout(\"\u51fabug\u4e86\"); fix(); } public void fix(){ sout(\"\u4fee\u590d\u4e86\"); } } 2\u3001\u7f16\u8bd1\u5e76\u627e\u5230\u8865\u4e01class\uff0c\u751f\u6210\u8865\u4e01\u5305 ##\u751f\u6210jar jar cvf class.jar com/test/fix/Test.class ##\u751f\u6210dex\u6587\u4ef6\uff0c\u5728patchDex.jar\u4e2d dx --dex --output=patchDex.jar class.jar 3\u3001\u4e0b\u53d1patch\u5230\u7ec8\u7aef\u8fdb\u884c\u4fee\u590d public class MyApplication extends Application { @Override public void onCreate() { super.onCreate(); String dexPath = Environment.getExternalStorageDirectory().getAbsolutePath().concat(\"/patchDex.jar\"); File file = new File(dexPath); //\u5982\u679c\u8865\u4e01\u5b58\u5728\u5c31\u6267\u884c\u4fee\u590d if (file.exists()) { inject(dexPath); } } private void inject(String dexFile) { try { // \u83b7\u53d6\u4e3bclasses\u7684dexElements Class<?> cl = Class.forName(\"dalvik.system.BaseDexClassLoader\"); Object pathList = getField(cl, \"pathList\", getClassLoader()); Object baseElements = getField(pathList.getClass(), \"dexElements\", pathList); //\u4f7f\u7528dexClassLoader\u52a0\u8f7dpatch.dex String dexopt = getCacheDir().getAbsolutePath(); DexClassLoader dexClassLoader = new DexClassLoader(dexFile, dexopt, dexopt, getClassLoader()); //\u83b7\u53d6patch.dex\u7684dexElements Object obj = getField(cl, \"pathList\", dexClassLoader); Object patchDexElements = getField(obj.getClass(), \"dexElements\", obj); //\u5408\u5e76\u4e24\u4e2adexElements, patchDexElements\u653e\u524d\u9762 Object combineElements = combineArray(patchDexElements, baseElements); //\u5c06\u5408\u5e76\u540e\u7684Element\u6570\u7ec4\u91cd\u65b0\u8d4b\u503c\u7ed9app\u7684classLoader setField(pathList.getClass(), \"dexElements\", pathList, combineElements); } catch (ClassNotFoundException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (NoSuchFieldException e) { e.printStackTrace(); } } private Object getField(Class<?> cl, String fieldName, Object object) throws NoSuchFieldException, IllegalAccessException { Field field = cl.getDeclaredField(fieldName); field.setAccessible(true); return field.get(object); } private void setField(Class<?> cl, String fieldName, Object object, Object value) throws NoSuchFieldException, IllegalAccessException { Field field = cl.getDeclaredField(fieldName); field.setAccessible(true); field.set(object, value); } private Object combineArray(Object firstArr, Object secondArr) { int firstLength = Array.getLength(firstArr); int secondLength = Array.getLength(secondArr); int length = firstLength + secondLength; Class<?> componentType = firstArr.getClass().getComponentType(); Object newArr = Array.newInstance(componentType, length); for (int i = 0; i < length; i++) { if (i < firstLength) { Array.set(newArr, i, Array.get(firstArr, i)); } else { Array.set(newArr, i, Array.get(secondArr, i - firstLength)); } } return newArr; } } \u8be5\u65b9\u6848\u5728android 4.x\u7248\u672c\u4e0a\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5f02\u5e38\uff1a java.lang.IllegalAccessError: Class ref in pre-verified class resolved to unexpected implementation \u539f\u56e0\u662f\uff1a 1\u3001\u5728apk\u5b89\u88c5\u7684\u65f6\u5019\uff0cDalvik\u865a\u62df\u673a\u4f1a\u5c06dex\u4f18\u5316\u6210odex\u540e\u624d\u62ff\u53bb\u6267\u884c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u5bf9\u6240\u6709class\u4e00\u4e2a\u6821\u9a8c\u3002 2\u3001\u6821\u9a8c\u65b9\u5f0f\uff1a\u5047\u8bbeA\u8be5\u7c7b\u5728\u5b83\u7684static\u65b9\u6cd5\uff0cprivate\u65b9\u6cd5\uff0c\u6784\u9020\u51fd\u6570\uff0coverride\u65b9\u6cd5\u4e2d\u76f4\u63a5\u5f15\u7528\u5230B\u7c7b\u3002\u5982\u679cA\u7c7b\u548cB\u7c7b\u5728\u540c\u4e00\u4e2adex\u4e2d\uff0c\u90a3\u4e48A\u7c7b\u5c31\u4f1a\u88ab\u6253\u4e0a CLASS_ISPREVERIFIED \u6807\u8bb0\uff0c\u53cd\u4e4b\u53ea\u8981\u5728static\u65b9\u6cd5\uff0c\u6784\u9020\u65b9\u6cd5\uff0cprivate\u65b9\u6cd5\uff0coverride\u65b9\u6cd5\u4e2d\u76f4\u63a5\u5f15\u7528\u4e86\u5176\u4ed6dex\u4e2d\u7684\u7c7b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u6253\u4e0a CLASS_ISPREVERIFIED \u6807\u8bb0\u3002 3\u3001\u88ab\u6253\u4e0a\u8fd9\u4e2a\u6807\u8bb0\u7684\u7c7b\u5c31\u4e0d\u80fd\u518d\u5f15\u7528\u5176\u4ed6dex\u4e2d\u7684\u7c7b\uff0c\u5426\u5219\u5c31\u4f1a\u62a5\u4e0a\u9762\u7684\u9519\u8bef\u3002 \u5728\u6211\u4eec\u7684\u5b9e\u8df5\u4e2d\uff0cTest\u7c7b\u548c\u8c03\u7528Test\u7c7b\u7684MainActivity(\u6bd4\u5982)\u672c\u8eab\u662f\u5728\u540c\u4e00\u4e2adex\u4e2d\u7684\uff0c\u6240\u4ee5MainActivity\u88ab\u6253\u4e0a\u4e86 CLASS_ISPREVERIFIED \u6807\u8bb0\uff0c\u800c\u6211\u4eec\u4fee\u590dbug\u7684\u65f6\u5019\u5374\u5f15\u7528\u4e86\u53e6\u5916\u4e00\u4e2adex\u4e2d\u7684Test\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u62a5\u9519\u4e86\u3002 QFix\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u91c7\u53d6\u4e86\u7f16\u8bd1\u65f6\u63d2\u6869\u7684\u505a\u6cd5\u3002 \u5177\u4f53\u6765\u8bf4\u5c31\u662f: \u5728\u6240\u6709\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u63d2\u5165\u4e00\u6bb5\u4ee3\u7801\uff1a System.out.println(AntilazyLoad.class); \u8fd9\u6837\u5f53\u5b89\u88c5apk\u7684\u65f6\u5019\uff0cclasses.dex\u5185\u7684\u7c7b\u90fd\u4f1a\u5f15\u7528\u4e00\u4e2a\u5728\u4e0d\u76f8\u540cdex\u4e2d\u7684AntilazyLoad\u7c7b\uff0c\u8fd9\u6837\u5c31\u9632\u6b62\u4e86\u7c7b\u88ab\u6253\u4e0a CLASS_ISPREVERIFIED \u7684\u6807\u5fd7\u4e86\uff0c\u53ea\u8981\u6ca1\u88ab\u6253\u4e0a\u8fd9\u4e2a\u6807\u5fd7\u7684\u7c7b\u90fd\u53ef\u4ee5\u8fdb\u884c\u6253\u8865\u4e01\u64cd\u4f5c\u3002 \u4f18\u70b9\uff1a * \u4e0d\u9700\u8981\u8003\u8651\u5bf9dalvik\u865a\u62df\u673a\u548cart\u865a\u62df\u673a\u505a\u9002\u914d * \u4ee3\u7801\u662f\u975e\u4fb5\u5165\u5f0f\u7684\uff0c\u5bf9apk\u4f53\u79ef\u5f71\u54cd\u4e0d\u5927 \u7f3a\u70b9\uff1a * \u9700\u8981\u4e0b\u6b21\u542f\u52a8\u624d\u4f1a\u751f\u6548 * \u6027\u80fd\u635f\u8017\uff0c\u5373Dalvik\u5e73\u53f0\u4e3a\u9632\u6b62\u7c7b\u6253\u4e0aCLASS_ISPREVERIFIED\u6807\u5fd7\uff0c\u63d2\u6869\u5bfc\u81f4\u7684\u6027\u80fd\u635f\u8017\uff0cArt\u5e73\u53f0\u7531\u4e8e\u5730\u5740\u504f\u79fb\u95ee\u9898\u5bfc\u81f4\u8865\u4e01\u5305\u53ef\u80fd\u8fc7\u5927\u7684\u95ee\u9898 Dex\u66ff\u6362\u65b9\u6848 \u5982\u679cQFix\u6ca1\u6709\u4e0a\u9762\u7684\u7f3a\u9677\uff0c\u4e5f\u53ef\u80fd\u5c31\u4e0d\u4f1a\u6709\u5fae\u4fe1\u7684Tinker\u65b9\u6848\u4e86\u3002\u5fae\u4fe1tinker\u91c7\u7528\u5c06\u65b0\u65e7apk\u505adiff\uff0c\u5f97\u5230diff.dex\uff0c\u7136\u540e\u4e0b\u53d1diff.dex\u7ed9\u7ec8\u7aef\u624b\u673a\uff0c\u7136\u540e\u5728\u8fd0\u884c\u65f6\u5c06diff.dex\u548c\u624b\u673a\u4e2d\u65e7\u7684classes.dex\u505a\u5408\u5e76\uff0c\u751f\u6210\u65b0\u7684classes.dex\uff0c\u6700\u540e\u4ecd\u7136\u91c7\u7528\u4e0a\u9762\u7684\u7c7b\u52a0\u8f7d\u65b9\u6cd5\uff0c\u5728\u542f\u52a8\u65f6\u5c06\u65b0\u7684classes.dex\u5b89\u6392\u5230dexElement\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u7531\u4e8e\u4e0d\u9700\u8981\u4ee3\u7801\u63d2\u6869\uff0c\u6027\u80fd\u6bd4QFix\u6709\u5f88\u5927\u63d0\u9ad8\u3002 \u5177\u4f53\u53c2\u8003\uff1a https://github.com/Tencent/tinker \u4f18\u70b9\uff1a * \u514b\u670d\u4e86QFix\u7684\u6027\u80fd\u7f3a\u9677 * \u652f\u6301\u66ff\u6362So\u5e93\u4ee5\u53ca\u8d44\u6e90 \u7f3a\u70b9\uff1a * \u9700\u8981\u4e0b\u6b21\u542f\u52a8\u624d\u4f1a\u751f\u6548 * \u5b9e\u73b0\u590d\u6742 Tinker\u6027\u80fd\u75db\u70b9\uff1a * Dex\u5408\u5e76\u5185\u5b58\u6d88\u8017\u5728vm head\u4e0a\uff0c\u5bb9\u6613OOM\uff0c\u6700\u540e\u5bfc\u81f4\u5408\u5e76\u5931\u8d25\u3002 * \u5982\u679c\u672c\u8eabapp\u5360\u7528\u5185\u5b58\u5df2\u7ecf\u6bd4\u8f83\u9ad8\uff0c\u53ef\u80fd\u5bb9\u6613\u5bfc\u81f4app\u672c\u7cfb\u7edf\u6740\u6389\u3002 Instant Run\u70ed\u63d2\u62d4\u65b9\u6848 \u5728 Instant Run \u6587\u4e2d\u53ef\u4ee5\u4e86\u89e3Instant Run\u7684\u5927\u81f4\u539f\u7406\u3002 \u7f8e\u56e2Robust\u63d2\u4ef6\u501f\u9274\u4e86Instant Run\u539f\u7406\uff0c\u5bf9\u6bcf\u4e2a\u4e1a\u52a1\u4ee3\u7801\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u5728\u7f16\u8bd1\u6253\u5305\u9636\u6bb5\u81ea\u52a8\u63d2\u5165\u4e86\u4e00\u6bb5\u4ee3\u7801\uff0c\u540c\u65f6\u7ed9\u6bcf\u4e2aclass\u90fd\u589e\u52a0\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3aChangeQuickRedirect\u7684\u9759\u6001\u6210\u5458\uff0c\u800c\u5728\u6bcf\u4e2a\u65b9\u6cd5\u524d\u90fd\u63d2\u5165\u4e86\u4f7f\u7528changeQuickRedirect\u76f8\u5173\u7684\u903b\u8f91\uff0c\u5f53 changeQuickRedirect\u4e0d\u4e3anull\u65f6\uff0c\u5c31\u4f1a\u6267\u884c\u5230accessDispatch\u4ece\u800c\u66ff\u6362\u6389\u4e4b\u524d\u8001\u7684\u903b\u8f91\uff0c\u8fbe\u5230\u4fee\u590d\u7684\u76ee\u7684\u3002\u63d2\u5165\u8fc7\u7a0b\u5bf9\u4e1a\u52a1\u5f00\u53d1\u662f\u5b8c\u5168\u900f\u660e\u7684\u3002 public long getIndex() { return 100; } ``` \u4ee5\u4e0a\u4ee3\u7801\u7ecf\u8fc7Robust\u6846\u67b6\u6ce8\u5165\u540e\u4f1a\u88ab\u5904\u7406\u6210: ```java public static ChangeQuickRedirect changeQuickRedirect; public long getIndex() { if(changeQuickRedirect != null) { if(PatchProxy.isSupport(new Object[0], this, changeQuickRedirect, false)) { return ((Long)PatchProxy.accessDispatch(new Object[0], this, changeQuickRedirect, false)).longValue(); } } return 100L; } \u5f53\u6709\u8865\u4e01\u7684\u65f6\u5019changeQuickRedirect\u7684\u503c\u5c31\u4e0d\u518d\u662f\u7a7a\uff0c\u6240\u4ee5\u6267\u884c\u5230\u9700\u8981\u70ed\u4fee\u7684\u65b9\u6cd5\u65f6\u5c31\u4f1a\u8d70\u5230\u8865\u4e01\u7684\u65b9\u6cd5\u5b9e\u73b0\u800c\u4e0d\u662f\u539f\u903b\u8f91\u8fbe\u5230\u4fee\u590d\u76ee\u7684 \u6bcf\u4e2a\u8865\u4e01\u5305\u7684\u7ed3\u6784 PatchesInfoImpl\uff1a\u8865\u4e01\u5305\u8bf4\u660e\u7c7b\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8865\u4e01\u5bf9\u8c61\uff1b\u6bcf\u4e2a\u5bf9\u8c61\u5305\u542b\u88ab\u4fee\u590d\u7c7b\u540d\u53ca\u8be5\u7c7b\u5bf9\u5e94\u7684\u8865\u4e01\u7c7b\u3002 public class PatchesInfoImpl implements PatchesInfo { public List getPatchedClassesInfo() { ArrayList localArrayList = new ArrayList(); localArrayList.add(new PatchedClassInfo(\"com.xxx.android.robustdemo.MainActivity\", \"com.bytedance.robust.patch.MainActivityPatchControl\")); com.meituan.robust.utils.EnhancedRobustUtils.isThrowable = false; return localArrayList; } } PatchesInfoImpl\uff1a\u8865\u4e01\u5305\u8bf4\u660e\u7c7b\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8865\u4e01\u5bf9\u8c61\uff1b\u6bcf\u4e2a\u5bf9\u8c61\u5305\u542b\u88ab\u4fee\u590d\u7c7b\u540d\u53ca\u8be5\u7c7b\u5bf9\u5e94\u7684\u8865\u4e01\u7c7b\u3002 public class MainActivityPatchControl implements ChangeQuickRedirect{ ... //1.\u65b9\u6cd5\u662f\u5426\u652f\u6301\u70ed\u4fee public boolean isSupport(String paramString, Object[] paramArrayOfObject) { Log.d(\"robust\", \"arrivied in isSupport \" + paramString + \" paramArrayOfObject \" + paramArrayOfObject); String str = paramString.split(\":\")[3]; Log.d(\"robust\", \"in isSupport assemble method number is \" + str); Log.d(\"robust\", \"arrivied in isSupport \" + paramString + \" paramArrayOfObject \" + paramArrayOfObject + \" isSupport result is \" + \":2:\".contains(new StringBuffer().append(\":\").append(str).append(\":\").toString())); return \":2:\".contains(\":\" + str + \":\"); } //2.\u8c03\u7528\u8865\u4e01\u7684\u70ed\u4fee\u903b\u8f91 public Object accessDispatch(String paramString, Object[] paramArrayOfObject) { for (;;) { try { Object localObject = new java/lang/StringBuffer; ((StringBuffer)localObject).<init>(); if (!paramString.split(\":\")[2].equals(\"false\")) { continue; } if (keyToValueRelation.get(paramArrayOfObject[(paramArrayOfObject.length - 1)]) != null) { continue; } localObject = new com/bytedance/robust/patch/MainActivityPatch; ((MainActivityPatch)localObject).<init>(paramArrayOfObject[(paramArrayOfObject.length - 1)]); keyToValueRelation.put(paramArrayOfObject[(paramArrayOfObject.length - 1)], null); paramArrayOfObject = (Object[])localObject; localObject = paramString.split(\":\")[3]; paramString = new java/lang/StringBuffer; paramString.<init>(); if (!\"2\".equals(localObject)) { continue; } paramString = paramArrayOfObject.RobustPublicgetShowText(); }catch (Throwable paramString){ ...} return paramString; paramArrayOfObject = (MainActivityPatch)keyToValueRelation.get(paramArrayOfObject[(paramArrayOfObject.length - 1)]); continue; //\u5177\u4f53\u5b9e\u73b0\u903b\u8f91\u5728Patch\u4e2d paramArrayOfObject = new MainActivityPatch(null); } } } Patch\uff1a\u5177\u4f53\u8865\u4e01\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002\u8be5\u7c7b\u4e2d\u5305\u542b\u88ab\u4fee\u590d\u7c7b\u4e2d\u9700\u8981\u70ed\u4fee\u7684\u65b9\u6cd5\u3002 public class MainActivityPatch { MainActivity originClass; public MainActivityPatch(Object paramObject) { this.originClass = ((MainActivity)paramObject); } //\u70ed\u4fee\u7684\u65b9\u6cd5\u5177\u4f53\u5b9e\u73b0 private String getShowText() { Object localObject = getRealParameter(new Object[] { \"Error Text\" }); localObject = (String)EnhancedRobustUtils.invokeReflectConstruct(\"java.lang.String\", (Object[])localObject, new Class[] { String.class }); localObject = getRealParameter(new Object[] { \"Fixed Text\" }); return (String)EnhancedRobustUtils.invokeReflectConstruct(\"java.lang.String\", (Object[])localObject, new Class[] { String.class }); } } \u4f18\u70b9\uff1a \u51e0\u4e4e\u4e0d\u4f1a\u5f71\u54cd\u6027\u80fd\uff08\u65b9\u6cd5\u8c03\u7528\uff0c\u51b7\u542f\u52a8\uff09 \u652f\u6301Android2.3-8.x\u7248\u672c \u9ad8\u517c\u5bb9\u6027\uff08Robust\u53ea\u662f\u5728\u6b63\u5e38\u7684\u4f7f\u7528DexClassLoader\uff09\u3001\u9ad8\u7a33\u5b9a\u6027\uff0c\u4fee\u590d\u6210\u529f\u7387\u9ad8\u8fbe99.9% \u8865\u4e01\u5b9e\u65f6\u751f\u6548\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8 \u652f\u6301\u65b9\u6cd5\u7ea7\u522b\u7684\u4fee\u590d\uff0c\u5305\u62ec\u9759\u6001\u65b9\u6cd5 \u652f\u6301\u589e\u52a0\u65b9\u6cd5\u548c\u7c7b \u652f\u6301ProGuard\u7684\u6df7\u6dc6\u3001\u5185\u8054\u3001\u4f18\u5316\u7b49\u64cd\u4f5c \u7f3a\u70b9\uff1a \u4ee3\u7801\u662f\u4fb5\u5165\u5f0f\u7684\uff0c\u4f1a\u5728\u539f\u6709\u7684\u7c7b\u4e2d\u52a0\u5165\u76f8\u5173\u4ee3\u7801 so\u548c\u8d44\u6e90\u7684\u66ff\u6362\u6682\u65f6\u4e0d\u652f\u6301 \u4f1a\u589e\u5927apk\u7684\u4f53\u79ef\uff0c\u5e73\u5747\u4e00\u4e2a\u51fd\u6570\u4f1a\u6bd4\u539f\u6765\u589e\u52a017.47\u4e2a\u5b57\u8282\uff0c10\u4e07\u4e2a\u51fd\u6570\u4f1a\u589e\u52a01.67M\u3002 \u4f1a\u589e\u52a0\u5c11\u91cf\u65b9\u6cd5\u6570\uff0c\u4f7f\u7528\u4e86Robust\u63d2\u4ef6\u540e\uff0c\u539f\u6765\u80fd\u88abProGuard\u5185\u8054\u7684\u51fd\u6570\u4e0d\u80fd\u88ab\u5185\u8054\u4e86 \u5e95\u5c42\u65b9\u6cd5\u66ff\u6362\u65b9\u6848","title":"hotFix"},{"location":"hotFix/#multidex","text":"multidex\u7c7b\u52a0\u8f7d\u65b9\u6848\u662f\u8981\u6c42\u5e94\u7528\u91cd\u542f\u540e\uff0c\u4f18\u5148\u52a0\u8f7d\u8865\u4e01\u5305\u4e2d\u7684\u7c7b\uff0c\u4ece\u800c\u8fbe\u5230\u4fee\u590d\u7684\u76ee\u7684\uff0c\u4e3a\u4ec0\u4e48\u8981\u6c42\u91cd\u542f\u5462\uff1f\u56e0\u4e3a\u5728java\u4e2d\u7c7b\u662f\u65e0\u6cd5\u5378\u8f7d\u7684\uff0c\u5982\u679c\u8981\u91cd\u65b0\u52a0\u8f7d\u7c7b\uff0c\u53ea\u80fd\u91cd\u542fjvm\uff0c\u56e0\u6b64\u8fd9\u7c7b\u4fee\u590d\u65b9\u6848\u7684\u7279\u70b9\u662f \u4e0d\u80fd\u5373\u65f6\u751f\u6548 \uff0c\u9700\u8981\u51b7\u542f\u52a8\u3002 \u6211\u4eec\u4eceClassLoader\u7c7b\u52a0\u8f7d\u7684\u903b\u8f91( ClassLoader )\u4e2d\u53ef\u77e5\uff0c\u5728android\u4e2d\uff0cclassLoader\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u5176\u5b9e\u662f\u6309\u987a\u5e8f\u904d\u5386dexElements\u6570\u7ec4\uff0c\u4ece\u6bcf\u4e00\u4e2aDexFile\u4e2d\u5c1d\u8bd5\u52a0\u8f7d\u7c7b\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u4e0b\u6b21\u5c31\u4e0d\u4f1a\u91cd\u590d\u52a0\u8f7d\u4e86\uff0c\u800c\u662f\u4ece\u5df2\u52a0\u8f7d\u7684\u7c7b\u4e2d\u76f4\u63a5\u67e5\u627e\u3002 \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u8865\u4e01\u7c7b\u6253\u5305\u6210patch.dex\uff0c\u653e\u5230dexElement\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u6837\u865a\u62df\u673a\u5728\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u4f1a\u5148\u627e\u5230\u6211\u4eec\u8865\u4e01\u5305patch.dex\u4e2d\u5df2\u7ecf\u4fee\u590d\u7684\u7c7b\uff0c\u800c\u6709\u95ee\u9898\u7684\u7c7b\u56e0\u4e3a\u6392\u5728\u540e\u9762\u7684dex\u4e2d\uff0c\u5c31\u4e5f\u6ca1\u6709\u673a\u4f1a\u88ab\u52a0\u8f7d\u3002","title":"multidex\u7c7b\u52a0\u8f7d\u65b9\u6848"},{"location":"hotFix/#_1","text":"1\u3001\u4fee\u6539\u9700\u8981\u4fee\u590d\u7684\u7c7b package com.test.fix; public class Test() { public void test(){ //sout(\"\u51fabug\u4e86\"); fix(); } public void fix(){ sout(\"\u4fee\u590d\u4e86\"); } } 2\u3001\u7f16\u8bd1\u5e76\u627e\u5230\u8865\u4e01class\uff0c\u751f\u6210\u8865\u4e01\u5305 ##\u751f\u6210jar jar cvf class.jar com/test/fix/Test.class ##\u751f\u6210dex\u6587\u4ef6\uff0c\u5728patchDex.jar\u4e2d dx --dex --output=patchDex.jar class.jar 3\u3001\u4e0b\u53d1patch\u5230\u7ec8\u7aef\u8fdb\u884c\u4fee\u590d public class MyApplication extends Application { @Override public void onCreate() { super.onCreate(); String dexPath = Environment.getExternalStorageDirectory().getAbsolutePath().concat(\"/patchDex.jar\"); File file = new File(dexPath); //\u5982\u679c\u8865\u4e01\u5b58\u5728\u5c31\u6267\u884c\u4fee\u590d if (file.exists()) { inject(dexPath); } } private void inject(String dexFile) { try { // \u83b7\u53d6\u4e3bclasses\u7684dexElements Class<?> cl = Class.forName(\"dalvik.system.BaseDexClassLoader\"); Object pathList = getField(cl, \"pathList\", getClassLoader()); Object baseElements = getField(pathList.getClass(), \"dexElements\", pathList); //\u4f7f\u7528dexClassLoader\u52a0\u8f7dpatch.dex String dexopt = getCacheDir().getAbsolutePath(); DexClassLoader dexClassLoader = new DexClassLoader(dexFile, dexopt, dexopt, getClassLoader()); //\u83b7\u53d6patch.dex\u7684dexElements Object obj = getField(cl, \"pathList\", dexClassLoader); Object patchDexElements = getField(obj.getClass(), \"dexElements\", obj); //\u5408\u5e76\u4e24\u4e2adexElements, patchDexElements\u653e\u524d\u9762 Object combineElements = combineArray(patchDexElements, baseElements); //\u5c06\u5408\u5e76\u540e\u7684Element\u6570\u7ec4\u91cd\u65b0\u8d4b\u503c\u7ed9app\u7684classLoader setField(pathList.getClass(), \"dexElements\", pathList, combineElements); } catch (ClassNotFoundException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (NoSuchFieldException e) { e.printStackTrace(); } } private Object getField(Class<?> cl, String fieldName, Object object) throws NoSuchFieldException, IllegalAccessException { Field field = cl.getDeclaredField(fieldName); field.setAccessible(true); return field.get(object); } private void setField(Class<?> cl, String fieldName, Object object, Object value) throws NoSuchFieldException, IllegalAccessException { Field field = cl.getDeclaredField(fieldName); field.setAccessible(true); field.set(object, value); } private Object combineArray(Object firstArr, Object secondArr) { int firstLength = Array.getLength(firstArr); int secondLength = Array.getLength(secondArr); int length = firstLength + secondLength; Class<?> componentType = firstArr.getClass().getComponentType(); Object newArr = Array.newInstance(componentType, length); for (int i = 0; i < length; i++) { if (i < firstLength) { Array.set(newArr, i, Array.get(firstArr, i)); } else { Array.set(newArr, i, Array.get(secondArr, i - firstLength)); } } return newArr; } } \u8be5\u65b9\u6848\u5728android 4.x\u7248\u672c\u4e0a\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5f02\u5e38\uff1a java.lang.IllegalAccessError: Class ref in pre-verified class resolved to unexpected implementation \u539f\u56e0\u662f\uff1a 1\u3001\u5728apk\u5b89\u88c5\u7684\u65f6\u5019\uff0cDalvik\u865a\u62df\u673a\u4f1a\u5c06dex\u4f18\u5316\u6210odex\u540e\u624d\u62ff\u53bb\u6267\u884c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u5bf9\u6240\u6709class\u4e00\u4e2a\u6821\u9a8c\u3002 2\u3001\u6821\u9a8c\u65b9\u5f0f\uff1a\u5047\u8bbeA\u8be5\u7c7b\u5728\u5b83\u7684static\u65b9\u6cd5\uff0cprivate\u65b9\u6cd5\uff0c\u6784\u9020\u51fd\u6570\uff0coverride\u65b9\u6cd5\u4e2d\u76f4\u63a5\u5f15\u7528\u5230B\u7c7b\u3002\u5982\u679cA\u7c7b\u548cB\u7c7b\u5728\u540c\u4e00\u4e2adex\u4e2d\uff0c\u90a3\u4e48A\u7c7b\u5c31\u4f1a\u88ab\u6253\u4e0a CLASS_ISPREVERIFIED \u6807\u8bb0\uff0c\u53cd\u4e4b\u53ea\u8981\u5728static\u65b9\u6cd5\uff0c\u6784\u9020\u65b9\u6cd5\uff0cprivate\u65b9\u6cd5\uff0coverride\u65b9\u6cd5\u4e2d\u76f4\u63a5\u5f15\u7528\u4e86\u5176\u4ed6dex\u4e2d\u7684\u7c7b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u6253\u4e0a CLASS_ISPREVERIFIED \u6807\u8bb0\u3002 3\u3001\u88ab\u6253\u4e0a\u8fd9\u4e2a\u6807\u8bb0\u7684\u7c7b\u5c31\u4e0d\u80fd\u518d\u5f15\u7528\u5176\u4ed6dex\u4e2d\u7684\u7c7b\uff0c\u5426\u5219\u5c31\u4f1a\u62a5\u4e0a\u9762\u7684\u9519\u8bef\u3002 \u5728\u6211\u4eec\u7684\u5b9e\u8df5\u4e2d\uff0cTest\u7c7b\u548c\u8c03\u7528Test\u7c7b\u7684MainActivity(\u6bd4\u5982)\u672c\u8eab\u662f\u5728\u540c\u4e00\u4e2adex\u4e2d\u7684\uff0c\u6240\u4ee5MainActivity\u88ab\u6253\u4e0a\u4e86 CLASS_ISPREVERIFIED \u6807\u8bb0\uff0c\u800c\u6211\u4eec\u4fee\u590dbug\u7684\u65f6\u5019\u5374\u5f15\u7528\u4e86\u53e6\u5916\u4e00\u4e2adex\u4e2d\u7684Test\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u62a5\u9519\u4e86\u3002 QFix\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u91c7\u53d6\u4e86\u7f16\u8bd1\u65f6\u63d2\u6869\u7684\u505a\u6cd5\u3002 \u5177\u4f53\u6765\u8bf4\u5c31\u662f: \u5728\u6240\u6709\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u63d2\u5165\u4e00\u6bb5\u4ee3\u7801\uff1a System.out.println(AntilazyLoad.class); \u8fd9\u6837\u5f53\u5b89\u88c5apk\u7684\u65f6\u5019\uff0cclasses.dex\u5185\u7684\u7c7b\u90fd\u4f1a\u5f15\u7528\u4e00\u4e2a\u5728\u4e0d\u76f8\u540cdex\u4e2d\u7684AntilazyLoad\u7c7b\uff0c\u8fd9\u6837\u5c31\u9632\u6b62\u4e86\u7c7b\u88ab\u6253\u4e0a CLASS_ISPREVERIFIED \u7684\u6807\u5fd7\u4e86\uff0c\u53ea\u8981\u6ca1\u88ab\u6253\u4e0a\u8fd9\u4e2a\u6807\u5fd7\u7684\u7c7b\u90fd\u53ef\u4ee5\u8fdb\u884c\u6253\u8865\u4e01\u64cd\u4f5c\u3002 \u4f18\u70b9\uff1a * \u4e0d\u9700\u8981\u8003\u8651\u5bf9dalvik\u865a\u62df\u673a\u548cart\u865a\u62df\u673a\u505a\u9002\u914d * \u4ee3\u7801\u662f\u975e\u4fb5\u5165\u5f0f\u7684\uff0c\u5bf9apk\u4f53\u79ef\u5f71\u54cd\u4e0d\u5927 \u7f3a\u70b9\uff1a * \u9700\u8981\u4e0b\u6b21\u542f\u52a8\u624d\u4f1a\u751f\u6548 * \u6027\u80fd\u635f\u8017\uff0c\u5373Dalvik\u5e73\u53f0\u4e3a\u9632\u6b62\u7c7b\u6253\u4e0aCLASS_ISPREVERIFIED\u6807\u5fd7\uff0c\u63d2\u6869\u5bfc\u81f4\u7684\u6027\u80fd\u635f\u8017\uff0cArt\u5e73\u53f0\u7531\u4e8e\u5730\u5740\u504f\u79fb\u95ee\u9898\u5bfc\u81f4\u8865\u4e01\u5305\u53ef\u80fd\u8fc7\u5927\u7684\u95ee\u9898","title":"\u5b9e\u8df5"},{"location":"hotFix/#dex","text":"\u5982\u679cQFix\u6ca1\u6709\u4e0a\u9762\u7684\u7f3a\u9677\uff0c\u4e5f\u53ef\u80fd\u5c31\u4e0d\u4f1a\u6709\u5fae\u4fe1\u7684Tinker\u65b9\u6848\u4e86\u3002\u5fae\u4fe1tinker\u91c7\u7528\u5c06\u65b0\u65e7apk\u505adiff\uff0c\u5f97\u5230diff.dex\uff0c\u7136\u540e\u4e0b\u53d1diff.dex\u7ed9\u7ec8\u7aef\u624b\u673a\uff0c\u7136\u540e\u5728\u8fd0\u884c\u65f6\u5c06diff.dex\u548c\u624b\u673a\u4e2d\u65e7\u7684classes.dex\u505a\u5408\u5e76\uff0c\u751f\u6210\u65b0\u7684classes.dex\uff0c\u6700\u540e\u4ecd\u7136\u91c7\u7528\u4e0a\u9762\u7684\u7c7b\u52a0\u8f7d\u65b9\u6cd5\uff0c\u5728\u542f\u52a8\u65f6\u5c06\u65b0\u7684classes.dex\u5b89\u6392\u5230dexElement\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u7531\u4e8e\u4e0d\u9700\u8981\u4ee3\u7801\u63d2\u6869\uff0c\u6027\u80fd\u6bd4QFix\u6709\u5f88\u5927\u63d0\u9ad8\u3002 \u5177\u4f53\u53c2\u8003\uff1a https://github.com/Tencent/tinker \u4f18\u70b9\uff1a * \u514b\u670d\u4e86QFix\u7684\u6027\u80fd\u7f3a\u9677 * \u652f\u6301\u66ff\u6362So\u5e93\u4ee5\u53ca\u8d44\u6e90 \u7f3a\u70b9\uff1a * \u9700\u8981\u4e0b\u6b21\u542f\u52a8\u624d\u4f1a\u751f\u6548 * \u5b9e\u73b0\u590d\u6742 Tinker\u6027\u80fd\u75db\u70b9\uff1a * Dex\u5408\u5e76\u5185\u5b58\u6d88\u8017\u5728vm head\u4e0a\uff0c\u5bb9\u6613OOM\uff0c\u6700\u540e\u5bfc\u81f4\u5408\u5e76\u5931\u8d25\u3002 * \u5982\u679c\u672c\u8eabapp\u5360\u7528\u5185\u5b58\u5df2\u7ecf\u6bd4\u8f83\u9ad8\uff0c\u53ef\u80fd\u5bb9\u6613\u5bfc\u81f4app\u672c\u7cfb\u7edf\u6740\u6389\u3002","title":"Dex\u66ff\u6362\u65b9\u6848"},{"location":"hotFix/#instant-run","text":"\u5728 Instant Run \u6587\u4e2d\u53ef\u4ee5\u4e86\u89e3Instant Run\u7684\u5927\u81f4\u539f\u7406\u3002 \u7f8e\u56e2Robust\u63d2\u4ef6\u501f\u9274\u4e86Instant Run\u539f\u7406\uff0c\u5bf9\u6bcf\u4e2a\u4e1a\u52a1\u4ee3\u7801\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u5728\u7f16\u8bd1\u6253\u5305\u9636\u6bb5\u81ea\u52a8\u63d2\u5165\u4e86\u4e00\u6bb5\u4ee3\u7801\uff0c\u540c\u65f6\u7ed9\u6bcf\u4e2aclass\u90fd\u589e\u52a0\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3aChangeQuickRedirect\u7684\u9759\u6001\u6210\u5458\uff0c\u800c\u5728\u6bcf\u4e2a\u65b9\u6cd5\u524d\u90fd\u63d2\u5165\u4e86\u4f7f\u7528changeQuickRedirect\u76f8\u5173\u7684\u903b\u8f91\uff0c\u5f53 changeQuickRedirect\u4e0d\u4e3anull\u65f6\uff0c\u5c31\u4f1a\u6267\u884c\u5230accessDispatch\u4ece\u800c\u66ff\u6362\u6389\u4e4b\u524d\u8001\u7684\u903b\u8f91\uff0c\u8fbe\u5230\u4fee\u590d\u7684\u76ee\u7684\u3002\u63d2\u5165\u8fc7\u7a0b\u5bf9\u4e1a\u52a1\u5f00\u53d1\u662f\u5b8c\u5168\u900f\u660e\u7684\u3002 public long getIndex() { return 100; } ``` \u4ee5\u4e0a\u4ee3\u7801\u7ecf\u8fc7Robust\u6846\u67b6\u6ce8\u5165\u540e\u4f1a\u88ab\u5904\u7406\u6210: ```java public static ChangeQuickRedirect changeQuickRedirect; public long getIndex() { if(changeQuickRedirect != null) { if(PatchProxy.isSupport(new Object[0], this, changeQuickRedirect, false)) { return ((Long)PatchProxy.accessDispatch(new Object[0], this, changeQuickRedirect, false)).longValue(); } } return 100L; } \u5f53\u6709\u8865\u4e01\u7684\u65f6\u5019changeQuickRedirect\u7684\u503c\u5c31\u4e0d\u518d\u662f\u7a7a\uff0c\u6240\u4ee5\u6267\u884c\u5230\u9700\u8981\u70ed\u4fee\u7684\u65b9\u6cd5\u65f6\u5c31\u4f1a\u8d70\u5230\u8865\u4e01\u7684\u65b9\u6cd5\u5b9e\u73b0\u800c\u4e0d\u662f\u539f\u903b\u8f91\u8fbe\u5230\u4fee\u590d\u76ee\u7684 \u6bcf\u4e2a\u8865\u4e01\u5305\u7684\u7ed3\u6784 PatchesInfoImpl\uff1a\u8865\u4e01\u5305\u8bf4\u660e\u7c7b\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8865\u4e01\u5bf9\u8c61\uff1b\u6bcf\u4e2a\u5bf9\u8c61\u5305\u542b\u88ab\u4fee\u590d\u7c7b\u540d\u53ca\u8be5\u7c7b\u5bf9\u5e94\u7684\u8865\u4e01\u7c7b\u3002 public class PatchesInfoImpl implements PatchesInfo { public List getPatchedClassesInfo() { ArrayList localArrayList = new ArrayList(); localArrayList.add(new PatchedClassInfo(\"com.xxx.android.robustdemo.MainActivity\", \"com.bytedance.robust.patch.MainActivityPatchControl\")); com.meituan.robust.utils.EnhancedRobustUtils.isThrowable = false; return localArrayList; } } PatchesInfoImpl\uff1a\u8865\u4e01\u5305\u8bf4\u660e\u7c7b\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8865\u4e01\u5bf9\u8c61\uff1b\u6bcf\u4e2a\u5bf9\u8c61\u5305\u542b\u88ab\u4fee\u590d\u7c7b\u540d\u53ca\u8be5\u7c7b\u5bf9\u5e94\u7684\u8865\u4e01\u7c7b\u3002 public class MainActivityPatchControl implements ChangeQuickRedirect{ ... //1.\u65b9\u6cd5\u662f\u5426\u652f\u6301\u70ed\u4fee public boolean isSupport(String paramString, Object[] paramArrayOfObject) { Log.d(\"robust\", \"arrivied in isSupport \" + paramString + \" paramArrayOfObject \" + paramArrayOfObject); String str = paramString.split(\":\")[3]; Log.d(\"robust\", \"in isSupport assemble method number is \" + str); Log.d(\"robust\", \"arrivied in isSupport \" + paramString + \" paramArrayOfObject \" + paramArrayOfObject + \" isSupport result is \" + \":2:\".contains(new StringBuffer().append(\":\").append(str).append(\":\").toString())); return \":2:\".contains(\":\" + str + \":\"); } //2.\u8c03\u7528\u8865\u4e01\u7684\u70ed\u4fee\u903b\u8f91 public Object accessDispatch(String paramString, Object[] paramArrayOfObject) { for (;;) { try { Object localObject = new java/lang/StringBuffer; ((StringBuffer)localObject).<init>(); if (!paramString.split(\":\")[2].equals(\"false\")) { continue; } if (keyToValueRelation.get(paramArrayOfObject[(paramArrayOfObject.length - 1)]) != null) { continue; } localObject = new com/bytedance/robust/patch/MainActivityPatch; ((MainActivityPatch)localObject).<init>(paramArrayOfObject[(paramArrayOfObject.length - 1)]); keyToValueRelation.put(paramArrayOfObject[(paramArrayOfObject.length - 1)], null); paramArrayOfObject = (Object[])localObject; localObject = paramString.split(\":\")[3]; paramString = new java/lang/StringBuffer; paramString.<init>(); if (!\"2\".equals(localObject)) { continue; } paramString = paramArrayOfObject.RobustPublicgetShowText(); }catch (Throwable paramString){ ...} return paramString; paramArrayOfObject = (MainActivityPatch)keyToValueRelation.get(paramArrayOfObject[(paramArrayOfObject.length - 1)]); continue; //\u5177\u4f53\u5b9e\u73b0\u903b\u8f91\u5728Patch\u4e2d paramArrayOfObject = new MainActivityPatch(null); } } } Patch\uff1a\u5177\u4f53\u8865\u4e01\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002\u8be5\u7c7b\u4e2d\u5305\u542b\u88ab\u4fee\u590d\u7c7b\u4e2d\u9700\u8981\u70ed\u4fee\u7684\u65b9\u6cd5\u3002 public class MainActivityPatch { MainActivity originClass; public MainActivityPatch(Object paramObject) { this.originClass = ((MainActivity)paramObject); } //\u70ed\u4fee\u7684\u65b9\u6cd5\u5177\u4f53\u5b9e\u73b0 private String getShowText() { Object localObject = getRealParameter(new Object[] { \"Error Text\" }); localObject = (String)EnhancedRobustUtils.invokeReflectConstruct(\"java.lang.String\", (Object[])localObject, new Class[] { String.class }); localObject = getRealParameter(new Object[] { \"Fixed Text\" }); return (String)EnhancedRobustUtils.invokeReflectConstruct(\"java.lang.String\", (Object[])localObject, new Class[] { String.class }); } } \u4f18\u70b9\uff1a \u51e0\u4e4e\u4e0d\u4f1a\u5f71\u54cd\u6027\u80fd\uff08\u65b9\u6cd5\u8c03\u7528\uff0c\u51b7\u542f\u52a8\uff09 \u652f\u6301Android2.3-8.x\u7248\u672c \u9ad8\u517c\u5bb9\u6027\uff08Robust\u53ea\u662f\u5728\u6b63\u5e38\u7684\u4f7f\u7528DexClassLoader\uff09\u3001\u9ad8\u7a33\u5b9a\u6027\uff0c\u4fee\u590d\u6210\u529f\u7387\u9ad8\u8fbe99.9% \u8865\u4e01\u5b9e\u65f6\u751f\u6548\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8 \u652f\u6301\u65b9\u6cd5\u7ea7\u522b\u7684\u4fee\u590d\uff0c\u5305\u62ec\u9759\u6001\u65b9\u6cd5 \u652f\u6301\u589e\u52a0\u65b9\u6cd5\u548c\u7c7b \u652f\u6301ProGuard\u7684\u6df7\u6dc6\u3001\u5185\u8054\u3001\u4f18\u5316\u7b49\u64cd\u4f5c \u7f3a\u70b9\uff1a \u4ee3\u7801\u662f\u4fb5\u5165\u5f0f\u7684\uff0c\u4f1a\u5728\u539f\u6709\u7684\u7c7b\u4e2d\u52a0\u5165\u76f8\u5173\u4ee3\u7801 so\u548c\u8d44\u6e90\u7684\u66ff\u6362\u6682\u65f6\u4e0d\u652f\u6301 \u4f1a\u589e\u5927apk\u7684\u4f53\u79ef\uff0c\u5e73\u5747\u4e00\u4e2a\u51fd\u6570\u4f1a\u6bd4\u539f\u6765\u589e\u52a017.47\u4e2a\u5b57\u8282\uff0c10\u4e07\u4e2a\u51fd\u6570\u4f1a\u589e\u52a01.67M\u3002 \u4f1a\u589e\u52a0\u5c11\u91cf\u65b9\u6cd5\u6570\uff0c\u4f7f\u7528\u4e86Robust\u63d2\u4ef6\u540e\uff0c\u539f\u6765\u80fd\u88abProGuard\u5185\u8054\u7684\u51fd\u6570\u4e0d\u80fd\u88ab\u5185\u8054\u4e86","title":"Instant Run\u70ed\u63d2\u62d4\u65b9\u6848"},{"location":"hotFix/#_2","text":"","title":"\u5e95\u5c42\u65b9\u6cd5\u66ff\u6362\u65b9\u6848"},{"location":"instantRun/","text":"\u4ecb\u7ecd Instant Run\u662fandroid studio2.0\u65b0\u589e\u7684\u4e00\u4e2a\u8fd0\u884c\u673a\u5236\uff0c\u5728\u4f60\u7f16\u7801\u5f00\u53d1\u3001\u6d4b\u8bd5\u6216debug\u7684\u65f6\u5019\uff0c\u5b83\u90fd\u80fd\u663e\u8457\u51cf\u5c11\u4f60\u5bf9\u5f53\u524d\u5e94\u7528\u7684\u6784\u5efa\u548c\u90e8\u7f72\u7684\u65f6\u95f4\u3002\u5b83\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u5373\u65f6\u751f\u6548\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u91cd\u542f\u3002 \u4e09\u79cd\u65b9\u5f0f instant-run\u52a0\u8f7d\u66f4\u65b0\u4ee3\u7801\u6709\u4e09\u79cd\u65b9\u5f0f\uff1ahotswap\u3001coldswap\u3001warmswap\u3002 * hotswap \u5982\u679c\u53ea\u662f\u6539\u52a8\u73b0\u6709\u65b9\u6cd5\u7684\u903b\u8f91\uff0cinstant-run\u4f1a\u81ea\u52a8\u5e94\u7528hotswap\uff0c \u4e0d\u9700\u8981\u4efb\u4f55\u91cd\u542f \u5c31\u53ef\u4ee5\u770b\u5230\u5b9e\u9645\u6539\u52a8 * warmswap \u5f53\u6539\u53d8\u7684\u4e0d\u6b62\u662f\u4ee3\u7801\uff0c\u8fd8\u6d89\u53ca\u5230\u8d44\u6e90\u6587\u4ef6\u7684\u53d8\u52a8\uff0c\u5c31\u505a\u4e0d\u5230\u50cfhotswap\u4e00\u6837\u5728\u4e0d\u5f71\u54cd\u5f53\u524dActivity\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\u53d8\u52a8\u4e86\u3002AS\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684resources._ap\u63a8\u5230\u8bbe\u5907\u4e0a\uff0c\u7136\u540e \u91cd\u542f\u5f53\u524dActivity \u6765\u4f7f\u65b0\u7684\u8d44\u6e90\u751f\u6548\u3002 * coldswap \u5982\u679c\u4e0d\u7b26\u5408\u4e0a\u9762hotswap\u548cwarmswap\u7684\u6761\u4ef6\uff0c\u6bd4\u5982\u8bf4\u589e\u52a0\u6216\u8005\u5220\u51cf\u4e86\u65b9\u6cd5\u3001\u4fee\u6539\u4e86\u7c7b\u7684\u96c6\u6210\u5173\u7cfb\u3001\u4fee\u6539\u4e86AndroidManifest\u7b49\uff0c\u5c31\u4f1a\u5e94\u7528coldswap\u3002\u4e5f\u5c31\u662f\u628a\u6539\u52a8\u90e8\u5206\u63a8\u9001\u5230\u8bbe\u5907\u4e0a\uff0c\u7136\u540e\u4f1a \u91cd\u542f\u6574\u4e2aapp \u624d\u80fd\u770b\u5230\u53d8\u52a8\u3002 hotswap\u5206\u6790 Instant Run\u5728\u7b2c\u4e00\u6b21\u6784\u5efaapk\u65f6\uff0c\u4f1a\u5728\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u63d2\u6869 //\u6e90\u4ee3\u7801 public class MainActivity extends AppCompatActivity { private TextView mTv; private int count; public int count2; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mTv = findViewById(R.id.textView); mTv.setText(\"hello world\"); } private void toBeFix() { Toast.makeText(this, \"I'm a bug\", Toast.LENGTH_SHORT).show(); testPublic(); testPrivate(); } public void testPrivate() { count = 2; } public void testPublic() { count2 = 3; } } instant run\u63d2\u6869\u540e\u7684\u4ee3\u7801 public class MainActivity extends AppCompatActivity { private TextView mTv; private int count; public int count2; public static final long serialVersionUID = -754549888626914089L; public static volatile transient com.android.tools.ir.runtime.IncrementalChange $change; //\u539f\u6709\u7684\u6784\u9020\u51fd\u6570 public MainActivity() { IncrementalChange var1 = $change; if (var1 != null) { Object[] var10001 = (Object[])var1.access$dispatch(\"init$args.([Lcom/example/myapplication/MainActivity;[Ljava/lang/Object;)Ljava/lang/Object;\", new Object[]{null, new Object[0]}); Object[] var2 = (Object[])var10001[0]; this(var10001, (InstantReloadException)null); var2[0] = this; var1.access$dispatch(\"init$body.(Lcom/example/myapplication/MainActivity;[Ljava/lang/Object;)V\", var2); } else { super(); this.count = 0; } } public void onCreate(Bundle savedInstanceState) { IncrementalChange var2 = $change; if (var2 != null) { var2.access$dispatch(\"onCreate.(Landroid/os/Bundle;)V\", new Object[]{this, savedInstanceState}); } else { super.onCreate(savedInstanceState); this.setContentView(R.layout.main); this.mTv = (TextView)this.findViewById(R.id.textView); this.mTv.setText(\"hello world\"); } } private void toBeFix() { IncrementalChange var1 = $change; if (var1 != null) { var1.access$dispatch(\"toBeFix.()V\", new Object[]{this}); } else { Toast.makeText(this, \"I'm a bug\", 0).show(); this.testPublic(); this.testPrivate(); } } public void testPrivate() { IncrementalChange var1 = $change; if (var1 != null) { var1.access$dispatch(\"testPublic.()V\", new Object[]{this}); } else { this.count = 2; } } public void testPublic() { IncrementalChange var1 = $change; if (var1 != null) { var1.access$dispatch(\"testPrivate.()V\", new Object[]{this}); } else { this.count2 = 3; } } //instant run\u589e\u52a0\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e3a\u4e86\u8981\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u672c\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570 MainActivity(Object[] var1, InstantReloadException var2) { String var3 = (String)var1[1]; switch(var3.hashCode()) { case -212194855: super(); return; case 69102765: this(); return; case 2011923530: super(((Number)var1[2]).intValue()); return; default: throw new InstantReloadException(String.format(\"String switch could not find '%s' with hashcode %s in %s\", var3, var3.hashCode(), \"com/example/myapplication/MainActivity\")); } } } $change \u521d\u59cb\u503c\u4e3anull\uff0c\u8fd9\u65f6\u65b9\u6cd5\u7684\u884c\u4e3a\u88ab\u6ca1\u6709\u88ab\u4fee\u6539\u3002\u5f53 $change \u4e0d\u4e3anull\u65f6\uff0cMainActivity\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u88ab\u4ee3\u7406\u5230\u4e86 $change \u7684 access$dispatch \u65b9\u6cd5\u4e0a\uff0c\u4ece\u800c\u6709\u4e86\u4fee\u590d\u539f\u6709\u903b\u8f91\u7684\u57fa\u7840\uff0c\u5c31\u662f\u8ba9\u539f\u6709\u903b\u8f91\u77ed\u8def\uff0c\u76f4\u63a5\u8df3\u5230\u53e6\u5916\u4e00\u4e2a\u5730\u65b9\u6267\u884c\u65b0\u7684\u903b\u8f91\u3002 $change \u662f IncrementalChange \u63a5\u53e3\u7c7b\u578b\uff0c\u91cc\u9762\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a access$dispatch \u65b9\u6cd5\u3002 package com.android.tools.ir.runtime; public interface IncrementalChange { Object access$dispatch(String var1, Object... var2); } $change \u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728 app/intermediates/transforms/transforms/instantRun \u76ee\u5f55\u4e0b\u627e\u5230 \u539f\u7c7b\u540d + $override\uff0c\u5b9e\u73b0 IncrementalChange \u63a5\u53e3\u3002\u8be5\u7c7b\u5305\u542b\u88ab\u4fee\u590d\u7684\u903b\u8f91\uff0c\u53d6\u540d$override\uff0c\u610f\u601d\u662f\u8981\u53d6\u4ee3\u539f\u6709\u7c7b\u3002 public class MainActivity$override implements IncrementalChange { public MainActivity$override() { } public static Object init$args(MainActivity[] var0, Object[] var1) { Object[] var2 = new Object[]{new Object[]{var0, new Object[0]}, \"androidx/appcompat/app/AppCompatActivity.()V\"}; return var2; } public static void init$body(MainActivity $this, Object[] var1) { AndroidInstantRuntime.setPrivateField($this, new Integer(1), MainActivity.class, \"count\"); } public static void onCreate(MainActivity $this, Bundle savedInstanceState) { Object[] var2 = new Object[]{savedInstanceState}; MainActivity.access$super($this, \"onCreate.(Landroid/os/Bundle;)V\", var2); $this.setContentView(R.layout.main); AndroidInstantRuntime.setPrivateField($this, (TextView)$this.findViewById(R.id.textView), MainActivity.class, \"mTv\"); ((TextView)AndroidInstantRuntime.getPrivateField($this, MainActivity.class, \"mTv\")).setText(\"hello world\"); } public static void toBeFix(MainActivity $this) { Toast.makeText($this, \"I'm fixed\", 0).show(); $this.testPublic(); $this.testPrivate(); } public static void testPrivate(MainActivity $this) { AndroidInstantRuntime.setPrivateField($this, new Integer(2), MainActivity.class, \"count\"); } public static void testPublic(MainActivity $this) { $this.count2 = 3; } @override public Object access$dispatch(String var1, Object... var2) { //\u6839\u636e\u65b9\u6cd5\u540dhashCode\uff0c\u5206\u53d1\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5 switch(var1.hashCode()) { case 1189276834: testPublic((MainActivity)var2[0]); return null; case 1310942360: testPrivate((MainActivity)var2[0]); return null; case -909773794: toBeFix((MainActivity)var2[0]); return null; case -641568046: onCreate((MainActivity)var2[0], (Bundle)var2[1]); return null; case 707796331: init$body((MainActivity)var2[0], (Object[])var2[1]); return null; case 1546073223: return init$args((MainActivity[])var2[0], (Object[])var2[1]); default: throw new InstantReloadException(String.format(\"String switch could not find '%s' with hashcode %s in %s\", var1, var1.hashCode(), \"com/example/myapplication/MainActivity\")); } } } \u6784\u9020\u65b9\u6cd5\u95ee\u9898 Instant Run\u4e3a\u4e86\u5728 xxx$override \u7c7b\u4e2d\u8c03\u7528\u539f\u6709\u7c7b\u7684 super() \u65b9\u6cd5\u548c this() \u65b9\u6cd5\uff0c\u4f1a\u5728\u539f\u6709\u7c7b\u4e2d\u589e\u52a0\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u3002\u7136\u540e\u5728 xxx$override \u7c7b\u4e2d\u4f1a\u751f\u6210\u4e24\u4e2a\u65b9\u6cd5 args \u548c bodys \uff0cargs\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8981\u8c03\u7528\u54ea\u4e2athis\u6216super\u65b9\u6cd5\uff0cbodys\u4e2d\u5219\u662f\u539f\u6765\u6784\u9020\u51fd\u6570\u4e2d\u7684\u9664this\u6216super\u8c03\u7528\u7684\u5176\u4ed6\u903b\u8f91\u3002\u5f53\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u88abHotFix\u65f6\uff0c\u5728\u5b83\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u4f1a\u5148\u8c03\u7528 xxx$override \u7c7b\u7684 args \uff0c\u5c06 args \u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4f20\u9012\u7ed9\u65b0\u751f\u6210\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u65b0\u751f\u6210\u7684\u6784\u9020\u65b9\u6cd5\u91cc\u4f1a\u6839\u636e\u5b57\u7b26\u4e32\u51b3\u5b9a\u8981\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u4e4b\u540e\u518d\u8c03\u7528body\u65b9\u6cd5\u521d\u59cb\u5316\u5176\u4ed6\u903b\u8f91\u3002 \u6743\u9650\u95ee\u9898 \u56e0\u4e3a\u8981\u5728xxx$override\u7c7b\u7684\u5bf9\u8c61\u4e2d\u53bb\u8bbf\u95ee\u539f\u6709\u7c7b\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\uff0c\u6240\u4ee5\u5fc5\u5b9a\u4f1a\u6d89\u53ca\u5230\u8bbf\u95ee\u6743\u9650\u95ee\u9898\u3002 1\u3001Instant Run\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u5c06\u539f\u6709\u7c7b\u6240\u6709\u7684\u975epublic\u8bbf\u95ee\u6743\u9650\u7684\u65b9\u6cd5\u6539\u4e3apublic\u3002 1\u3001\u5bf9\u4e8e\u975epublic\u8bbf\u95ee\u6743\u9650\u7684\u6210\u5458\u53d8\u91cf\uff0cInstant Run\u901a\u8fc7\u8fd0\u884c\u65f6\u53cd\u5c04\u8bbf\u95ee\u539f\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002 patch\u6587\u4ef6\u5982\u4f55\u4e0a\u4f20\u5230app\u91cc\u7684\uff1f apk\u7b2c\u4e00\u6b21\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u628ainstant-run.jar\u6253\u5305\u5230\u4e3bdex\u4e2d instant-run.jar\u5728 app/build/intermediates/incremental-runtime-classes/debug \u76ee\u5f55\u4e0b\u53ef\u4ee5\u627e\u5230\uff0c\u4e3b\u8981\u5305\u542b\u4e862\u4e2a\u65b9\u9762\u7684\u4ee3\u7801\uff1a * App Server\uff0c\u63a5\u6536patch\u63a8\u9001 * \u4fee\u590d\u903b\u8f91 Instant run\u5728Gradle 2.0 ~ 2.3 ~ 3.0\u7248\u672c\u90fd\u6709\u4e0d\u540c\u7684\u6539\u52a8\uff0c\u4f46\u6838\u5fc3\u903b\u8f91\u6ca1\u53d8\uff0c\u8fd9\u91cc\u4ee5Gralde3.x\u7248\u672c\u4e3a\u4f8b\u3002 \u627e\u5230\u6784\u5efa\u5b8c\u7684apk\uff0c\u53d1\u73b0manifest.xml\u4e2d\u591a\u4e86\u4e00\u4e2aprovider\u7ec4\u4ef6 \u53ef\u4ee5\u5728instant-run.jar\u4e2d\u627e\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u4ee3\u7801 public final class InstantRunContentProvider extends ContentProvider { public boolean onCreate() { if (isMainProcess()) { Log.i(\"InstantRun\", \"starting instant run server: is main process\"); Server.create(getContext()); } else { Log.i(\"InstantRun\", \"not starting instant run server: not main process\"); } return true; } //...\u5176\u4ed6\u6ca1\u6709\u8425\u517b\u7684\u903b\u8f91 \u6211\u4eec\u77e5\u9053ContentProvider\u7684 onCreate \u7684\u8c03\u7528\u65f6\u673a\u4ecb\u4e8eApplication\u7684 attachBaseContext \u548c onCreate \u4e4b\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cprovider\u7684 onCreate \u4f1a\u5728\u5e94\u7528\u542f\u52a8\u65f6\u81ea\u52a8\u88ab\u8c03\u7528\u3002 InstantRunContentProvider\u5728\u5176 onCreate \u65b9\u6cd5\u4e2d\u5c31\u505a\u4e86\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u542f\u52a8\u4e00\u4e2aserver\u3002 public class Server{ public static Server create(Context context) { return new Server(context.getPackageName(), context); } private Server(String packageName, Context context) { this.context = context; try { //\u4ee5packageName\u4f5c\u4e3a\u540d\u5b57\u65b0\u5efaLocalServerSocket this.serverSocket = new LocalServerSocket(packageName); } catch (IOException e) { Log.e(\"InstantRun\", \"IO Error creating local socket at \" + packageName, e); return; } //\u542f\u52a8server startServer(); } private void startServer() { try { Thread socketServerThread = new Thread(new SocketServerThread(this, null)); //\u5728\u72ec\u7acb\u7ebf\u7a0b\u4e2d\u542f\u52a8socket\uff0c\u5e76\u5904\u7406\u76f8\u5e94socket\u8bf7\u6c42\u3002 socketServerThread.start(); } catch (Throwable e) { } } //... //\u5904\u7406socket\u8bf7\u6c42\u6570\u636e private void handle(DataInputStream input, DataOutputStream output) throws IOException { int message; int version = input.readInt(); output.writeInt(4); if (version != 4) { Log.w(\"InstantRun\", \"Mismatched protocol versions; app is using version 4 and tool is using version \" + version); return; } while (true) { //... List<ApplicationPatch> changes; message = input.readInt(); switch (message) { case 1: //\u4ecesocket\u8bfb\u51fachanges\u5217\u8868 changes = ApplicationPatch.read(input); hasResources = Server.hasResources(changes); updateMode = input.readInt(); //\u5904\u7406changes updateMode = Server.this.handlePatches(changes, hasResources, updateMode); //\u6839\u636eupdateMode(\u66f4\u65b0\u65b9\u5f0f)\uff0c\u6bd4\u5982\u91cd\u542f\u5f53\u524dactivity\u6216\u91cd\u542fapp Server.this.restart(updateMode, hasResources, showToast); continue; //\u5176\u4ed6case } } } //\u5904\u7406patch private int handlePatches(List<ApplicationPatch> changes, boolean hasResources, int updateMode) { if (hasResources) { FileManager.startUpdate(); } for (ApplicationPatch change : changes) { String path = change.getPath(); if (path.equals(\"classes.dex.3\")) { //\u5904\u7406\u70ed\u4ea4\u6362patch updateMode = handleHotSwapPatch(updateMode, change); continue; } if (isResourcePath(path)) { //\u5904\u7406\u8d44\u6e90patch updateMode = handleResourcePatch(updateMode, change, path); } } if (hasResources) { FileManager.finishUpdate(true); } return updateMode; } private int handleHotSwapPatch(int updateMode, ApplicationPatch patch) { try { //\u628apatch\u6570\u636e\u5199\u5165dex\u6587\u4ef6 String dexFile = FileManager.writeTempDexFile(patch.getBytes()); String nativeLibraryPath = FileManager.getNativeLibraryFolder().getPath(); //\u4f7f\u7528DexClassLoader\u52a0\u8f7dpatch(dex) DexClassLoader dexClassLoader = new DexClassLoader(dexFile, this.context.getCacheDir().getPath(), nativeLibraryPath, getClass().getClassLoader()); //\u52a0\u8f7d\u7c7bAppPatchesLoaderImpl Class<?> aClass = Class.forName(\"com.android.tools.ir.runtime.AppPatchesLoaderImpl\", true, dexClassLoader); try { if (Log.isLoggable(\"InstantRun\", 2)) { Log.v(\"InstantRun\", \"Got the patcher class \" + aClass); } //\u5b9e\u4f8b\u5316AppPatchesLoaderImpl PatchesLoader loader = (PatchesLoader) aClass.newInstance(); //\u8c03\u7528AppPatchesLoaderImpl\u7684load()\u65b9\u6cd5\uff0c\u52a0\u8f7d\u70ed\u4fee\u590d\u903b\u8f91 if (!loader.load()) { updateMode = 3; } } catch (Exception e) { e.printStackTrace(); updateMode = 3; } } catch (Throwable e) { updateMode = 3; } return updateMode; } //\u5176\u4ed6\u903b\u8f91 } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u77e5\uff0cAppPatchesLoaderImpl\u7c7b\u662f\u9760\u52a0\u8f7dpatch\u7684classLoader\u52a0\u8f7d\u7684\u3002\u5b9e\u9645\u63a8\u9001\u5230\u8bbe\u5907\u4e0a\u7684patch\u4e3a app/intermediates/reload-dex/classes.dex \uff0c\u91cc\u9762\u6709\u4e24\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u7c7b\u662f\u4e0a\u9762\u5df2\u7ecf\u8bf4\u8fc7\u7684MainActivity$override\uff0c\u53e6\u4e00\u4e2a\u7c7b\u5c31\u662fAppPatchesLoaderImpl\uff0c\u4f5c\u7528\u662f\u6307\u660e\u54ea\u4e9b\u7c7b\u9700\u8981patch\u3002 public class AppPatchesLoaderImpl extends AbstractPatchesLoaderImpl { public static final long BUILD_ID = 1571577597897L; public AppPatchesLoaderImpl() { } public String[] getPatchedClasses() { //\u7f57\u5217\u54ea\u4e9b\u7c7b\u9700\u8981\u88abpatch return new String[]{\"com.example.myapplication.MainActivity\"}; } } \u770b\u6765load\u65b9\u6cd5\u662f\u5728\u5176\u7236\u7c7bAbstractPatchesLoaderImpl\u4e2d\uff0c\u6211\u4eec\u5728instant-run.jar\u7684runtime\u4e0b\u627e\u5230\u4e86\u3002 public abstract class AbstractPatchesLoaderImpl implements PatchesLoader { private final Method get = java.util.concurrent.atomic.AtomicReference.class.getMethod(\"get\", new Class[0]); private final Method set = java.util.concurrent.atomic.AtomicReference.class.getMethod(\"set\", new Class[]{Object.class}); public abstract String[] getPatchedClasses(); public boolean load() { //\u904d\u5386\u9700\u8981\u4fee\u590d\u7684\u7c7b for (String className : getPatchedClasses()) { try { ClassLoader cl = getClass().getClassLoader(); //\u52a0\u8f7d\u5bf9\u5e94\u88ab\u4fee\u590d\u7684$override\u7c7b Class<?> aClass = cl.loadClass(className + \"$override\"); //\u5b9e\u4f8b\u5316 Object o = aClass.newInstance(); //\u52a0\u8f7d\u539f\u7c7bclass Class<?> originalClass = cl.loadClass(className); //\u5b9a\u4f4d\u539f\u7c7b\u7684\u9759\u6001\u6210\u5458$change Field changeField = originalClass.getDeclaredField(\"$change\"); changeField.setAccessible(true); //\u5c06\u5b9e\u4f8b\u5316\u7684$override\u8d4b\u503c\u7ed9$change\uff0c\u8fd9\u91cc\u6839\u636e\u539f\u7c7b\u662f\u662f\u5426\u662f\u63a5\u53e3\uff0c\u903b\u8f91\u6709\u70b9\u4e0d\u540c Object previous = originalClass.isInterface() ? patchInterface(changeField, o) : patchClass(changeField, o); //... } catch (Exception e) { //... return false; } } return true; } private Object patchInterface(Field changeField, Object patch) { Object atomicReference = changeField.get(null); Object previous = this.get.invoke(atomicReference, new Object[0]); this.set.invoke(atomicReference, new Object[]{patch}); return previous; } private Object patchClass(Field changeField, Object patch) { Object previous = changeField.get(null); changeField.set(null, patch); return previous; } } \u5230\u8fd9\u91cc\uff0c\u770b\u5230$change\u53d8\u91cf\u88ab\u8d4b\u503c\u4e3a$change\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u70ed\u4fee\u590d\u903b\u8f91\u5b8c\u6210\u4e86\u3002 \u603b\u7ed3 \u5b8c\u6574\u7684\u8fc7\u7a0b\u53ef\u4ee5\u6982\u8ff0\u4e3a\uff1a 1. \u5728\u7b2c\u4e00\u6b21\u5b8c\u6574\u7f16\u8bd1\u7684\u65f6\u5019\u7ed9\u6240\u6709\u7684\u7c7b\u63d2\u6869\uff0c\u4f7f\u5b83\u4eec\u7684\u65b9\u6cd5\u80fd\u88ab\u4ee3\u7406 2. app\u542f\u52a8\u65f6\u542f\u52a8\u4e00\u4e2aAppServer\uff0c\u7b49\u5f85Android Studio\u63a8\u9001\u589e\u91cf\u5305 3. \u4ee3\u7801\u6539\u52a8\u540e\u7684\u589e\u91cf\u7f16\u8bd1\u4e2d\uff0c\u901a\u8fc7gradle\u63d2\u4ef6\u751f\u6210\u5305\u542b\u4e86\u6539\u52a8\u4ee3\u7801\u7684\u4ee3\u7406\u7c7b$change 4. Android Studio\u5c06patch\u63a8\u9001\u5230app\u4e2d\uff0c\u7136\u540e\u7ed9\u88ab\u6539\u52a8\u7684\u7c7b\u7684 $change \u5b57\u6bb5\u8d4b\u503c\uff0c\u8fd9\u6837\u6240\u6709\u65b9\u6cd5\u90fd\u8f6c\u53d1\u5230\u4e86\u4ee3\u7406\u7c7b //todo \u8d44\u6e90\u4fee\u590d","title":"instantRun"},{"location":"instantRun/#_1","text":"Instant Run\u662fandroid studio2.0\u65b0\u589e\u7684\u4e00\u4e2a\u8fd0\u884c\u673a\u5236\uff0c\u5728\u4f60\u7f16\u7801\u5f00\u53d1\u3001\u6d4b\u8bd5\u6216debug\u7684\u65f6\u5019\uff0c\u5b83\u90fd\u80fd\u663e\u8457\u51cf\u5c11\u4f60\u5bf9\u5f53\u524d\u5e94\u7528\u7684\u6784\u5efa\u548c\u90e8\u7f72\u7684\u65f6\u95f4\u3002\u5b83\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u5373\u65f6\u751f\u6548\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u91cd\u542f\u3002","title":"\u4ecb\u7ecd"},{"location":"instantRun/#_2","text":"instant-run\u52a0\u8f7d\u66f4\u65b0\u4ee3\u7801\u6709\u4e09\u79cd\u65b9\u5f0f\uff1ahotswap\u3001coldswap\u3001warmswap\u3002 * hotswap \u5982\u679c\u53ea\u662f\u6539\u52a8\u73b0\u6709\u65b9\u6cd5\u7684\u903b\u8f91\uff0cinstant-run\u4f1a\u81ea\u52a8\u5e94\u7528hotswap\uff0c \u4e0d\u9700\u8981\u4efb\u4f55\u91cd\u542f \u5c31\u53ef\u4ee5\u770b\u5230\u5b9e\u9645\u6539\u52a8 * warmswap \u5f53\u6539\u53d8\u7684\u4e0d\u6b62\u662f\u4ee3\u7801\uff0c\u8fd8\u6d89\u53ca\u5230\u8d44\u6e90\u6587\u4ef6\u7684\u53d8\u52a8\uff0c\u5c31\u505a\u4e0d\u5230\u50cfhotswap\u4e00\u6837\u5728\u4e0d\u5f71\u54cd\u5f53\u524dActivity\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\u53d8\u52a8\u4e86\u3002AS\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684resources._ap\u63a8\u5230\u8bbe\u5907\u4e0a\uff0c\u7136\u540e \u91cd\u542f\u5f53\u524dActivity \u6765\u4f7f\u65b0\u7684\u8d44\u6e90\u751f\u6548\u3002 * coldswap \u5982\u679c\u4e0d\u7b26\u5408\u4e0a\u9762hotswap\u548cwarmswap\u7684\u6761\u4ef6\uff0c\u6bd4\u5982\u8bf4\u589e\u52a0\u6216\u8005\u5220\u51cf\u4e86\u65b9\u6cd5\u3001\u4fee\u6539\u4e86\u7c7b\u7684\u96c6\u6210\u5173\u7cfb\u3001\u4fee\u6539\u4e86AndroidManifest\u7b49\uff0c\u5c31\u4f1a\u5e94\u7528coldswap\u3002\u4e5f\u5c31\u662f\u628a\u6539\u52a8\u90e8\u5206\u63a8\u9001\u5230\u8bbe\u5907\u4e0a\uff0c\u7136\u540e\u4f1a \u91cd\u542f\u6574\u4e2aapp \u624d\u80fd\u770b\u5230\u53d8\u52a8\u3002","title":"\u4e09\u79cd\u65b9\u5f0f"},{"location":"instantRun/#hotswap","text":"Instant Run\u5728\u7b2c\u4e00\u6b21\u6784\u5efaapk\u65f6\uff0c\u4f1a\u5728\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u63d2\u6869 //\u6e90\u4ee3\u7801 public class MainActivity extends AppCompatActivity { private TextView mTv; private int count; public int count2; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mTv = findViewById(R.id.textView); mTv.setText(\"hello world\"); } private void toBeFix() { Toast.makeText(this, \"I'm a bug\", Toast.LENGTH_SHORT).show(); testPublic(); testPrivate(); } public void testPrivate() { count = 2; } public void testPublic() { count2 = 3; } } instant run\u63d2\u6869\u540e\u7684\u4ee3\u7801 public class MainActivity extends AppCompatActivity { private TextView mTv; private int count; public int count2; public static final long serialVersionUID = -754549888626914089L; public static volatile transient com.android.tools.ir.runtime.IncrementalChange $change; //\u539f\u6709\u7684\u6784\u9020\u51fd\u6570 public MainActivity() { IncrementalChange var1 = $change; if (var1 != null) { Object[] var10001 = (Object[])var1.access$dispatch(\"init$args.([Lcom/example/myapplication/MainActivity;[Ljava/lang/Object;)Ljava/lang/Object;\", new Object[]{null, new Object[0]}); Object[] var2 = (Object[])var10001[0]; this(var10001, (InstantReloadException)null); var2[0] = this; var1.access$dispatch(\"init$body.(Lcom/example/myapplication/MainActivity;[Ljava/lang/Object;)V\", var2); } else { super(); this.count = 0; } } public void onCreate(Bundle savedInstanceState) { IncrementalChange var2 = $change; if (var2 != null) { var2.access$dispatch(\"onCreate.(Landroid/os/Bundle;)V\", new Object[]{this, savedInstanceState}); } else { super.onCreate(savedInstanceState); this.setContentView(R.layout.main); this.mTv = (TextView)this.findViewById(R.id.textView); this.mTv.setText(\"hello world\"); } } private void toBeFix() { IncrementalChange var1 = $change; if (var1 != null) { var1.access$dispatch(\"toBeFix.()V\", new Object[]{this}); } else { Toast.makeText(this, \"I'm a bug\", 0).show(); this.testPublic(); this.testPrivate(); } } public void testPrivate() { IncrementalChange var1 = $change; if (var1 != null) { var1.access$dispatch(\"testPublic.()V\", new Object[]{this}); } else { this.count = 2; } } public void testPublic() { IncrementalChange var1 = $change; if (var1 != null) { var1.access$dispatch(\"testPrivate.()V\", new Object[]{this}); } else { this.count2 = 3; } } //instant run\u589e\u52a0\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e3a\u4e86\u8981\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u672c\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570 MainActivity(Object[] var1, InstantReloadException var2) { String var3 = (String)var1[1]; switch(var3.hashCode()) { case -212194855: super(); return; case 69102765: this(); return; case 2011923530: super(((Number)var1[2]).intValue()); return; default: throw new InstantReloadException(String.format(\"String switch could not find '%s' with hashcode %s in %s\", var3, var3.hashCode(), \"com/example/myapplication/MainActivity\")); } } } $change \u521d\u59cb\u503c\u4e3anull\uff0c\u8fd9\u65f6\u65b9\u6cd5\u7684\u884c\u4e3a\u88ab\u6ca1\u6709\u88ab\u4fee\u6539\u3002\u5f53 $change \u4e0d\u4e3anull\u65f6\uff0cMainActivity\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u88ab\u4ee3\u7406\u5230\u4e86 $change \u7684 access$dispatch \u65b9\u6cd5\u4e0a\uff0c\u4ece\u800c\u6709\u4e86\u4fee\u590d\u539f\u6709\u903b\u8f91\u7684\u57fa\u7840\uff0c\u5c31\u662f\u8ba9\u539f\u6709\u903b\u8f91\u77ed\u8def\uff0c\u76f4\u63a5\u8df3\u5230\u53e6\u5916\u4e00\u4e2a\u5730\u65b9\u6267\u884c\u65b0\u7684\u903b\u8f91\u3002 $change \u662f IncrementalChange \u63a5\u53e3\u7c7b\u578b\uff0c\u91cc\u9762\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a access$dispatch \u65b9\u6cd5\u3002 package com.android.tools.ir.runtime; public interface IncrementalChange { Object access$dispatch(String var1, Object... var2); } $change \u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728 app/intermediates/transforms/transforms/instantRun \u76ee\u5f55\u4e0b\u627e\u5230 \u539f\u7c7b\u540d + $override\uff0c\u5b9e\u73b0 IncrementalChange \u63a5\u53e3\u3002\u8be5\u7c7b\u5305\u542b\u88ab\u4fee\u590d\u7684\u903b\u8f91\uff0c\u53d6\u540d$override\uff0c\u610f\u601d\u662f\u8981\u53d6\u4ee3\u539f\u6709\u7c7b\u3002 public class MainActivity$override implements IncrementalChange { public MainActivity$override() { } public static Object init$args(MainActivity[] var0, Object[] var1) { Object[] var2 = new Object[]{new Object[]{var0, new Object[0]}, \"androidx/appcompat/app/AppCompatActivity.()V\"}; return var2; } public static void init$body(MainActivity $this, Object[] var1) { AndroidInstantRuntime.setPrivateField($this, new Integer(1), MainActivity.class, \"count\"); } public static void onCreate(MainActivity $this, Bundle savedInstanceState) { Object[] var2 = new Object[]{savedInstanceState}; MainActivity.access$super($this, \"onCreate.(Landroid/os/Bundle;)V\", var2); $this.setContentView(R.layout.main); AndroidInstantRuntime.setPrivateField($this, (TextView)$this.findViewById(R.id.textView), MainActivity.class, \"mTv\"); ((TextView)AndroidInstantRuntime.getPrivateField($this, MainActivity.class, \"mTv\")).setText(\"hello world\"); } public static void toBeFix(MainActivity $this) { Toast.makeText($this, \"I'm fixed\", 0).show(); $this.testPublic(); $this.testPrivate(); } public static void testPrivate(MainActivity $this) { AndroidInstantRuntime.setPrivateField($this, new Integer(2), MainActivity.class, \"count\"); } public static void testPublic(MainActivity $this) { $this.count2 = 3; } @override public Object access$dispatch(String var1, Object... var2) { //\u6839\u636e\u65b9\u6cd5\u540dhashCode\uff0c\u5206\u53d1\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5 switch(var1.hashCode()) { case 1189276834: testPublic((MainActivity)var2[0]); return null; case 1310942360: testPrivate((MainActivity)var2[0]); return null; case -909773794: toBeFix((MainActivity)var2[0]); return null; case -641568046: onCreate((MainActivity)var2[0], (Bundle)var2[1]); return null; case 707796331: init$body((MainActivity)var2[0], (Object[])var2[1]); return null; case 1546073223: return init$args((MainActivity[])var2[0], (Object[])var2[1]); default: throw new InstantReloadException(String.format(\"String switch could not find '%s' with hashcode %s in %s\", var1, var1.hashCode(), \"com/example/myapplication/MainActivity\")); } } }","title":"hotswap\u5206\u6790"},{"location":"instantRun/#_3","text":"Instant Run\u4e3a\u4e86\u5728 xxx$override \u7c7b\u4e2d\u8c03\u7528\u539f\u6709\u7c7b\u7684 super() \u65b9\u6cd5\u548c this() \u65b9\u6cd5\uff0c\u4f1a\u5728\u539f\u6709\u7c7b\u4e2d\u589e\u52a0\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u3002\u7136\u540e\u5728 xxx$override \u7c7b\u4e2d\u4f1a\u751f\u6210\u4e24\u4e2a\u65b9\u6cd5 args \u548c bodys \uff0cargs\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8981\u8c03\u7528\u54ea\u4e2athis\u6216super\u65b9\u6cd5\uff0cbodys\u4e2d\u5219\u662f\u539f\u6765\u6784\u9020\u51fd\u6570\u4e2d\u7684\u9664this\u6216super\u8c03\u7528\u7684\u5176\u4ed6\u903b\u8f91\u3002\u5f53\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u88abHotFix\u65f6\uff0c\u5728\u5b83\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u4f1a\u5148\u8c03\u7528 xxx$override \u7c7b\u7684 args \uff0c\u5c06 args \u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4f20\u9012\u7ed9\u65b0\u751f\u6210\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u65b0\u751f\u6210\u7684\u6784\u9020\u65b9\u6cd5\u91cc\u4f1a\u6839\u636e\u5b57\u7b26\u4e32\u51b3\u5b9a\u8981\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u4e4b\u540e\u518d\u8c03\u7528body\u65b9\u6cd5\u521d\u59cb\u5316\u5176\u4ed6\u903b\u8f91\u3002","title":"\u6784\u9020\u65b9\u6cd5\u95ee\u9898"},{"location":"instantRun/#_4","text":"\u56e0\u4e3a\u8981\u5728xxx$override\u7c7b\u7684\u5bf9\u8c61\u4e2d\u53bb\u8bbf\u95ee\u539f\u6709\u7c7b\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\uff0c\u6240\u4ee5\u5fc5\u5b9a\u4f1a\u6d89\u53ca\u5230\u8bbf\u95ee\u6743\u9650\u95ee\u9898\u3002 1\u3001Instant Run\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u5c06\u539f\u6709\u7c7b\u6240\u6709\u7684\u975epublic\u8bbf\u95ee\u6743\u9650\u7684\u65b9\u6cd5\u6539\u4e3apublic\u3002 1\u3001\u5bf9\u4e8e\u975epublic\u8bbf\u95ee\u6743\u9650\u7684\u6210\u5458\u53d8\u91cf\uff0cInstant Run\u901a\u8fc7\u8fd0\u884c\u65f6\u53cd\u5c04\u8bbf\u95ee\u539f\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002","title":"\u6743\u9650\u95ee\u9898"},{"location":"instantRun/#patchapp","text":"apk\u7b2c\u4e00\u6b21\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u628ainstant-run.jar\u6253\u5305\u5230\u4e3bdex\u4e2d instant-run.jar\u5728 app/build/intermediates/incremental-runtime-classes/debug \u76ee\u5f55\u4e0b\u53ef\u4ee5\u627e\u5230\uff0c\u4e3b\u8981\u5305\u542b\u4e862\u4e2a\u65b9\u9762\u7684\u4ee3\u7801\uff1a * App Server\uff0c\u63a5\u6536patch\u63a8\u9001 * \u4fee\u590d\u903b\u8f91 Instant run\u5728Gradle 2.0 ~ 2.3 ~ 3.0\u7248\u672c\u90fd\u6709\u4e0d\u540c\u7684\u6539\u52a8\uff0c\u4f46\u6838\u5fc3\u903b\u8f91\u6ca1\u53d8\uff0c\u8fd9\u91cc\u4ee5Gralde3.x\u7248\u672c\u4e3a\u4f8b\u3002 \u627e\u5230\u6784\u5efa\u5b8c\u7684apk\uff0c\u53d1\u73b0manifest.xml\u4e2d\u591a\u4e86\u4e00\u4e2aprovider\u7ec4\u4ef6 \u53ef\u4ee5\u5728instant-run.jar\u4e2d\u627e\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u4ee3\u7801 public final class InstantRunContentProvider extends ContentProvider { public boolean onCreate() { if (isMainProcess()) { Log.i(\"InstantRun\", \"starting instant run server: is main process\"); Server.create(getContext()); } else { Log.i(\"InstantRun\", \"not starting instant run server: not main process\"); } return true; } //...\u5176\u4ed6\u6ca1\u6709\u8425\u517b\u7684\u903b\u8f91 \u6211\u4eec\u77e5\u9053ContentProvider\u7684 onCreate \u7684\u8c03\u7528\u65f6\u673a\u4ecb\u4e8eApplication\u7684 attachBaseContext \u548c onCreate \u4e4b\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cprovider\u7684 onCreate \u4f1a\u5728\u5e94\u7528\u542f\u52a8\u65f6\u81ea\u52a8\u88ab\u8c03\u7528\u3002 InstantRunContentProvider\u5728\u5176 onCreate \u65b9\u6cd5\u4e2d\u5c31\u505a\u4e86\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u542f\u52a8\u4e00\u4e2aserver\u3002 public class Server{ public static Server create(Context context) { return new Server(context.getPackageName(), context); } private Server(String packageName, Context context) { this.context = context; try { //\u4ee5packageName\u4f5c\u4e3a\u540d\u5b57\u65b0\u5efaLocalServerSocket this.serverSocket = new LocalServerSocket(packageName); } catch (IOException e) { Log.e(\"InstantRun\", \"IO Error creating local socket at \" + packageName, e); return; } //\u542f\u52a8server startServer(); } private void startServer() { try { Thread socketServerThread = new Thread(new SocketServerThread(this, null)); //\u5728\u72ec\u7acb\u7ebf\u7a0b\u4e2d\u542f\u52a8socket\uff0c\u5e76\u5904\u7406\u76f8\u5e94socket\u8bf7\u6c42\u3002 socketServerThread.start(); } catch (Throwable e) { } } //... //\u5904\u7406socket\u8bf7\u6c42\u6570\u636e private void handle(DataInputStream input, DataOutputStream output) throws IOException { int message; int version = input.readInt(); output.writeInt(4); if (version != 4) { Log.w(\"InstantRun\", \"Mismatched protocol versions; app is using version 4 and tool is using version \" + version); return; } while (true) { //... List<ApplicationPatch> changes; message = input.readInt(); switch (message) { case 1: //\u4ecesocket\u8bfb\u51fachanges\u5217\u8868 changes = ApplicationPatch.read(input); hasResources = Server.hasResources(changes); updateMode = input.readInt(); //\u5904\u7406changes updateMode = Server.this.handlePatches(changes, hasResources, updateMode); //\u6839\u636eupdateMode(\u66f4\u65b0\u65b9\u5f0f)\uff0c\u6bd4\u5982\u91cd\u542f\u5f53\u524dactivity\u6216\u91cd\u542fapp Server.this.restart(updateMode, hasResources, showToast); continue; //\u5176\u4ed6case } } } //\u5904\u7406patch private int handlePatches(List<ApplicationPatch> changes, boolean hasResources, int updateMode) { if (hasResources) { FileManager.startUpdate(); } for (ApplicationPatch change : changes) { String path = change.getPath(); if (path.equals(\"classes.dex.3\")) { //\u5904\u7406\u70ed\u4ea4\u6362patch updateMode = handleHotSwapPatch(updateMode, change); continue; } if (isResourcePath(path)) { //\u5904\u7406\u8d44\u6e90patch updateMode = handleResourcePatch(updateMode, change, path); } } if (hasResources) { FileManager.finishUpdate(true); } return updateMode; } private int handleHotSwapPatch(int updateMode, ApplicationPatch patch) { try { //\u628apatch\u6570\u636e\u5199\u5165dex\u6587\u4ef6 String dexFile = FileManager.writeTempDexFile(patch.getBytes()); String nativeLibraryPath = FileManager.getNativeLibraryFolder().getPath(); //\u4f7f\u7528DexClassLoader\u52a0\u8f7dpatch(dex) DexClassLoader dexClassLoader = new DexClassLoader(dexFile, this.context.getCacheDir().getPath(), nativeLibraryPath, getClass().getClassLoader()); //\u52a0\u8f7d\u7c7bAppPatchesLoaderImpl Class<?> aClass = Class.forName(\"com.android.tools.ir.runtime.AppPatchesLoaderImpl\", true, dexClassLoader); try { if (Log.isLoggable(\"InstantRun\", 2)) { Log.v(\"InstantRun\", \"Got the patcher class \" + aClass); } //\u5b9e\u4f8b\u5316AppPatchesLoaderImpl PatchesLoader loader = (PatchesLoader) aClass.newInstance(); //\u8c03\u7528AppPatchesLoaderImpl\u7684load()\u65b9\u6cd5\uff0c\u52a0\u8f7d\u70ed\u4fee\u590d\u903b\u8f91 if (!loader.load()) { updateMode = 3; } } catch (Exception e) { e.printStackTrace(); updateMode = 3; } } catch (Throwable e) { updateMode = 3; } return updateMode; } //\u5176\u4ed6\u903b\u8f91 } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u77e5\uff0cAppPatchesLoaderImpl\u7c7b\u662f\u9760\u52a0\u8f7dpatch\u7684classLoader\u52a0\u8f7d\u7684\u3002\u5b9e\u9645\u63a8\u9001\u5230\u8bbe\u5907\u4e0a\u7684patch\u4e3a app/intermediates/reload-dex/classes.dex \uff0c\u91cc\u9762\u6709\u4e24\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u7c7b\u662f\u4e0a\u9762\u5df2\u7ecf\u8bf4\u8fc7\u7684MainActivity$override\uff0c\u53e6\u4e00\u4e2a\u7c7b\u5c31\u662fAppPatchesLoaderImpl\uff0c\u4f5c\u7528\u662f\u6307\u660e\u54ea\u4e9b\u7c7b\u9700\u8981patch\u3002 public class AppPatchesLoaderImpl extends AbstractPatchesLoaderImpl { public static final long BUILD_ID = 1571577597897L; public AppPatchesLoaderImpl() { } public String[] getPatchedClasses() { //\u7f57\u5217\u54ea\u4e9b\u7c7b\u9700\u8981\u88abpatch return new String[]{\"com.example.myapplication.MainActivity\"}; } } \u770b\u6765load\u65b9\u6cd5\u662f\u5728\u5176\u7236\u7c7bAbstractPatchesLoaderImpl\u4e2d\uff0c\u6211\u4eec\u5728instant-run.jar\u7684runtime\u4e0b\u627e\u5230\u4e86\u3002 public abstract class AbstractPatchesLoaderImpl implements PatchesLoader { private final Method get = java.util.concurrent.atomic.AtomicReference.class.getMethod(\"get\", new Class[0]); private final Method set = java.util.concurrent.atomic.AtomicReference.class.getMethod(\"set\", new Class[]{Object.class}); public abstract String[] getPatchedClasses(); public boolean load() { //\u904d\u5386\u9700\u8981\u4fee\u590d\u7684\u7c7b for (String className : getPatchedClasses()) { try { ClassLoader cl = getClass().getClassLoader(); //\u52a0\u8f7d\u5bf9\u5e94\u88ab\u4fee\u590d\u7684$override\u7c7b Class<?> aClass = cl.loadClass(className + \"$override\"); //\u5b9e\u4f8b\u5316 Object o = aClass.newInstance(); //\u52a0\u8f7d\u539f\u7c7bclass Class<?> originalClass = cl.loadClass(className); //\u5b9a\u4f4d\u539f\u7c7b\u7684\u9759\u6001\u6210\u5458$change Field changeField = originalClass.getDeclaredField(\"$change\"); changeField.setAccessible(true); //\u5c06\u5b9e\u4f8b\u5316\u7684$override\u8d4b\u503c\u7ed9$change\uff0c\u8fd9\u91cc\u6839\u636e\u539f\u7c7b\u662f\u662f\u5426\u662f\u63a5\u53e3\uff0c\u903b\u8f91\u6709\u70b9\u4e0d\u540c Object previous = originalClass.isInterface() ? patchInterface(changeField, o) : patchClass(changeField, o); //... } catch (Exception e) { //... return false; } } return true; } private Object patchInterface(Field changeField, Object patch) { Object atomicReference = changeField.get(null); Object previous = this.get.invoke(atomicReference, new Object[0]); this.set.invoke(atomicReference, new Object[]{patch}); return previous; } private Object patchClass(Field changeField, Object patch) { Object previous = changeField.get(null); changeField.set(null, patch); return previous; } } \u5230\u8fd9\u91cc\uff0c\u770b\u5230$change\u53d8\u91cf\u88ab\u8d4b\u503c\u4e3a$change\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u70ed\u4fee\u590d\u903b\u8f91\u5b8c\u6210\u4e86\u3002","title":"patch\u6587\u4ef6\u5982\u4f55\u4e0a\u4f20\u5230app\u91cc\u7684\uff1f"},{"location":"instantRun/#_5","text":"\u5b8c\u6574\u7684\u8fc7\u7a0b\u53ef\u4ee5\u6982\u8ff0\u4e3a\uff1a 1. \u5728\u7b2c\u4e00\u6b21\u5b8c\u6574\u7f16\u8bd1\u7684\u65f6\u5019\u7ed9\u6240\u6709\u7684\u7c7b\u63d2\u6869\uff0c\u4f7f\u5b83\u4eec\u7684\u65b9\u6cd5\u80fd\u88ab\u4ee3\u7406 2. app\u542f\u52a8\u65f6\u542f\u52a8\u4e00\u4e2aAppServer\uff0c\u7b49\u5f85Android Studio\u63a8\u9001\u589e\u91cf\u5305 3. \u4ee3\u7801\u6539\u52a8\u540e\u7684\u589e\u91cf\u7f16\u8bd1\u4e2d\uff0c\u901a\u8fc7gradle\u63d2\u4ef6\u751f\u6210\u5305\u542b\u4e86\u6539\u52a8\u4ee3\u7801\u7684\u4ee3\u7406\u7c7b$change 4. Android Studio\u5c06patch\u63a8\u9001\u5230app\u4e2d\uff0c\u7136\u540e\u7ed9\u88ab\u6539\u52a8\u7684\u7c7b\u7684 $change \u5b57\u6bb5\u8d4b\u503c\uff0c\u8fd9\u6837\u6240\u6709\u65b9\u6cd5\u90fd\u8f6c\u53d1\u5230\u4e86\u4ee3\u7406\u7c7b //todo \u8d44\u6e90\u4fee\u590d","title":"\u603b\u7ed3"},{"location":"java_collections/","text":"\u6982\u89c8 Java\u5bb9\u5668\u5de5\u5177\u5305\u6846\u67b6\u56fe: \u4e24\u4e2a\u57fa\u672c\u4e3b\u4f53\uff0c\u5373Collection\u548cMap\u3002 Collection\u662f\u4e00\u4e2a \u63a5\u53e3 \uff0c\u662f\u9ad8\u5ea6\u62bd\u8c61\u51fa\u6765\u7684\u96c6\u5408\uff0c\u5b83\u5305\u542b\u4e86\u96c6\u5408\u7684\u57fa\u672c\u64cd\u4f5c\u548c\u5c5e\u6027\u3002Collection\u5305\u542b\u4e86List\u3001Set\u548cQueue\u4e09\u5927\u5206\u652f\u3002 List\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u961f\u5217\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u5b83\u7684\u7d22\u5f15\u3002List\u7684\u5b9e\u73b0\u7c7b\u6709LinkedList, ArrayList, Vector, Stack\u3002 Set\u662f\u4e00\u4e2a\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\u7684\u96c6\u5408\u3002 Set\u7684\u5b9e\u73b0\u7c7b\u6709HastSet\u548cTreeSet\u3002HashSet\u4f9d\u8d56\u4e8eHashMap\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7HashMap\u5b9e\u73b0\u7684\uff1bTreeSet\u4f9d\u8d56\u4e8eTreeMap\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7TreeMap\u5b9e\u73b0\u7684\u3002 Queue\u662f\u4e00\u4e2a\u961f\u5217\u63a5\u53e3\uff0c\u5148\u8fdb\u5148\u51fa\uff0cDeque\u63a5\u53e3\u7ee7\u627f\u81eaQueue\uff0c\u5b9e\u73b0\u53cc\u7aef\u961f\u5217\uff0c\u5373\u652f\u6301\u4ece\u4e24\u4e2a\u7aef\u70b9\u65b9\u5411\u68c0\u7d22\u548c\u63d2\u5165\u5143\u7d20\u3002LinkedList\u65e2\u53ef\u4ee5\u4f5c\u4e3aList\u6765\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3aDeque\u6765\u7528\u3002 Map\u662f\u4e00\u4e2a\u6620\u5c04\u63a5\u53e3\uff0c\u5373key-value\u952e\u503c\u5bf9\u3002 AbstractMap\u662f\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u4e2d\u7684\u5927\u90e8\u5206API\u3002\u800cHashMap\uff0cTreeMap\uff0cWeakHashMap\u90fd\u662f\u7ee7\u627f\u4e8eAbstractMap\u3002 Hashtable\u867d\u7136\u7ee7\u627f\u4e8eDictionary\uff0c\u4f46\u5b83\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u3002 Iterator\u662f\u904d\u5386\u96c6\u5408\u7684\u5de5\u5177\u3002\u6211\u4eec\u8bf4Collection\u4f9d\u8d56\u4e8eIterator\uff0c\u662f\u56e0\u4e3aCollection\u7684\u5b9e\u73b0\u7c7b\u90fd\u8981\u5b9e\u73b0iterator()\u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2aIterator\u5bf9\u8c61\u3002ListIterator\u662f\u4e13\u95e8\u4e3a\u904d\u5386List\u800c\u5b58\u5728\u7684\u3002 Enumeration\u7684\u4f5c\u7528\u548cIterator\u4e00\u6837\uff0c\u4e5f\u662f\u904d\u5386\u96c6\u5408\uff0c\u4f46\u662fEnumeration\u7684\u529f\u80fd\u8981\u6bd4Iterator\u5c11\u3002\u5728\u4e0a\u9762\u7684\u6846\u56fe\u4e2d\uff0cEnumeration\u53ea\u80fd\u5728Hashtable, Vector/Stack\u4e2d\u4f7f\u7528\u3002 Arrays\u548cCollections\u5206\u522b\u662f\u64cd\u4f5c\u6570\u7ec4\u3001\u96c6\u5408\u7684\u4e24\u4e2a\u5de5\u5177\u7c7b\u3002 ArrayList ArrayList\u662f\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\uff0c\u5b83\u5141\u8bb8\u4efb\u4f55\u7b26\u5408\u89c4\u5219\u7684\u5143\u7d20\u63d2\u5165\u751a\u81f3 \u5305\u62ecnull \u3002\u6bcf\u4e00\u4e2aArrayList\u90fd\u6709\u4e00\u4e2a\u521d\u59cb\u5bb9\u91cf\uff1a static final int DEFAULT_CAPACITY = 10; \u968f\u7740\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u4e0d\u65ad\u589e\u52a0\uff0c\u5bb9\u5668\u7684\u5927\u5c0f\u4e5f\u4f1a\u968f\u7740\u589e\u52a0\u3002\u5728\u6bcf\u6b21\u5411\u5bb9\u5668\u4e2d\u589e\u52a0\u5143\u7d20\u7684\u540c\u65f6\u90fd\u4f1a\u8fdb\u884c\u5bb9\u91cf\u68c0\u67e5\uff0c\u5f53\u5feb\u6ea2\u51fa\u65f6\uff0c\u5c31\u4f1a\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u660e\u786e\u6240\u63d2\u5165\u5143\u7d20\u7684\u591a\u5c11\uff0c\u6700\u597d\u6307\u5b9a\u4e00\u4e2a\u521d\u59cb\u5bb9\u91cf\u503c\uff0c\u907f\u514d\u8fc7\u591a\u7684\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u800c\u6d6a\u8d39\u65f6\u95f4\u3001\u6548\u7387\u3002 ArrayList\u64c5\u957f\u4e8e\u968f\u673a\u8bbf\u95ee\uff0c\u4f46ArrayList\u662f\u975e\u540c\u6b65\u7684\u3002 LinkedList LinkedList\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u94fe\u8868\u4e0d\u80fd\u968f\u673a\u8bbf\u95ee\uff0c\u5b83\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u8981\u6309\u7167\u53cc\u7aef\u94fe\u8868\u7684\u9700\u8981\u6267\u884c\u3002\u5728\u5217\u8868\u4e2d\u7d22\u5f15\u7684\u64cd\u4f5c\u5c06\u4ece\u5f00\u5934\u6216\u7ed3\u5c3e\u904d\u5386\u5217\u8868\u3002\u94fe\u8868\u7684\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u8f83\u4f4e\u7684\u4ee3\u4ef7\u5728List\u4e2d\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002 \u4e0eArrayList\u4e00\u6837\uff0cLinkedList\u4e5f\u662f\u975e\u540c\u6b65\u7684\u3002\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u4e00\u4e2aList\uff0c\u5219\u5fc5\u987b\u81ea\u5df1\u5b9e\u73b0\u8bbf\u95ee\u540c\u6b65\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528Collections\u4e2d\u7684synchronizedList\u65b9\u6cd5\u5c06LinkedList\u8f6c\u6362\u4e3a\u4e00\u4e2a\u540c\u6b65\u7684List\u3002 List list = Collections.synchronizedList(new LinkedList(\u2026)) Vector \u4e0eArrayList\u76f8\u4f3c\uff0c\u4f46\u662fVector\u662f\u540c\u6b65\u7684\u3002 Stack Stack\u7ee7\u627f\u81eaVector\uff0c\u5b9e\u73b0\u4e00\u4e2a\u540e\u8fdb\u5148\u51fa\u7684\u5806\u6808\u3002Stack\u63d0\u4f9b\u51e0\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\u4f7f\u5f97Vector\u5f97\u4ee5\u88ab\u5f53\u4f5c \u5806\u6808 \u4f7f\u7528\u3002\u57fa\u672c\u7684push\u548cpop\u65b9\u6cd5\uff0c\u8fd8\u6709peek\u65b9\u6cd5\u5f97\u5230\u6808\u9876\u7684\u5143\u7d20\uff0csearch\u65b9\u6cd5\u68c0\u6d4b\u4e00\u4e2a\u5143\u7d20\u5728\u5806\u6808\u4e2d\u7684\u4f4d\u7f6e\uff0cStack\u521a\u521b\u5efa\u540e\u662f\u7a7a\u6808\u3002 HashSet HashSet\u5185\u90e8\u662f\u4ee5HashCode\u6765\u5b9e\u73b0\u7684\u3002\u96c6\u5408\u5143\u7d20\u53ef\u4ee5\u662fnull, \u4f46\u53ea\u80fd\u653e\u5165\u4e00\u4e2anull\u3002\u5b83\u5185\u90e8\u5143\u7d20\u7684\u987a\u5e8f\u662f\u7531\u54c8\u5e0c\u7801\u6765\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u5b83\u4e0d\u4fdd\u8bc1set\u7684\u8fed\u4ee3\u987a\u5e8f\uff0c\u7279\u522b\u662f\u5b83\u4e0d\u4fdd\u8bc1\u8be5\u987a\u5e8f\u6052\u4e45\u4e0d\u53d8\u3002 TreeSet TreeSet\u662f\u4e8c\u53c9\u6811\u5b9e\u73b0\u7684\uff0c\u5185\u90e8\u4ee5TreeMap\u6765\u5b9e\u73b0\uff0c\u4e0d\u5141\u8bb8\u653e\u5165null\u503c\u3002\u5b83\u662f\u4f7f\u7528\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002 LinkedHashSet LinkedHashSet\u96c6\u5408\u540c\u6837\u662f\u6839\u636e\u5143\u7d20\u7684hashCode\u503c\u6765\u51b3\u5b9a\u5143\u7d20\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u4f46\u662f\u5b83\u540c\u65f6\u4f7f\u7528\u94fe\u8868\u7ef4\u62a4\u5143\u7d20\u7684\u6b21\u5e8f\u3002\u8fd9\u6837\u4f7f\u5f97\u5143\u7d20\u770b\u8d77 \u6765\u50cf\u662f\u4ee5\u63d2\u5165\u987a\u5e8f\u4fdd\u5b58\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u904d\u5386\u8be5\u96c6\u5408\u65f6\u5019\uff0cLinkedHashSet\u5c06\u4f1a\u4ee5\u5143\u7d20\u7684\u6dfb\u52a0\u987a\u5e8f\u8bbf\u95ee\u96c6\u5408\u7684\u5143\u7d20\u3002 HashMap \u4ee5\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff0c\u67e5\u627e\u5bf9\u8c61\u65f6\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u5176\u4f4d\u7f6e\uff0c\u5b83\u662f\u4e3a\u5feb\u901f\u67e5\u8be2\u800c\u8bbe\u8ba1\u7684\uff0c\u5176\u5185\u90e8\u5b9a\u4e49\u4e86\u4e00\u4e2ahash\u8868\u6570\u7ec4\uff08Entry[] table\uff09\uff0c\u5143\u7d20\u4f1a\u901a\u8fc7\u54c8\u5e0c\u8f6c\u6362\u51fd\u6570\u5c06\u5143\u7d20\u7684\u54c8\u5e0c\u5730\u5740\u8f6c\u6362\u6210\u6570\u7ec4\u4e2d\u5b58\u653e\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6709\u51b2\u7a81\uff0c\u5219\u4f7f\u7528\u6563\u5217\u94fe\u8868\u7684\u5f62\u5f0f\u5c06\u6240\u6709\u76f8\u540c\u54c8\u5e0c\u5730\u5740\u7684\u5143\u7d20\u4e32\u8d77\u6765\u3002 HashMap\u4e2d\uff0cnull\u53ef\u4ee5\u4f5c\u4e3a\u952e\uff0c\u8fd9\u6837\u7684\u952e\u53ea\u6709\u4e00\u4e2a\uff1b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u952e\u6240\u5bf9\u5e94\u7684value\u4e3anull\u3002 \u521d\u59cb\u5316\u5927\u5c0f\uff1a16 HashMap\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u53ea\u662f\u7528\u4e8e\u5355\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u53ef\u4ee5\u91c7\u7528concurrent\u5e76\u53d1\u5305\u4e0b\u7684concurrentHashMap\u3002 HashTable Hashtable\u548cHashMap\u6bd4\u8f83\u76f8\u4f3c\uff0cHashtable\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u80fd\u7528\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u3002Hashtable\u4e2d\uff0ckey\u548cvalue\u90fd\u4e0d\u5141\u8bb8\u51fa\u73b0null\u503c\u3002\u56e0\u4e3a\u548cMap\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0cHashtable\u4f7f\u7528Enumeration\u6765\u904d\u5386\u3002\u521d\u59cb\u5316\u5927\u5c0f\uff1a11\u3002 TreeMap \u6709\u5e8f\u6563\u5217\u8868\uff0c\u5b9e\u73b0SortedMap\u63a5\u53e3\uff0c\u5e95\u5c42\u901a\u8fc7\u7ea2\u9ed1\u6811\u5b9e\u73b0\u3002 WeakHashMap \u4ee5\u5f31\u952e\u5b9e\u73b0\u7684\u57fa\u4e8e\u54c8\u5e0c\u8868\u7684Map\u3002\u5728 WeakHashMap \u4e2d\uff0c\u5f53\u67d0\u4e2a\u952e\u4e0d\u518d\u6b63\u5e38\u4f7f\u7528\u65f6\uff0c\u5c06\u81ea\u52a8\u79fb\u9664\u5176\u6761\u76ee\u3002 \u50cf\u5927\u591a\u6570\u96c6\u5408\u7c7b\u4e00\u6837\uff0c\u8be5\u7c7b\u662f\u4e0d\u540c\u6b65\u7684\u3002 Class|\u521d\u59cb\u5927\u5c0f|\u52a0\u8f7d\u56e0\u5b50|\u6269\u5bb9\u500d\u6570|\u5e95\u5c42\u5b9e\u73b0|\u662f\u5426\u7ebf\u7a0b\u5b89\u5168 |---|---|---|---|---|--- ArrayList|10|1|1.5\u500d+1|Object\u6570\u7ec4|\u4e0d\u5b89\u5168 Vector|10|1|2\u500d|Object\u6570\u7ec4|\u5b89\u5168 HashSet|16|0.75f|2\u500d|HashMap |\u4e0d\u5b89\u5168 HashMap|16|0.75f|2\u500d|Map.Entry|\u4e0d\u5b89\u5168 Hashtable|11|0.75f|2\u500d+1|Hashtable.Entry\u6570\u7ec4|\u5b89\u5168","title":"Java collections"},{"location":"java_collections/#_1","text":"Java\u5bb9\u5668\u5de5\u5177\u5305\u6846\u67b6\u56fe: \u4e24\u4e2a\u57fa\u672c\u4e3b\u4f53\uff0c\u5373Collection\u548cMap\u3002 Collection\u662f\u4e00\u4e2a \u63a5\u53e3 \uff0c\u662f\u9ad8\u5ea6\u62bd\u8c61\u51fa\u6765\u7684\u96c6\u5408\uff0c\u5b83\u5305\u542b\u4e86\u96c6\u5408\u7684\u57fa\u672c\u64cd\u4f5c\u548c\u5c5e\u6027\u3002Collection\u5305\u542b\u4e86List\u3001Set\u548cQueue\u4e09\u5927\u5206\u652f\u3002 List\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u961f\u5217\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u5b83\u7684\u7d22\u5f15\u3002List\u7684\u5b9e\u73b0\u7c7b\u6709LinkedList, ArrayList, Vector, Stack\u3002 Set\u662f\u4e00\u4e2a\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\u7684\u96c6\u5408\u3002 Set\u7684\u5b9e\u73b0\u7c7b\u6709HastSet\u548cTreeSet\u3002HashSet\u4f9d\u8d56\u4e8eHashMap\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7HashMap\u5b9e\u73b0\u7684\uff1bTreeSet\u4f9d\u8d56\u4e8eTreeMap\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7TreeMap\u5b9e\u73b0\u7684\u3002 Queue\u662f\u4e00\u4e2a\u961f\u5217\u63a5\u53e3\uff0c\u5148\u8fdb\u5148\u51fa\uff0cDeque\u63a5\u53e3\u7ee7\u627f\u81eaQueue\uff0c\u5b9e\u73b0\u53cc\u7aef\u961f\u5217\uff0c\u5373\u652f\u6301\u4ece\u4e24\u4e2a\u7aef\u70b9\u65b9\u5411\u68c0\u7d22\u548c\u63d2\u5165\u5143\u7d20\u3002LinkedList\u65e2\u53ef\u4ee5\u4f5c\u4e3aList\u6765\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3aDeque\u6765\u7528\u3002 Map\u662f\u4e00\u4e2a\u6620\u5c04\u63a5\u53e3\uff0c\u5373key-value\u952e\u503c\u5bf9\u3002 AbstractMap\u662f\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u4e2d\u7684\u5927\u90e8\u5206API\u3002\u800cHashMap\uff0cTreeMap\uff0cWeakHashMap\u90fd\u662f\u7ee7\u627f\u4e8eAbstractMap\u3002 Hashtable\u867d\u7136\u7ee7\u627f\u4e8eDictionary\uff0c\u4f46\u5b83\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u3002 Iterator\u662f\u904d\u5386\u96c6\u5408\u7684\u5de5\u5177\u3002\u6211\u4eec\u8bf4Collection\u4f9d\u8d56\u4e8eIterator\uff0c\u662f\u56e0\u4e3aCollection\u7684\u5b9e\u73b0\u7c7b\u90fd\u8981\u5b9e\u73b0iterator()\u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2aIterator\u5bf9\u8c61\u3002ListIterator\u662f\u4e13\u95e8\u4e3a\u904d\u5386List\u800c\u5b58\u5728\u7684\u3002 Enumeration\u7684\u4f5c\u7528\u548cIterator\u4e00\u6837\uff0c\u4e5f\u662f\u904d\u5386\u96c6\u5408\uff0c\u4f46\u662fEnumeration\u7684\u529f\u80fd\u8981\u6bd4Iterator\u5c11\u3002\u5728\u4e0a\u9762\u7684\u6846\u56fe\u4e2d\uff0cEnumeration\u53ea\u80fd\u5728Hashtable, Vector/Stack\u4e2d\u4f7f\u7528\u3002 Arrays\u548cCollections\u5206\u522b\u662f\u64cd\u4f5c\u6570\u7ec4\u3001\u96c6\u5408\u7684\u4e24\u4e2a\u5de5\u5177\u7c7b\u3002","title":"\u6982\u89c8"},{"location":"java_collections/#arraylist","text":"ArrayList\u662f\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\uff0c\u5b83\u5141\u8bb8\u4efb\u4f55\u7b26\u5408\u89c4\u5219\u7684\u5143\u7d20\u63d2\u5165\u751a\u81f3 \u5305\u62ecnull \u3002\u6bcf\u4e00\u4e2aArrayList\u90fd\u6709\u4e00\u4e2a\u521d\u59cb\u5bb9\u91cf\uff1a static final int DEFAULT_CAPACITY = 10; \u968f\u7740\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u4e0d\u65ad\u589e\u52a0\uff0c\u5bb9\u5668\u7684\u5927\u5c0f\u4e5f\u4f1a\u968f\u7740\u589e\u52a0\u3002\u5728\u6bcf\u6b21\u5411\u5bb9\u5668\u4e2d\u589e\u52a0\u5143\u7d20\u7684\u540c\u65f6\u90fd\u4f1a\u8fdb\u884c\u5bb9\u91cf\u68c0\u67e5\uff0c\u5f53\u5feb\u6ea2\u51fa\u65f6\uff0c\u5c31\u4f1a\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u660e\u786e\u6240\u63d2\u5165\u5143\u7d20\u7684\u591a\u5c11\uff0c\u6700\u597d\u6307\u5b9a\u4e00\u4e2a\u521d\u59cb\u5bb9\u91cf\u503c\uff0c\u907f\u514d\u8fc7\u591a\u7684\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u800c\u6d6a\u8d39\u65f6\u95f4\u3001\u6548\u7387\u3002 ArrayList\u64c5\u957f\u4e8e\u968f\u673a\u8bbf\u95ee\uff0c\u4f46ArrayList\u662f\u975e\u540c\u6b65\u7684\u3002","title":"ArrayList"},{"location":"java_collections/#linkedlist","text":"LinkedList\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u94fe\u8868\u4e0d\u80fd\u968f\u673a\u8bbf\u95ee\uff0c\u5b83\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u8981\u6309\u7167\u53cc\u7aef\u94fe\u8868\u7684\u9700\u8981\u6267\u884c\u3002\u5728\u5217\u8868\u4e2d\u7d22\u5f15\u7684\u64cd\u4f5c\u5c06\u4ece\u5f00\u5934\u6216\u7ed3\u5c3e\u904d\u5386\u5217\u8868\u3002\u94fe\u8868\u7684\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u8f83\u4f4e\u7684\u4ee3\u4ef7\u5728List\u4e2d\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002 \u4e0eArrayList\u4e00\u6837\uff0cLinkedList\u4e5f\u662f\u975e\u540c\u6b65\u7684\u3002\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u4e00\u4e2aList\uff0c\u5219\u5fc5\u987b\u81ea\u5df1\u5b9e\u73b0\u8bbf\u95ee\u540c\u6b65\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528Collections\u4e2d\u7684synchronizedList\u65b9\u6cd5\u5c06LinkedList\u8f6c\u6362\u4e3a\u4e00\u4e2a\u540c\u6b65\u7684List\u3002 List list = Collections.synchronizedList(new LinkedList(\u2026))","title":"LinkedList"},{"location":"java_collections/#vector","text":"\u4e0eArrayList\u76f8\u4f3c\uff0c\u4f46\u662fVector\u662f\u540c\u6b65\u7684\u3002","title":"Vector"},{"location":"java_collections/#stack","text":"Stack\u7ee7\u627f\u81eaVector\uff0c\u5b9e\u73b0\u4e00\u4e2a\u540e\u8fdb\u5148\u51fa\u7684\u5806\u6808\u3002Stack\u63d0\u4f9b\u51e0\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\u4f7f\u5f97Vector\u5f97\u4ee5\u88ab\u5f53\u4f5c \u5806\u6808 \u4f7f\u7528\u3002\u57fa\u672c\u7684push\u548cpop\u65b9\u6cd5\uff0c\u8fd8\u6709peek\u65b9\u6cd5\u5f97\u5230\u6808\u9876\u7684\u5143\u7d20\uff0csearch\u65b9\u6cd5\u68c0\u6d4b\u4e00\u4e2a\u5143\u7d20\u5728\u5806\u6808\u4e2d\u7684\u4f4d\u7f6e\uff0cStack\u521a\u521b\u5efa\u540e\u662f\u7a7a\u6808\u3002","title":"Stack"},{"location":"java_collections/#hashset","text":"HashSet\u5185\u90e8\u662f\u4ee5HashCode\u6765\u5b9e\u73b0\u7684\u3002\u96c6\u5408\u5143\u7d20\u53ef\u4ee5\u662fnull, \u4f46\u53ea\u80fd\u653e\u5165\u4e00\u4e2anull\u3002\u5b83\u5185\u90e8\u5143\u7d20\u7684\u987a\u5e8f\u662f\u7531\u54c8\u5e0c\u7801\u6765\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u5b83\u4e0d\u4fdd\u8bc1set\u7684\u8fed\u4ee3\u987a\u5e8f\uff0c\u7279\u522b\u662f\u5b83\u4e0d\u4fdd\u8bc1\u8be5\u987a\u5e8f\u6052\u4e45\u4e0d\u53d8\u3002","title":"HashSet"},{"location":"java_collections/#treeset","text":"TreeSet\u662f\u4e8c\u53c9\u6811\u5b9e\u73b0\u7684\uff0c\u5185\u90e8\u4ee5TreeMap\u6765\u5b9e\u73b0\uff0c\u4e0d\u5141\u8bb8\u653e\u5165null\u503c\u3002\u5b83\u662f\u4f7f\u7528\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002","title":"TreeSet"},{"location":"java_collections/#linkedhashset","text":"LinkedHashSet\u96c6\u5408\u540c\u6837\u662f\u6839\u636e\u5143\u7d20\u7684hashCode\u503c\u6765\u51b3\u5b9a\u5143\u7d20\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u4f46\u662f\u5b83\u540c\u65f6\u4f7f\u7528\u94fe\u8868\u7ef4\u62a4\u5143\u7d20\u7684\u6b21\u5e8f\u3002\u8fd9\u6837\u4f7f\u5f97\u5143\u7d20\u770b\u8d77 \u6765\u50cf\u662f\u4ee5\u63d2\u5165\u987a\u5e8f\u4fdd\u5b58\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u904d\u5386\u8be5\u96c6\u5408\u65f6\u5019\uff0cLinkedHashSet\u5c06\u4f1a\u4ee5\u5143\u7d20\u7684\u6dfb\u52a0\u987a\u5e8f\u8bbf\u95ee\u96c6\u5408\u7684\u5143\u7d20\u3002","title":"LinkedHashSet"},{"location":"java_collections/#hashmap","text":"\u4ee5\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff0c\u67e5\u627e\u5bf9\u8c61\u65f6\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u5176\u4f4d\u7f6e\uff0c\u5b83\u662f\u4e3a\u5feb\u901f\u67e5\u8be2\u800c\u8bbe\u8ba1\u7684\uff0c\u5176\u5185\u90e8\u5b9a\u4e49\u4e86\u4e00\u4e2ahash\u8868\u6570\u7ec4\uff08Entry[] table\uff09\uff0c\u5143\u7d20\u4f1a\u901a\u8fc7\u54c8\u5e0c\u8f6c\u6362\u51fd\u6570\u5c06\u5143\u7d20\u7684\u54c8\u5e0c\u5730\u5740\u8f6c\u6362\u6210\u6570\u7ec4\u4e2d\u5b58\u653e\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6709\u51b2\u7a81\uff0c\u5219\u4f7f\u7528\u6563\u5217\u94fe\u8868\u7684\u5f62\u5f0f\u5c06\u6240\u6709\u76f8\u540c\u54c8\u5e0c\u5730\u5740\u7684\u5143\u7d20\u4e32\u8d77\u6765\u3002 HashMap\u4e2d\uff0cnull\u53ef\u4ee5\u4f5c\u4e3a\u952e\uff0c\u8fd9\u6837\u7684\u952e\u53ea\u6709\u4e00\u4e2a\uff1b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u952e\u6240\u5bf9\u5e94\u7684value\u4e3anull\u3002 \u521d\u59cb\u5316\u5927\u5c0f\uff1a16 HashMap\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u53ea\u662f\u7528\u4e8e\u5355\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u53ef\u4ee5\u91c7\u7528concurrent\u5e76\u53d1\u5305\u4e0b\u7684concurrentHashMap\u3002","title":"HashMap"},{"location":"java_collections/#hashtable","text":"Hashtable\u548cHashMap\u6bd4\u8f83\u76f8\u4f3c\uff0cHashtable\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u80fd\u7528\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u3002Hashtable\u4e2d\uff0ckey\u548cvalue\u90fd\u4e0d\u5141\u8bb8\u51fa\u73b0null\u503c\u3002\u56e0\u4e3a\u548cMap\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0cHashtable\u4f7f\u7528Enumeration\u6765\u904d\u5386\u3002\u521d\u59cb\u5316\u5927\u5c0f\uff1a11\u3002","title":"HashTable"},{"location":"java_collections/#treemap","text":"\u6709\u5e8f\u6563\u5217\u8868\uff0c\u5b9e\u73b0SortedMap\u63a5\u53e3\uff0c\u5e95\u5c42\u901a\u8fc7\u7ea2\u9ed1\u6811\u5b9e\u73b0\u3002","title":"TreeMap"},{"location":"java_collections/#weakhashmap","text":"\u4ee5\u5f31\u952e\u5b9e\u73b0\u7684\u57fa\u4e8e\u54c8\u5e0c\u8868\u7684Map\u3002\u5728 WeakHashMap \u4e2d\uff0c\u5f53\u67d0\u4e2a\u952e\u4e0d\u518d\u6b63\u5e38\u4f7f\u7528\u65f6\uff0c\u5c06\u81ea\u52a8\u79fb\u9664\u5176\u6761\u76ee\u3002 \u50cf\u5927\u591a\u6570\u96c6\u5408\u7c7b\u4e00\u6837\uff0c\u8be5\u7c7b\u662f\u4e0d\u540c\u6b65\u7684\u3002 Class|\u521d\u59cb\u5927\u5c0f|\u52a0\u8f7d\u56e0\u5b50|\u6269\u5bb9\u500d\u6570|\u5e95\u5c42\u5b9e\u73b0|\u662f\u5426\u7ebf\u7a0b\u5b89\u5168 |---|---|---|---|---|--- ArrayList|10|1|1.5\u500d+1|Object\u6570\u7ec4|\u4e0d\u5b89\u5168 Vector|10|1|2\u500d|Object\u6570\u7ec4|\u5b89\u5168 HashSet|16|0.75f|2\u500d|HashMap |\u4e0d\u5b89\u5168 HashMap|16|0.75f|2\u500d|Map.Entry|\u4e0d\u5b89\u5168 Hashtable|11|0.75f|2\u500d+1|Hashtable.Entry\u6570\u7ec4|\u5b89\u5168","title":"WeakHashMap"},{"location":"java_concurrent/","text":"","title":"Java concurrent"},{"location":"java_poet/","text":"\u7b80\u4ecb\uff1a JavaPoet\u662fsquare\u63a8\u51fa\u7684\u5f00\u6e90java\u4ee3\u7801\u751f\u6210\u6846\u67b6\uff0c\u63d0\u4f9bJava Api\u751f\u6210.java\u6e90\u6587\u4ef6\u3002 \u9879\u76ee\u4e3b\u9875\u53ca\u6e90\u7801\uff1a https://github.com/square/javapoet \u793a\u4f8b\uff1a compile 'com.squareup:javapoet:1.9.0' \u8fd9\u662f\u4e00\u6bb5\u666e\u901a\u7684java\u4ee3\u7801\uff1a // This codes are generated automatically. Do not modify! package com.example.helloworld; import java.lang.String; import java.lang.System; public final class HelloWorld { private static final String key = \"hello world\"; public static void main(String[] args) { System.out.println(\"Hello, JavaPoet!\"); } } \u4e0a\u65b9\u7684\u4ee3\u7801\u662f\u901a\u8fc7\u4e0b\u65b9\u4ee3\u7801\u8c03\u7528JavaPoet\u7684API\u751f\u6210\u7684\uff1a FieldSpec filedSpec = FieldSpec.builder(String.class, \"key\", Modifier.STATIC, Modifier.PRIVATE, Modifier.FINAL) .initializer(CodeBlock.of(\"\\\"hello world\\\"\")) .build(); MethodSpec main = MethodSpec.methodBuilder(\"main\") .addModifiers(Modifier.PUBLIC, Modifier.STATIC) .returns(void.class) .addParameter(String[].class, \"args\") .addStatement(\"$T.out.println($S)\", System.class, \"Hello, JavaPoet!\") .build(); TypeSpec helloWorld = TypeSpec.classBuilder(\"HelloWorld\") .addField(filedSpec) .addModifiers(Modifier.PUBLIC, Modifier.FINAL) .addMethod(main) .build(); JavaFile javaFile = JavaFile.builder(\"com.example.helloworld\", helloWorld) .addFileComment(\"This codes are generated automatically. Do not modify!\") .build(); javaFile.writeTo(System.out); \u4ee3\u7801\u8bf4\u660e \u89c2\u5bdfJavaPoet\u7684\u4ee3\u7801\u4e3b\u8981\u7684\u7c7b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a Spec \u7528\u6765\u63cf\u8ff0Java\u4e2d\u57fa\u672c\u7684\u5143\u7d20\uff0c\u5305\u62ec\u7c7b\u578b\uff0c\u6ce8\u89e3\uff0c\u5b57\u6bb5\uff0c\u65b9\u6cd5\u548c\u53c2\u6570\u7b49\u3002 AnnotationSpec FieldSpec MethodSpec ParameterSpec TypeSpec Name \u7528\u6765\u63cf\u8ff0\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u5305\u62ecVoid\uff0c\u539f\u59cb\u7c7b\u578b\uff08int\uff0clong\u7b49\uff09\u548cJava\u7c7b\u7b49\u3002 TypeName ArrayTypeName ClassName ParameterizedTypeName TypeVariableName WildcardTypeName CodeBlock \u7528\u6765\u63cf\u8ff0\u4ee3\u7801\u5757\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u666e\u901a\u7684\u8d4b\u503c\uff0cif\u5224\u65ad\uff0c\u5faa\u73af\u5224\u65ad\u7b49\u3002 JavaFile \u5b8c\u6574\u7684Java\u6587\u4ef6\uff0cJavaPoet\u7684\u4e3b\u8981\u7684\u5165\u53e3\u3002 CodeWriter \u8bfb\u53d6JavaFile\u5e76\u8f6c\u6362\u6210\u53ef\u9605\u8bfb\u53ef\u7f16\u8bd1\u7684Java\u6e90\u6587\u4ef6\u3002 key class description JavaFile A Java file containing a single top level class TypeSpec A generated class, interface, or enum declaration MethodSpec A generated constructor or method declaration FieldSpec A generated field declaration ParameterSpec A generated parameter declaration AnnotationSpec A generated annotation on a declaration JavaPoet\u63d0\u4f9b\u5185\u90e8Builder\u4f9b\u5916\u90e8\u66f4\u591a\u66f4\u597d\u5730\u8fdb\u884c\u4e00\u4e9b\u53c2\u6570\u7684\u8bbe\u7f6e\u4ee5\u4fbf\u6709\u5c42\u6b21\u7684\u6269\u5c55\u6027\u7684\u6784\u9020\u5bf9\u5e94\u7684\u5185\u5bb9\u3002\u53e6\u5916\u5b83\u63d0\u4f9b$L(for Literals), $S(for Strings), $T(for Types), $N(for Names)\u7b49\u6807\u8bc6\u7b26\uff0c\u7528\u4e8e\u5360\u4f4d\u66ff\u6362\u3002 \u4f7f\u7528\u573a\u666f\uff1a 1\u3001\u6839\u636e\u7f16\u8bd1\u65f6\u6ce8\u89e3\u751f\u6210\u4ee3\u7801\uff0c\u5982 Butterknife 2\u3001\u6839\u636e\u534f\u8bae\u6587\u4ef6\u751f\u6210\u5bf9\u5e94\u4ee3\u7801\uff0c\u5982 Protobuffer \u66f4\u591a\u4f8b\u5b50\uff1a 1\u3001annotationSpec \u6dfb\u52a0MyAnnotation\u7684\u6ce8\u89e3\uff0c\u7136\u540e\u8bbe\u7f6e\u5c5e\u6027hello=world private static AnnotationSpec makeAnnotationSpec() { AnnotationSpec.Builder builder = AnnotationSpec.builder(ClassName.get(\"org.wcong.test.poet\", \"MyAnnotation\")); CodeBlock.Builder codeBlockBuilder = CodeBlock.builder().add(\"$S\", \"world\"); builder.addMember(\"hello\", codeBlockBuilder.build()); return builder.build(); } 2\u3001FieldSpec \u521b\u5efahello\u7684\u5b57\u6bb5\u5e76\u521d\u59cb\u5316\u4e3a\u201cworld\u201d private static FieldSpec makeFieldSpec() { FieldSpec.Builder fileSpecBuilder = FieldSpec.builder(String.class, \"hello\", Modifier.PRIVATE); fileSpecBuilder.initializer(CodeBlock.of(\"\\\"world\\\"\")); return fileSpecBuilder.build(); } 3\u3001set\u3001get\u3001toString\u65b9\u6cd5 private static MethodSpec makeSetMethod() { MethodSpec.Builder setMethodSpecBuilder = MethodSpec.methodBuilder(\"setHello\"); setMethodSpecBuilder.addModifiers(Modifier.PUBLIC); setMethodSpecBuilder.returns(TypeName.VOID); ParameterSpec.Builder parameterBuilder = ParameterSpec.builder(TypeName.get(String.class), \"hello\"); setMethodSpecBuilder.addParameter(parameterBuilder.build()); setMethodSpecBuilder.addCode(CodeBlock.builder().add(\"this.hello = hello;\\n\").build()); return setMethodSpecBuilder.build(); } private static MethodSpec makeGetMethod() { MethodSpec.Builder getMethodSpecBuilder = MethodSpec.methodBuilder(\"getHello\"); getMethodSpecBuilder.addModifiers(Modifier.PUBLIC); getMethodSpecBuilder.returns(TypeName.get(String.class)); getMethodSpecBuilder.addCode(CodeBlock.builder().add(\"return hello;\\n\").build()); return getMethodSpecBuilder.build(); } private static MethodSpec makeToStringMethod() { MethodSpec.Builder toStringBuilder = MethodSpec.methodBuilder(\"toString\"); toStringBuilder.addModifiers(Modifier.PUBLIC); toStringBuilder.returns(TypeName.get(String.class)); CodeBlock.Builder toStringCodeBuilder = CodeBlock.builder(); toStringCodeBuilder.beginControlFlow(\"if( hello != null )\"); toStringCodeBuilder.add(CodeBlock.of(\"return \\\"hello \\\"+hello;\\n\")); toStringCodeBuilder.nextControlFlow(\"else\"); toStringCodeBuilder.add(CodeBlock.of(\"return \\\"\\\";\\n\")); toStringCodeBuilder.endControlFlow(); toStringBuilder.addCode(toStringCodeBuilder.build()); return toStringBuilder.build(); } 4\u3001\u751f\u6210java\u7c7b public static void makeJavaFile() { TypeSpec.Builder typeSpecBuilder = TypeSpec.classBuilder(\"MyClass\"); typeSpecBuilder.addAnnotation(makeAnnotationSpec()); typeSpecBuilder.addField(makeFieldSpec()); typeSpecBuilder.addMethods(makeMethodSpec()); JavaFile.Builder javaFileBuilder = JavaFile.builder(\"org.wcong.test.poet\", typeSpecBuilder.build()); System.out.println(javaFileBuilder.build().toString()); } \u5176\u4ed6\u8d44\u6599\uff1a JavaPoet \u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86","title":"JavaPoet"},{"location":"java_poet/#_1","text":"JavaPoet\u662fsquare\u63a8\u51fa\u7684\u5f00\u6e90java\u4ee3\u7801\u751f\u6210\u6846\u67b6\uff0c\u63d0\u4f9bJava Api\u751f\u6210.java\u6e90\u6587\u4ef6\u3002 \u9879\u76ee\u4e3b\u9875\u53ca\u6e90\u7801\uff1a https://github.com/square/javapoet","title":"\u7b80\u4ecb\uff1a"},{"location":"java_poet/#_2","text":"compile 'com.squareup:javapoet:1.9.0' \u8fd9\u662f\u4e00\u6bb5\u666e\u901a\u7684java\u4ee3\u7801\uff1a // This codes are generated automatically. Do not modify! package com.example.helloworld; import java.lang.String; import java.lang.System; public final class HelloWorld { private static final String key = \"hello world\"; public static void main(String[] args) { System.out.println(\"Hello, JavaPoet!\"); } } \u4e0a\u65b9\u7684\u4ee3\u7801\u662f\u901a\u8fc7\u4e0b\u65b9\u4ee3\u7801\u8c03\u7528JavaPoet\u7684API\u751f\u6210\u7684\uff1a FieldSpec filedSpec = FieldSpec.builder(String.class, \"key\", Modifier.STATIC, Modifier.PRIVATE, Modifier.FINAL) .initializer(CodeBlock.of(\"\\\"hello world\\\"\")) .build(); MethodSpec main = MethodSpec.methodBuilder(\"main\") .addModifiers(Modifier.PUBLIC, Modifier.STATIC) .returns(void.class) .addParameter(String[].class, \"args\") .addStatement(\"$T.out.println($S)\", System.class, \"Hello, JavaPoet!\") .build(); TypeSpec helloWorld = TypeSpec.classBuilder(\"HelloWorld\") .addField(filedSpec) .addModifiers(Modifier.PUBLIC, Modifier.FINAL) .addMethod(main) .build(); JavaFile javaFile = JavaFile.builder(\"com.example.helloworld\", helloWorld) .addFileComment(\"This codes are generated automatically. Do not modify!\") .build(); javaFile.writeTo(System.out);","title":"\u793a\u4f8b\uff1a"},{"location":"java_poet/#_3","text":"\u89c2\u5bdfJavaPoet\u7684\u4ee3\u7801\u4e3b\u8981\u7684\u7c7b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a Spec \u7528\u6765\u63cf\u8ff0Java\u4e2d\u57fa\u672c\u7684\u5143\u7d20\uff0c\u5305\u62ec\u7c7b\u578b\uff0c\u6ce8\u89e3\uff0c\u5b57\u6bb5\uff0c\u65b9\u6cd5\u548c\u53c2\u6570\u7b49\u3002 AnnotationSpec FieldSpec MethodSpec ParameterSpec TypeSpec Name \u7528\u6765\u63cf\u8ff0\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u5305\u62ecVoid\uff0c\u539f\u59cb\u7c7b\u578b\uff08int\uff0clong\u7b49\uff09\u548cJava\u7c7b\u7b49\u3002 TypeName ArrayTypeName ClassName ParameterizedTypeName TypeVariableName WildcardTypeName CodeBlock \u7528\u6765\u63cf\u8ff0\u4ee3\u7801\u5757\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u666e\u901a\u7684\u8d4b\u503c\uff0cif\u5224\u65ad\uff0c\u5faa\u73af\u5224\u65ad\u7b49\u3002 JavaFile \u5b8c\u6574\u7684Java\u6587\u4ef6\uff0cJavaPoet\u7684\u4e3b\u8981\u7684\u5165\u53e3\u3002 CodeWriter \u8bfb\u53d6JavaFile\u5e76\u8f6c\u6362\u6210\u53ef\u9605\u8bfb\u53ef\u7f16\u8bd1\u7684Java\u6e90\u6587\u4ef6\u3002 key class description JavaFile A Java file containing a single top level class TypeSpec A generated class, interface, or enum declaration MethodSpec A generated constructor or method declaration FieldSpec A generated field declaration ParameterSpec A generated parameter declaration AnnotationSpec A generated annotation on a declaration JavaPoet\u63d0\u4f9b\u5185\u90e8Builder\u4f9b\u5916\u90e8\u66f4\u591a\u66f4\u597d\u5730\u8fdb\u884c\u4e00\u4e9b\u53c2\u6570\u7684\u8bbe\u7f6e\u4ee5\u4fbf\u6709\u5c42\u6b21\u7684\u6269\u5c55\u6027\u7684\u6784\u9020\u5bf9\u5e94\u7684\u5185\u5bb9\u3002\u53e6\u5916\u5b83\u63d0\u4f9b$L(for Literals), $S(for Strings), $T(for Types), $N(for Names)\u7b49\u6807\u8bc6\u7b26\uff0c\u7528\u4e8e\u5360\u4f4d\u66ff\u6362\u3002","title":"\u4ee3\u7801\u8bf4\u660e"},{"location":"java_poet/#_4","text":"1\u3001\u6839\u636e\u7f16\u8bd1\u65f6\u6ce8\u89e3\u751f\u6210\u4ee3\u7801\uff0c\u5982 Butterknife 2\u3001\u6839\u636e\u534f\u8bae\u6587\u4ef6\u751f\u6210\u5bf9\u5e94\u4ee3\u7801\uff0c\u5982 Protobuffer","title":"\u4f7f\u7528\u573a\u666f\uff1a"},{"location":"java_poet/#_5","text":"1\u3001annotationSpec \u6dfb\u52a0MyAnnotation\u7684\u6ce8\u89e3\uff0c\u7136\u540e\u8bbe\u7f6e\u5c5e\u6027hello=world private static AnnotationSpec makeAnnotationSpec() { AnnotationSpec.Builder builder = AnnotationSpec.builder(ClassName.get(\"org.wcong.test.poet\", \"MyAnnotation\")); CodeBlock.Builder codeBlockBuilder = CodeBlock.builder().add(\"$S\", \"world\"); builder.addMember(\"hello\", codeBlockBuilder.build()); return builder.build(); } 2\u3001FieldSpec \u521b\u5efahello\u7684\u5b57\u6bb5\u5e76\u521d\u59cb\u5316\u4e3a\u201cworld\u201d private static FieldSpec makeFieldSpec() { FieldSpec.Builder fileSpecBuilder = FieldSpec.builder(String.class, \"hello\", Modifier.PRIVATE); fileSpecBuilder.initializer(CodeBlock.of(\"\\\"world\\\"\")); return fileSpecBuilder.build(); } 3\u3001set\u3001get\u3001toString\u65b9\u6cd5 private static MethodSpec makeSetMethod() { MethodSpec.Builder setMethodSpecBuilder = MethodSpec.methodBuilder(\"setHello\"); setMethodSpecBuilder.addModifiers(Modifier.PUBLIC); setMethodSpecBuilder.returns(TypeName.VOID); ParameterSpec.Builder parameterBuilder = ParameterSpec.builder(TypeName.get(String.class), \"hello\"); setMethodSpecBuilder.addParameter(parameterBuilder.build()); setMethodSpecBuilder.addCode(CodeBlock.builder().add(\"this.hello = hello;\\n\").build()); return setMethodSpecBuilder.build(); } private static MethodSpec makeGetMethod() { MethodSpec.Builder getMethodSpecBuilder = MethodSpec.methodBuilder(\"getHello\"); getMethodSpecBuilder.addModifiers(Modifier.PUBLIC); getMethodSpecBuilder.returns(TypeName.get(String.class)); getMethodSpecBuilder.addCode(CodeBlock.builder().add(\"return hello;\\n\").build()); return getMethodSpecBuilder.build(); } private static MethodSpec makeToStringMethod() { MethodSpec.Builder toStringBuilder = MethodSpec.methodBuilder(\"toString\"); toStringBuilder.addModifiers(Modifier.PUBLIC); toStringBuilder.returns(TypeName.get(String.class)); CodeBlock.Builder toStringCodeBuilder = CodeBlock.builder(); toStringCodeBuilder.beginControlFlow(\"if( hello != null )\"); toStringCodeBuilder.add(CodeBlock.of(\"return \\\"hello \\\"+hello;\\n\")); toStringCodeBuilder.nextControlFlow(\"else\"); toStringCodeBuilder.add(CodeBlock.of(\"return \\\"\\\";\\n\")); toStringCodeBuilder.endControlFlow(); toStringBuilder.addCode(toStringCodeBuilder.build()); return toStringBuilder.build(); } 4\u3001\u751f\u6210java\u7c7b public static void makeJavaFile() { TypeSpec.Builder typeSpecBuilder = TypeSpec.classBuilder(\"MyClass\"); typeSpecBuilder.addAnnotation(makeAnnotationSpec()); typeSpecBuilder.addField(makeFieldSpec()); typeSpecBuilder.addMethods(makeMethodSpec()); JavaFile.Builder javaFileBuilder = JavaFile.builder(\"org.wcong.test.poet\", typeSpecBuilder.build()); System.out.println(javaFileBuilder.build().toString()); } \u5176\u4ed6\u8d44\u6599\uff1a JavaPoet \u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86","title":"\u66f4\u591a\u4f8b\u5b50\uff1a"},{"location":"jetPack/","text":"","title":"jetPack"},{"location":"jvm/","text":"","title":"Jvm"},{"location":"lightKV/","text":"\u6982\u5ff5\uff1a LightKV\u662f\u57fa\u4e8eJava NIO\u5b9e\u73b0\u7684\u8f7b\u91cf\u7ea7\uff0c\u9ad8\u6027\u80fd\uff0c\u9ad8\u53ef\u9760\u7684key-value\u5b58\u50a8\u7ec4\u4ef6\u3002 LightKV\u5305\u542bAsyncKV\u548cSyncKV\u4e24\u79cd\u6a21\u5f0f\uff0c\u5176\u4e2dAsyncKV\u4f7f\u7528mmap\u6587\u4ef6\u5185\u5b58\u6620\u5c04\uff0c\u5199\u5165\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4e5f\u4e0d\u5fc5\u5173\u5fc3\u6570\u636e\u4f55\u65f6\u5199\u5165\u6587\u4ef6\uff1bSyncKV\u6a21\u5f0f\u7c7b\u4f3c\u4e8e SharePreferences\uff0c\u9700\u8981\u5728\u6570\u636e\u4fee\u6539\u540e\u4f7f\u7528commit\u63d0\u4ea4(\u6bd4SharePreferences\u7684apply\u63d0\u4ea4\u65b9\u5f0f\u8981\u6162\u5f88\u591a)\u3002 LightKV\u4f7f\u7528SparseArray\u4f5c\u4e3a\u5185\u5b58\u7ea7\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6548\u7387\u4e0a\u6bd4\u4f20\u7edf\u7684HashMap\u8981\u9ad8\u3002 \u53c2\u8003\u8d44\u6599\uff1a https://juejin.im/post/5b2faa3ff265da599731d64a \u6e90\u7801\uff1a https://github.com/No89757/LightKV","title":"lightKV"},{"location":"lightKV/#_1","text":"LightKV\u662f\u57fa\u4e8eJava NIO\u5b9e\u73b0\u7684\u8f7b\u91cf\u7ea7\uff0c\u9ad8\u6027\u80fd\uff0c\u9ad8\u53ef\u9760\u7684key-value\u5b58\u50a8\u7ec4\u4ef6\u3002 LightKV\u5305\u542bAsyncKV\u548cSyncKV\u4e24\u79cd\u6a21\u5f0f\uff0c\u5176\u4e2dAsyncKV\u4f7f\u7528mmap\u6587\u4ef6\u5185\u5b58\u6620\u5c04\uff0c\u5199\u5165\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4e5f\u4e0d\u5fc5\u5173\u5fc3\u6570\u636e\u4f55\u65f6\u5199\u5165\u6587\u4ef6\uff1bSyncKV\u6a21\u5f0f\u7c7b\u4f3c\u4e8e SharePreferences\uff0c\u9700\u8981\u5728\u6570\u636e\u4fee\u6539\u540e\u4f7f\u7528commit\u63d0\u4ea4(\u6bd4SharePreferences\u7684apply\u63d0\u4ea4\u65b9\u5f0f\u8981\u6162\u5f88\u591a)\u3002 LightKV\u4f7f\u7528SparseArray\u4f5c\u4e3a\u5185\u5b58\u7ea7\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6548\u7387\u4e0a\u6bd4\u4f20\u7edf\u7684HashMap\u8981\u9ad8\u3002","title":"\u6982\u5ff5\uff1a"},{"location":"lightKV/#_2","text":"https://juejin.im/post/5b2faa3ff265da599731d64a \u6e90\u7801\uff1a https://github.com/No89757/LightKV","title":"\u53c2\u8003\u8d44\u6599\uff1a"},{"location":"litho/","text":"","title":"Litho"},{"location":"mmap/","text":"\u6982\u5ff5\uff1a mmap\u5373\u5185\u5b58\u6620\u5c04\uff0cmmap\u53ef\u4ee5\u5c06\u6587\u4ef6\u7684\u90e8\u5206\u6216\u5168\u90e8\u6620\u5c04\u5230\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u83b7\u53d6\u9875\u9762\u8bf7\u6c42\u548c\u5199\u5165\u6587\u4ef6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ea\u9700\u8981\u5904\u7406\u5185\u5b58\u6570\u636e\uff0c\u8fd9\u6837\u7684\u6587\u4ef6\u79f0\u4e4b\u4e3a\u201c\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u201d\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u901a\u8fc7mmap\uff0c\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u76f4\u63a5\u53d8\u6210\u4e86\u5bf9\u5185\u5b58\u7684\u8bfb\u5199\u64cd\u4f5c\u3002 \u4f18\u70b9\uff1a 1\u3001\u9ad8\u6548IO\uff1a\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u6bd4\u901a\u8fc7\u666e\u901a\u7684IO\u6765\u8bbf\u95ee\u6587\u4ef6\u8981\u5feb\u7684\u591a(\u4e3b\u8981\u9488\u5bf9\u5927\u6587\u4ef6)\u3002 2\u3001\u53ef\u9760\u6027\uff1a\u5185\u5b58\u4e0e\u6587\u4ef6\u4e4b\u95f4\u7684\u540c\u6b65\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u5373\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u771f\u6b63\u7684\u6587\u4ef6\u8bfb\u5199\uff0c\u5373\u4f7f\u4f60\u7684\u7a0b\u5e8f\u5728\u521a\u521a\u5199\u5165\u5185\u5b58\u540e\u5c31\u6302\u4e86\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u7136\u4f1a\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u7cfb\u7edf\u3002 3\u3001\u5171\u4eab\u5185\u5b58\uff1a\u5728\u8fdb\u7a0b\u95f4\u63d0\u4f9b\u5171\u4eab\u5185\u5b58\uff0c\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u3002 \u4f18\u70b9\u89e3\u91ca\uff1a 1\u3001\u9ad8\u6548IO \u6807\u51c6\u6587\u4ef6\u64cd\u4f5c\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u5199\u6548\u7387\u548c\u4fdd\u62a4\u78c1\u76d8\uff0c\u4f7f\u7528\u4e86\u9875\u7f13\u5b58\u673a\u5236\u3002\u8bfb\u6587\u4ef6\u65f6\u9700\u8981\u5148\u5c06\u6587\u4ef6\u9875\u4ece\u78c1\u76d8\u62f7\u8d1d\u5230\u9875\u7f13\u5b58\u4e2d\uff0c\u7531\u4e8e\u9875\u7f13\u5b58\u5904\u5728\u5185\u6838\u7a7a\u95f4\uff0c\u4e0d\u80fd\u88ab\u7528\u6237\u8fdb\u7a0b\u76f4\u63a5\u5bfb\u5740\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5c06\u9875\u7f13\u5b58\u4e2d\u6570\u636e\u9875\u518d\u6b21\u62f7\u8d1d\u5230\u5185\u5b58\u5bf9\u5e94\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u3002\u8fd9\u6837\uff0c\u901a\u8fc7\u4e86\u4e24\u6b21\u6570\u636e\u62f7\u8d1d\u8fc7\u7a0b\uff0c\u624d\u80fd\u5b8c\u6210\u8fdb\u7a0b\u5bf9\u6587\u4ef6\u5185\u5bb9\u7684\u83b7\u53d6\u4efb\u52a1\u3002\u5199\u64cd\u4f5c\u4e5f\u662f\u4e00\u6837\uff0c\u5f85\u5199\u5165\u7684buffer\u5728\u5185\u6838\u7a7a\u95f4\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\uff0c\u5fc5\u987b\u8981\u5148\u62f7\u8d1d\u81f3\u5185\u6838\u7a7a\u95f4\u5bf9\u5e94\u7684\u4e3b\u5b58\uff0c\u518d\u5199\u56de\u78c1\u76d8\u4e2d\uff0c\u4e5f\u662f\u9700\u8981\u4e24\u6b21\u6570\u636e\u62f7\u8d1d\u3002 \u800c\u4f7f\u7528mmap\u64cd\u4f5c\u6587\u4ef6\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7269\u7406\u5185\u5b58\u4e2d\u7684\u67d0\u4e00\u5757\u533a\u57df\u4e0e\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u5173\u8054\u8d77\u6765\uff0c\u5f53\u8981\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u4e00\u6bb5\u6570\u636e\u65f6\uff0c\u8f6c\u6362\u4e3a\u8bbf\u95ee\u6587\u4ef6\u7684\u67d0\u4e00\u6bb5\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u76ee\u7684\u662f\u51cf\u5c11\u4e86\u6570\u636e\u4ece\u5185\u6838\u7a7a\u95f4\u7f13\u5b58\u5230\u7528\u6237\u7a7a\u95f4\u7f13\u5b58\u7684\u6570\u636e\u590d\u5236\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u7a7a\u95f4\u7684\u6570\u636e\u662f\u5171\u4eab\u7684\u3002\u5373\u4f7f\u53d1\u73b0\u5185\u5b58\u4e2d\u5e76\u65e0\u6570\u636e\u800c\u53d1\u751f\u7f3a\u9875\u5f02\u5e38\uff0c\u901a\u8fc7\u5df2\u7ecf\u5efa\u7acb\u597d\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u4e5f\u53ea\u4f7f\u7528\u4e00\u6b21\u6570\u636e\u62f7\u8d1d\u5c31\u4ece\u78c1\u76d8\u4e2d\u5c06\u6570\u636e\u4f20\u5165\u5185\u5b58\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\u5bf9\u4e8e\u5185\u6838\u7a7a\u95f4 <----> \u7528\u6237\u7a7a\u95f4\u4e24\u8005\u4e4b\u95f4\u9700\u8981\u5927\u91cf\u6570\u636e\u4f20\u8f93\u7b49\u64cd\u4f5c\u7684\u8bdd\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u628a\u666e\u904d\u6587\u4ef6\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u793a\u610f\u56fe\uff1a \u5b9e\u8d28\u4e0a\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u7684\u6570\u636e\u6307\u5411\u7684\u662f\u540c\u4e00\u5757\u7269\u7406\u5185\u5b58\u533a\u57df\uff0c\u5982\u4e0b\u56fe\uff1a 2\u3001\u53ef\u9760\u6027 \u6839\u636e\u5b98\u65b9\u6587\u6863\u63cf\u8ff0\uff0cmmap\u7684\u6570\u636e\u5199\u56de\u4e3b\u8981\u6709\u5982\u4e0b\u65f6\u673a\uff1a \u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\u65f6 \u8fdb\u7a0bcrash\u65f6 \u4e3b\u52a8\u8c03\u7528msync\u65f6 \u7528\u6237\u4fee\u6539\u4e86\u5185\u5b58\u6620\u5c04\u7a7a\u95f4\uff0c\u76f8\u5173\u9875\u4f1a\u81ea\u52a8\u6807\u8bb0\u4e3a\u810f\u6570\u636e\uff0c\u968f\u540e\u4f1a\u5237\u65b0\u5230\u78c1\u76d8\u3002 \u4ece\u8fd9\u4e00\u70b9\u770b\u91c7\u7528mmap\u7684\u65b9\u5f0f\u76f8\u6bd4\u5e38\u89c4IO\u64cd\u4f5c\u4e5f\u6709\u66f4\u5f3a\u7684\u53ef\u9760\u6027\u3002 3\u3001\u5171\u4eab\u5185\u5b58\uff1a \u7528\u4e8e\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u865a\u62df\u5185\u5b58\u5728Java\u7684\u5806\u6808\u7a7a\u95f4\u4ee5\u5916\uff0c\u7531\u4e8e\u4e0d\u540c\u8fdb\u7a0b\u7684\u6587\u4ef6\u7f13\u51b2\u533a\u6620\u5c04\u4e3a\u540c\u4e00\u5757\u5185\u6838\u6587\u4ef6\u5b58\u50a8\u7a7a\u95f4\uff0c\u56e0\u6b64\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5b9e\u73b0\u5185\u5b58\u5171\u4eab\u3002 \u5e94\u7528\u573a\u666f\uff1a 1\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1 \u7531\u4e8emmap\u53ef\u4ee5\u5b9e\u73b0\u5171\u4eab\u5185\u5b58\uff0c\u56e0\u6b64\u4e0d\u540c\u8fdb\u7a0b\u53ef\u4ee5\u5bf9\u540c\u4e00\u5757\u5185\u5b58\u8fdb\u884c\u8bfb\u5199\uff0c\u53ef\u4ee5\u901a\u8fc7\u7279\u6b8a\u6587\u4ef6\u63d0\u4f9b\u533f\u540d\u5185\u5b58\u6620\u5c04\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u3002 2\u3001\u6587\u4ef6\u7684\u9ad8\u6548\u8bfb\u5199 \u6570\u636e\u7684\u6301\u4e45\u5316\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u5e93\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u6587\u4ef6\u3002\u4f7f\u7528\u6570\u636e\u5e93\u53ef\u4ee5\u4eab\u53d7\u5230\u7ed3\u6784\u5316\u5b58\u50a8\u3001\u4e8b\u7269\u3001\u6570\u636e\u8fc1\u79fb\u3001\u56de\u6eda\u7b49\u670d\u52a1 \uff0c\u5982\u679c\u5bf9\u8fd9\u4e9b\u6ca1\u8981\u6c42\uff0c\u90a3\u4e48\u5bf9\u90a3\u4e9b\u4e0d\u592a\u91cd\u8981\u7684\u3001\u4f46\u662f\u8bbf\u95ee\u91cf\u53c8\u5f88\u5927\u3001\u8bfb\u5199\u64cd\u4f5c\u591a\u4e14\u9700\u8981\u6301\u4e45\u5316\u529f\u80fd\u7684\u6570\u636e\u6700\u9002\u5408\u4f7f\u7528mmap\u529f\u80fd\u7684\uff0c\u6700\u5e38\u89c1\u7684\u6bd4\u5982\u65e5\u5fd7\u3002 \u4ee3\u7801 1\u3001C\u5b9e\u73b0 mmap\u7528\u4e8e\u5185\u5b58\u6620\u5c04\uff0c\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a #include <sys/mman.h> void *mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset); \u5177\u4f53\u53c2\u6570\u542b\u4e49 start \uff1a \u6620\u5c04\u533a\u7684\u5f00\u59cb\u5730\u5740\uff0c\u901a\u5e38\u8bbe\u4e3a NULL\uff0c\u4ee3\u8868\u8ba9\u7cfb\u7edf\u81ea\u52a8\u9009\u5b9a\u5730\u5740\uff0c\u6620\u5c04\u6210\u529f\u540e\u8fd4\u56de\u8be5\u5730\u5740\u3002 length \uff1a \u6620\u5c04\u533a\u7684\u957f\u5ea6\u3002 port \uff1a \u6620\u5c04\u533a\u57df\u7684\u4fdd\u62a4\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u7684\u7ec4\u5408\uff1a PROT_EXEC \uff1a\u9875\u5185\u5bb9\u53ef\u4ee5\u88ab\u6267\u884c PROT_READ \uff1a\u9875\u5185\u5bb9\u53ef\u4ee5\u88ab\u8bfb\u53d6 PROT_WRITE \uff1a\u9875\u53ef\u4ee5\u88ab\u5199\u5165 PROT_NONE \uff1a\u9875\u4e0d\u53ef\u8bbf\u95ee flags \uff1a \u6307\u5b9a\u6620\u5c04\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u6620\u5c04\u9009\u9879\u548c\u6620\u5c04\u9875\u662f\u5426\u53ef\u4ee5\u5171\u4eab\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u4ee5\u4e0b\u4f4d\u7684\u7ec4\u5408\u4f53\uff0c\u4f7f\u7528\u65f6\u5fc5\u987b\u8981\u6307\u5b9aMAP_SHARED\u6216MAP_PRIVATE\u3002 MAP_FIXED \u5982\u679c\u53c2\u6570start\u6240\u6307\u7684\u5730\u5740\u65e0\u6cd5\u6210\u529f\u5efa\u7acb\u6620\u5c04\u65f6\uff0c\u5219\u653e\u5f03\u6620\u5c04\uff0c\u4e0d\u5bf9\u5730\u5740\u505a\u4fee\u6b63\u3002\u901a\u5e38\u4e0d\u9f13\u52b1\u7528\u6b64\u65d7\u6807\u3002 MAP_SHARED \u5bf9\u6620\u5c04\u533a\u57df\u7684\u5199\u5165\u6570\u636e\u4f1a\u590d\u5236\u56de\u6587\u4ef6\u5185\uff0c\u800c\u4e14\u5141\u8bb8\u5176\u4ed6\u6620\u5c04\u8be5\u6587\u4ef6\u7684\u8fdb\u7a0b\u5171\u4eab\u3002 MAP_PRIVATE \u5bf9\u6620\u5c04\u533a\u57df\u7684\u5199\u5165\u64cd\u4f5c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6620\u5c04\u6587\u4ef6\u7684\u590d\u5236\uff0c\u5373\u79c1\u6709\u7684\u201c\u5199\u5165\u65f6\u590d\u5236\u201d\uff08copy on write\uff09\u5bf9\u6b64\u533a\u57df\u4f5c\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u5199\u56de\u539f\u6765\u7684\u6587\u4ef6\u5185\u5bb9\u3002 MAP_ANONYMOUS \u5efa\u7acb\u533f\u540d\u6620\u5c04\u3002\u6b64\u65f6\u4f1a\u5ffd\u7565\u53c2\u6570fd\uff0c\u4e0d\u6d89\u53ca\u6587\u4ef6\uff0c\u800c\u4e14\u6620\u5c04\u533a\u57df\u65e0\u6cd5\u548c\u5176\u4ed6\u8fdb\u7a0b\u5171\u4eab\u3002 MAP_DENYWRITE \u53ea\u5141\u8bb8\u5bf9\u6620\u5c04\u533a\u57df\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u5176\u4ed6\u5bf9\u6587\u4ef6\u76f4\u63a5\u5199\u5165\u7684\u64cd\u4f5c\u5c06\u4f1a\u88ab\u62d2\u7edd\u3002 MAP_LOCKED \u5c06\u6620\u5c04\u533a\u57df\u9501\u5b9a\u4f4f\uff0c\u8fd9\u8868\u793a\u8be5\u533a\u57df\u4e0d\u4f1a\u88ab\u7f6e\u6362\uff08swap\uff09\u3002 fd \uff1a \u8981\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5982\u679c\u4f7f\u7528\u533f\u540d\u5185\u5b58\u6620\u5c04\u65f6\uff0c\u5373flags\u4e2d\u8bbe\u7f6e\u4e86MAP_ANONYMOUS\uff0c\u4e3a\u4e86\u517c\u5bb9\u95ee\u9898\uff0cfd\u5e94\u8bbe\u4e3a-1\u3002\u6709\u4e9b\u7cfb\u7edf\u4e0d\u652f\u6301\u533f\u540d\u5185\u5b58\u6620\u5c04\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528fopen\u6253\u5f00/dev/zero\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u6620\u5c04\uff0c\u53ef\u4ee5\u540c\u6837\u8fbe\u5230\u533f\u540d\u5185\u5b58\u6620\u5c04\u7684\u6548\u679c\u3002 offset \uff1a\u6587\u4ef6\u6620\u5c04\u7684\u504f\u79fb\u91cf\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a0\uff0c\u4ee3\u8868\u4ece\u6587\u4ef6\u6700\u524d\u65b9\u5f00\u59cb\u5bf9\u5e94\uff0coffset\u5fc5\u987b\u662fPAGE_SIZE\u7684\u6574\u6570\u500d\u3002 \u8fd4\u56de\u503c\uff1a\u82e5\u6620\u5c04\u6210\u529f\u5219\u8fd4\u56de\u6620\u5c04\u533a\u7684\u5185\u5b58\u8d77\u59cb\u5730\u5740\uff0c\u5426\u5219\u8fd4\u56deMAP_FAILED(\uff0d1)\uff0c\u9519\u8bef\u539f\u56e0\u5b58\u4e8eerrno \u4e2d\u3002 \u7528\u6237\u5c42\u7684\u8c03\u7528\u5f88\u7b80\u5355\uff0c\u5176\u5177\u4f53\u529f\u80fd\u5c31\u662f\u76f4\u63a5\u5c06\u7269\u7406\u5185\u5b58\u76f4\u63a5\u6620\u5c04\u5230\u7528\u6237\u865a\u62df\u5185\u5b58\uff0c\u4f7f\u7528\u6237\u7a7a\u95f4\u53ef\u4ee5\u76f4\u63a5\u5bf9\u7269\u7406\u7a7a\u95f4\u64cd\u4f5c\u3002 munmap \u7528\u4e8e\u89e3\u9664\u6620\u5c04\uff0c\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a int munmap( void * addr, size_t len ) addr \u662f\u8c03\u7528mmap()\u65f6\u8fd4\u56de\u7684\u5730\u5740 len \u662f\u6620\u5c04\u533a\u7684\u5927\u5c0f \u6210\u529f\u6267\u884c\u65f6\uff0cmunmap()\u8fd4\u56de0\u3002\u5931\u8d25\u65f6\uff0cmunmap\u8fd4\u56de-1\uff0cerror\u8fd4\u56de\u6807\u5fd7\u548cmmap\u4e00\u81f4\uff1b msync \u7528\u4e8e\u5f3a\u5236\u540c\u6b65\uff0c\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a int msync( void *addr, size_t len, int flags ) \u4e00\u822c\u8bf4\u6765\uff0c\u8fdb\u7a0b\u5728\u6620\u5c04\u7a7a\u95f4\u7684\u5bf9\u5171\u4eab\u5185\u5bb9\u7684\u6539\u53d8\u5e76\u4e0d\u76f4\u63a5\u5199\u56de\u5230\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u5f80\u5f80\u5728\u8c03\u7528munmap()\u540e\u624d\u6267\u884c\u8be5\u64cd\u4f5c\u3002\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528msync()\u5b9e\u73b0\u78c1\u76d8\u4e0a\u6587\u4ef6\u5185\u5bb9\u4e0e\u5171\u4eab\u5185\u5b58\u533a\u7684\u5185\u5bb9\u4e00\u81f4\u3002 addr \uff1a\u6587\u4ef6\u6620\u5c04\u5230\u8fdb\u7a0b\u7a7a\u95f4\u7684\u5730\u5740\uff1b len \uff1a\u6620\u5c04\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b flags \uff1a\u5237\u65b0\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u53d6\u503cMS_ASYNC/ MS_SYNC/ MS_INVALIDATE MS_ASYNC\uff08\u5f02\u6b65\uff09\uff1a\u8c03\u7528\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u7b49\u5230\u66f4\u65b0\u7684\u5b8c\u6210\uff1b MS_SYNC\uff08\u540c\u6b65\uff09\uff1a\u8c03\u7528\u4f1a\u7b49\u5230\u66f4\u65b0\u5b8c\u6210\u4e4b\u540e\u8fd4\u56de\uff1b MS_INVALIDATE\uff08\u901a\u77e5\u4f7f\u7528\u8be5\u5171\u4eab\u533a\u57df\u7684\u8fdb\u7a0b\uff0c\u6570\u636e\u5df2\u7ecf\u6539\u53d8\uff09\uff1a\u5728\u5171\u4eab\u5185\u5bb9\u66f4\u6539\u4e4b\u540e\uff0c\u4f7f\u5f97\u6587\u4ef6\u7684\u5176\u4ed6\u6620\u5c04\u5931\u6548\uff0c\u4ece\u800c\u4f7f\u5f97\u5171\u4eab\u8be5\u6587\u4ef6\u7684\u5176\u4ed6\u8fdb\u7a0b\u53bb\u91cd\u65b0\u83b7\u53d6\u6700\u65b0\u503c\uff1b \u8fd4\u56de\u503c \u6210\u529f\u5219\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1 \u4ee3\u7801\u4e3e\u4f8b: #include <iostream> #include <sys/mman.h> #include <unistd.h> #include <stdlib.h> #include <stdio.h> int main(int argc, const char * argv[]) { //\u7533\u8bf7\u5185\u5b58 int* arr = static_cast<int*>( mmap(NULL, //\u5206\u914d\u7684\u9996\u5730\u5740 getpagesize(), //\u5206\u914d\u5185\u5b58\u5927\u5c0f(\u5fc5\u987b\u662f\u9875\u7684\u6574\u6570\u500d, 32\u4f4d1\u9875=4k) PROT_READ | PROT_WRITE, //\u6620\u5c04\u533a\u57df\u4fdd\u62a4\u6743\u9650\uff1a\u8bfb|\u5199 MAP_ANONYMOUS | MAP_SHARED, //\u533f\u540d\u6620\u5c04(\u4e0d\u6d89\u53ca\u6587\u4ef6) -1, //\u8981\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 0 //\u6587\u4ef6\u6620\u5c04\u7684\u504f\u79fb\u91cf\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a0\uff0c\u5fc5\u987b\u662f\u9875\u7684\u6574\u6570\u500d )); printf(\"\u7533\u8bf7\u5185\u5b58\u5927\u5c0f=%dk\\n\", sizeof(arr)); //\u5199\u5165\u5185\u5b58 *arr = 10; *(arr + 1) = 20; *(arr + 2) = 30; printf(\"arr[2]=%d\\n\", arr[2]); //\u91ca\u653e\u6307\u9488arr\u6307\u5411\u7684\u5185\u5b58\u533a\u57df\uff0c\u5e76\u5236\u5b9a\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f munmap(arr, getpagesize()); return 0; } 2\u3001Java\u5b9e\u73b0 MappedByteBuffer\u662fjava nio\u5f15\u5165\u7684\u6587\u4ef6\u5185\u5b58\u6620\u5c04\u65b9\u6848\u3002 FileChannel\u63d0\u4f9b\u4e86map\u65b9\u6cd5\u6765\u628a\u6587\u4ef6\u6620\u5c04\u4e3a\u5185\u5b58\u6620\u50cf\u6587\u4ef6\uff0c\u53ef\u4ee5\u628a\u6587\u4ef6\u7684\u4eceposition\u5f00\u59cb\u7684size\u5927\u5c0f\u7684\u533a\u57df\u6620\u5c04\u4e3a\u5185\u5b58\u6620\u50cf\u6587\u4ef6\uff0cmode\u6307\u51fa\u4e86\u53ef\u8bbf\u95ee\u8be5\u5185\u5b58\u6620\u50cf\u6587\u4ef6\u7684\u65b9\u5f0f\u3002 MappedByteBuffer map(int mode, long position, long size); mode\u6709\u4e09\u79cd\u53d6\u503c\uff1a READ_ONLY\uff08\u53ea\u8bfb\uff09\uff1a \u8bd5\u56fe\u4fee\u6539\u5f97\u5230\u7684\u7f13\u51b2\u533a\u5c06\u5bfc\u81f4\u629b\u51fa\u5f02\u5e38ReadOnlyBufferException.(MapMode.READ_ONLY)\u3002 READ_WRITE\uff08\u8bfb/\u5199\uff09\uff1a \u5bf9\u5f97\u5230\u7684\u7f13\u51b2\u533a\u7684\u66f4\u6539\u6700\u7ec8\u5c06\u4f20\u64ad\u5230\u6587\u4ef6\uff1b\u8be5\u66f4\u6539\u5bf9\u6620\u5c04\u5230\u540c\u4e00\u6587\u4ef6\u7684\u5176\u4ed6\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u662f\u53ef\u89c1\u7684\u3002 PRIVATE\uff08\u4e13\u7528\uff09\uff1a \u5bf9\u5f97\u5230\u7684\u7f13\u51b2\u533a\u7684\u66f4\u6539\u4e0d\u4f1a\u4f20\u64ad\u5230\u6587\u4ef6\uff0c\u5e76\u4e14\u8be5\u66f4\u6539\u5bf9\u6620\u5c04\u5230\u540c\u4e00\u6587\u4ef6\u7684\u5176\u4ed6\u7a0b\u5e8f\u4e5f\u4e0d\u662f\u53ef\u89c1\u7684\uff1b\u76f8\u53cd\uff0c\u4f1a\u521b\u5efa\u7f13\u51b2\u533a\u5df2\u4fee\u6539\u90e8\u5206\u7684\u4e13\u7528\u526f\u672c\u3002 \u4ee3\u7801\u4e3e\u4f8b\uff1a public static void main(String[] args) throws Exception { RandomAccessFile raf = new RandomAccessFile(new File(\"/Users/qylk/Downloads/test2.apk\"), \"rw\"); FileChannel fc = raf.getChannel(); MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_WRITE, 0, fc.size());//\u5185\u5b58\u6620\u5c04 byte[] buf = new byte[(int) fc.size()]; mbb.get(buf);//\u5168\u90e8\u8bfb\u53d6 //\u6539\u5199\u524d128\u4e2a\u5b57\u8282 for (int i = 0; i < 128; i++) { buf[i] = (byte) i; } mbb.position(0);//\u6587\u4ef6\u6307\u9488\u56de\u5230\u539f\u70b9 mbb.put(buf);//\u5199\u56de\u6587\u4ef6 fc.close(); }","title":"\u5185\u5b58\u6620\u5c04"},{"location":"mmap/#_1","text":"mmap\u5373\u5185\u5b58\u6620\u5c04\uff0cmmap\u53ef\u4ee5\u5c06\u6587\u4ef6\u7684\u90e8\u5206\u6216\u5168\u90e8\u6620\u5c04\u5230\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u83b7\u53d6\u9875\u9762\u8bf7\u6c42\u548c\u5199\u5165\u6587\u4ef6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ea\u9700\u8981\u5904\u7406\u5185\u5b58\u6570\u636e\uff0c\u8fd9\u6837\u7684\u6587\u4ef6\u79f0\u4e4b\u4e3a\u201c\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u201d\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u901a\u8fc7mmap\uff0c\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u76f4\u63a5\u53d8\u6210\u4e86\u5bf9\u5185\u5b58\u7684\u8bfb\u5199\u64cd\u4f5c\u3002","title":"\u6982\u5ff5\uff1a"},{"location":"mmap/#_2","text":"1\u3001\u9ad8\u6548IO\uff1a\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u6bd4\u901a\u8fc7\u666e\u901a\u7684IO\u6765\u8bbf\u95ee\u6587\u4ef6\u8981\u5feb\u7684\u591a(\u4e3b\u8981\u9488\u5bf9\u5927\u6587\u4ef6)\u3002 2\u3001\u53ef\u9760\u6027\uff1a\u5185\u5b58\u4e0e\u6587\u4ef6\u4e4b\u95f4\u7684\u540c\u6b65\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u5373\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u771f\u6b63\u7684\u6587\u4ef6\u8bfb\u5199\uff0c\u5373\u4f7f\u4f60\u7684\u7a0b\u5e8f\u5728\u521a\u521a\u5199\u5165\u5185\u5b58\u540e\u5c31\u6302\u4e86\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u7136\u4f1a\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u7cfb\u7edf\u3002 3\u3001\u5171\u4eab\u5185\u5b58\uff1a\u5728\u8fdb\u7a0b\u95f4\u63d0\u4f9b\u5171\u4eab\u5185\u5b58\uff0c\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"mmap/#_3","text":"1\u3001\u9ad8\u6548IO \u6807\u51c6\u6587\u4ef6\u64cd\u4f5c\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u5199\u6548\u7387\u548c\u4fdd\u62a4\u78c1\u76d8\uff0c\u4f7f\u7528\u4e86\u9875\u7f13\u5b58\u673a\u5236\u3002\u8bfb\u6587\u4ef6\u65f6\u9700\u8981\u5148\u5c06\u6587\u4ef6\u9875\u4ece\u78c1\u76d8\u62f7\u8d1d\u5230\u9875\u7f13\u5b58\u4e2d\uff0c\u7531\u4e8e\u9875\u7f13\u5b58\u5904\u5728\u5185\u6838\u7a7a\u95f4\uff0c\u4e0d\u80fd\u88ab\u7528\u6237\u8fdb\u7a0b\u76f4\u63a5\u5bfb\u5740\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5c06\u9875\u7f13\u5b58\u4e2d\u6570\u636e\u9875\u518d\u6b21\u62f7\u8d1d\u5230\u5185\u5b58\u5bf9\u5e94\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u3002\u8fd9\u6837\uff0c\u901a\u8fc7\u4e86\u4e24\u6b21\u6570\u636e\u62f7\u8d1d\u8fc7\u7a0b\uff0c\u624d\u80fd\u5b8c\u6210\u8fdb\u7a0b\u5bf9\u6587\u4ef6\u5185\u5bb9\u7684\u83b7\u53d6\u4efb\u52a1\u3002\u5199\u64cd\u4f5c\u4e5f\u662f\u4e00\u6837\uff0c\u5f85\u5199\u5165\u7684buffer\u5728\u5185\u6838\u7a7a\u95f4\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\uff0c\u5fc5\u987b\u8981\u5148\u62f7\u8d1d\u81f3\u5185\u6838\u7a7a\u95f4\u5bf9\u5e94\u7684\u4e3b\u5b58\uff0c\u518d\u5199\u56de\u78c1\u76d8\u4e2d\uff0c\u4e5f\u662f\u9700\u8981\u4e24\u6b21\u6570\u636e\u62f7\u8d1d\u3002 \u800c\u4f7f\u7528mmap\u64cd\u4f5c\u6587\u4ef6\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7269\u7406\u5185\u5b58\u4e2d\u7684\u67d0\u4e00\u5757\u533a\u57df\u4e0e\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u5173\u8054\u8d77\u6765\uff0c\u5f53\u8981\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u4e00\u6bb5\u6570\u636e\u65f6\uff0c\u8f6c\u6362\u4e3a\u8bbf\u95ee\u6587\u4ef6\u7684\u67d0\u4e00\u6bb5\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u76ee\u7684\u662f\u51cf\u5c11\u4e86\u6570\u636e\u4ece\u5185\u6838\u7a7a\u95f4\u7f13\u5b58\u5230\u7528\u6237\u7a7a\u95f4\u7f13\u5b58\u7684\u6570\u636e\u590d\u5236\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u7a7a\u95f4\u7684\u6570\u636e\u662f\u5171\u4eab\u7684\u3002\u5373\u4f7f\u53d1\u73b0\u5185\u5b58\u4e2d\u5e76\u65e0\u6570\u636e\u800c\u53d1\u751f\u7f3a\u9875\u5f02\u5e38\uff0c\u901a\u8fc7\u5df2\u7ecf\u5efa\u7acb\u597d\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u4e5f\u53ea\u4f7f\u7528\u4e00\u6b21\u6570\u636e\u62f7\u8d1d\u5c31\u4ece\u78c1\u76d8\u4e2d\u5c06\u6570\u636e\u4f20\u5165\u5185\u5b58\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\u5bf9\u4e8e\u5185\u6838\u7a7a\u95f4 <----> \u7528\u6237\u7a7a\u95f4\u4e24\u8005\u4e4b\u95f4\u9700\u8981\u5927\u91cf\u6570\u636e\u4f20\u8f93\u7b49\u64cd\u4f5c\u7684\u8bdd\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u628a\u666e\u904d\u6587\u4ef6\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u793a\u610f\u56fe\uff1a \u5b9e\u8d28\u4e0a\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u7684\u6570\u636e\u6307\u5411\u7684\u662f\u540c\u4e00\u5757\u7269\u7406\u5185\u5b58\u533a\u57df\uff0c\u5982\u4e0b\u56fe\uff1a 2\u3001\u53ef\u9760\u6027 \u6839\u636e\u5b98\u65b9\u6587\u6863\u63cf\u8ff0\uff0cmmap\u7684\u6570\u636e\u5199\u56de\u4e3b\u8981\u6709\u5982\u4e0b\u65f6\u673a\uff1a \u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\u65f6 \u8fdb\u7a0bcrash\u65f6 \u4e3b\u52a8\u8c03\u7528msync\u65f6 \u7528\u6237\u4fee\u6539\u4e86\u5185\u5b58\u6620\u5c04\u7a7a\u95f4\uff0c\u76f8\u5173\u9875\u4f1a\u81ea\u52a8\u6807\u8bb0\u4e3a\u810f\u6570\u636e\uff0c\u968f\u540e\u4f1a\u5237\u65b0\u5230\u78c1\u76d8\u3002 \u4ece\u8fd9\u4e00\u70b9\u770b\u91c7\u7528mmap\u7684\u65b9\u5f0f\u76f8\u6bd4\u5e38\u89c4IO\u64cd\u4f5c\u4e5f\u6709\u66f4\u5f3a\u7684\u53ef\u9760\u6027\u3002 3\u3001\u5171\u4eab\u5185\u5b58\uff1a \u7528\u4e8e\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u865a\u62df\u5185\u5b58\u5728Java\u7684\u5806\u6808\u7a7a\u95f4\u4ee5\u5916\uff0c\u7531\u4e8e\u4e0d\u540c\u8fdb\u7a0b\u7684\u6587\u4ef6\u7f13\u51b2\u533a\u6620\u5c04\u4e3a\u540c\u4e00\u5757\u5185\u6838\u6587\u4ef6\u5b58\u50a8\u7a7a\u95f4\uff0c\u56e0\u6b64\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5b9e\u73b0\u5185\u5b58\u5171\u4eab\u3002","title":"\u4f18\u70b9\u89e3\u91ca\uff1a"},{"location":"mmap/#_4","text":"1\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1 \u7531\u4e8emmap\u53ef\u4ee5\u5b9e\u73b0\u5171\u4eab\u5185\u5b58\uff0c\u56e0\u6b64\u4e0d\u540c\u8fdb\u7a0b\u53ef\u4ee5\u5bf9\u540c\u4e00\u5757\u5185\u5b58\u8fdb\u884c\u8bfb\u5199\uff0c\u53ef\u4ee5\u901a\u8fc7\u7279\u6b8a\u6587\u4ef6\u63d0\u4f9b\u533f\u540d\u5185\u5b58\u6620\u5c04\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u3002 2\u3001\u6587\u4ef6\u7684\u9ad8\u6548\u8bfb\u5199 \u6570\u636e\u7684\u6301\u4e45\u5316\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u5e93\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u6587\u4ef6\u3002\u4f7f\u7528\u6570\u636e\u5e93\u53ef\u4ee5\u4eab\u53d7\u5230\u7ed3\u6784\u5316\u5b58\u50a8\u3001\u4e8b\u7269\u3001\u6570\u636e\u8fc1\u79fb\u3001\u56de\u6eda\u7b49\u670d\u52a1 \uff0c\u5982\u679c\u5bf9\u8fd9\u4e9b\u6ca1\u8981\u6c42\uff0c\u90a3\u4e48\u5bf9\u90a3\u4e9b\u4e0d\u592a\u91cd\u8981\u7684\u3001\u4f46\u662f\u8bbf\u95ee\u91cf\u53c8\u5f88\u5927\u3001\u8bfb\u5199\u64cd\u4f5c\u591a\u4e14\u9700\u8981\u6301\u4e45\u5316\u529f\u80fd\u7684\u6570\u636e\u6700\u9002\u5408\u4f7f\u7528mmap\u529f\u80fd\u7684\uff0c\u6700\u5e38\u89c1\u7684\u6bd4\u5982\u65e5\u5fd7\u3002","title":"\u5e94\u7528\u573a\u666f\uff1a"},{"location":"mmap/#_5","text":"","title":"\u4ee3\u7801"},{"location":"mmap/#1c","text":"mmap\u7528\u4e8e\u5185\u5b58\u6620\u5c04\uff0c\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a #include <sys/mman.h> void *mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset); \u5177\u4f53\u53c2\u6570\u542b\u4e49 start \uff1a \u6620\u5c04\u533a\u7684\u5f00\u59cb\u5730\u5740\uff0c\u901a\u5e38\u8bbe\u4e3a NULL\uff0c\u4ee3\u8868\u8ba9\u7cfb\u7edf\u81ea\u52a8\u9009\u5b9a\u5730\u5740\uff0c\u6620\u5c04\u6210\u529f\u540e\u8fd4\u56de\u8be5\u5730\u5740\u3002 length \uff1a \u6620\u5c04\u533a\u7684\u957f\u5ea6\u3002 port \uff1a \u6620\u5c04\u533a\u57df\u7684\u4fdd\u62a4\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u7684\u7ec4\u5408\uff1a PROT_EXEC \uff1a\u9875\u5185\u5bb9\u53ef\u4ee5\u88ab\u6267\u884c PROT_READ \uff1a\u9875\u5185\u5bb9\u53ef\u4ee5\u88ab\u8bfb\u53d6 PROT_WRITE \uff1a\u9875\u53ef\u4ee5\u88ab\u5199\u5165 PROT_NONE \uff1a\u9875\u4e0d\u53ef\u8bbf\u95ee flags \uff1a \u6307\u5b9a\u6620\u5c04\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u6620\u5c04\u9009\u9879\u548c\u6620\u5c04\u9875\u662f\u5426\u53ef\u4ee5\u5171\u4eab\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u4ee5\u4e0b\u4f4d\u7684\u7ec4\u5408\u4f53\uff0c\u4f7f\u7528\u65f6\u5fc5\u987b\u8981\u6307\u5b9aMAP_SHARED\u6216MAP_PRIVATE\u3002 MAP_FIXED \u5982\u679c\u53c2\u6570start\u6240\u6307\u7684\u5730\u5740\u65e0\u6cd5\u6210\u529f\u5efa\u7acb\u6620\u5c04\u65f6\uff0c\u5219\u653e\u5f03\u6620\u5c04\uff0c\u4e0d\u5bf9\u5730\u5740\u505a\u4fee\u6b63\u3002\u901a\u5e38\u4e0d\u9f13\u52b1\u7528\u6b64\u65d7\u6807\u3002 MAP_SHARED \u5bf9\u6620\u5c04\u533a\u57df\u7684\u5199\u5165\u6570\u636e\u4f1a\u590d\u5236\u56de\u6587\u4ef6\u5185\uff0c\u800c\u4e14\u5141\u8bb8\u5176\u4ed6\u6620\u5c04\u8be5\u6587\u4ef6\u7684\u8fdb\u7a0b\u5171\u4eab\u3002 MAP_PRIVATE \u5bf9\u6620\u5c04\u533a\u57df\u7684\u5199\u5165\u64cd\u4f5c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6620\u5c04\u6587\u4ef6\u7684\u590d\u5236\uff0c\u5373\u79c1\u6709\u7684\u201c\u5199\u5165\u65f6\u590d\u5236\u201d\uff08copy on write\uff09\u5bf9\u6b64\u533a\u57df\u4f5c\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u5199\u56de\u539f\u6765\u7684\u6587\u4ef6\u5185\u5bb9\u3002 MAP_ANONYMOUS \u5efa\u7acb\u533f\u540d\u6620\u5c04\u3002\u6b64\u65f6\u4f1a\u5ffd\u7565\u53c2\u6570fd\uff0c\u4e0d\u6d89\u53ca\u6587\u4ef6\uff0c\u800c\u4e14\u6620\u5c04\u533a\u57df\u65e0\u6cd5\u548c\u5176\u4ed6\u8fdb\u7a0b\u5171\u4eab\u3002 MAP_DENYWRITE \u53ea\u5141\u8bb8\u5bf9\u6620\u5c04\u533a\u57df\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u5176\u4ed6\u5bf9\u6587\u4ef6\u76f4\u63a5\u5199\u5165\u7684\u64cd\u4f5c\u5c06\u4f1a\u88ab\u62d2\u7edd\u3002 MAP_LOCKED \u5c06\u6620\u5c04\u533a\u57df\u9501\u5b9a\u4f4f\uff0c\u8fd9\u8868\u793a\u8be5\u533a\u57df\u4e0d\u4f1a\u88ab\u7f6e\u6362\uff08swap\uff09\u3002 fd \uff1a \u8981\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5982\u679c\u4f7f\u7528\u533f\u540d\u5185\u5b58\u6620\u5c04\u65f6\uff0c\u5373flags\u4e2d\u8bbe\u7f6e\u4e86MAP_ANONYMOUS\uff0c\u4e3a\u4e86\u517c\u5bb9\u95ee\u9898\uff0cfd\u5e94\u8bbe\u4e3a-1\u3002\u6709\u4e9b\u7cfb\u7edf\u4e0d\u652f\u6301\u533f\u540d\u5185\u5b58\u6620\u5c04\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528fopen\u6253\u5f00/dev/zero\u6587\u4ef6\uff0c\u7136\u540e\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u6620\u5c04\uff0c\u53ef\u4ee5\u540c\u6837\u8fbe\u5230\u533f\u540d\u5185\u5b58\u6620\u5c04\u7684\u6548\u679c\u3002 offset \uff1a\u6587\u4ef6\u6620\u5c04\u7684\u504f\u79fb\u91cf\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a0\uff0c\u4ee3\u8868\u4ece\u6587\u4ef6\u6700\u524d\u65b9\u5f00\u59cb\u5bf9\u5e94\uff0coffset\u5fc5\u987b\u662fPAGE_SIZE\u7684\u6574\u6570\u500d\u3002 \u8fd4\u56de\u503c\uff1a\u82e5\u6620\u5c04\u6210\u529f\u5219\u8fd4\u56de\u6620\u5c04\u533a\u7684\u5185\u5b58\u8d77\u59cb\u5730\u5740\uff0c\u5426\u5219\u8fd4\u56deMAP_FAILED(\uff0d1)\uff0c\u9519\u8bef\u539f\u56e0\u5b58\u4e8eerrno \u4e2d\u3002 \u7528\u6237\u5c42\u7684\u8c03\u7528\u5f88\u7b80\u5355\uff0c\u5176\u5177\u4f53\u529f\u80fd\u5c31\u662f\u76f4\u63a5\u5c06\u7269\u7406\u5185\u5b58\u76f4\u63a5\u6620\u5c04\u5230\u7528\u6237\u865a\u62df\u5185\u5b58\uff0c\u4f7f\u7528\u6237\u7a7a\u95f4\u53ef\u4ee5\u76f4\u63a5\u5bf9\u7269\u7406\u7a7a\u95f4\u64cd\u4f5c\u3002 munmap \u7528\u4e8e\u89e3\u9664\u6620\u5c04\uff0c\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a int munmap( void * addr, size_t len ) addr \u662f\u8c03\u7528mmap()\u65f6\u8fd4\u56de\u7684\u5730\u5740 len \u662f\u6620\u5c04\u533a\u7684\u5927\u5c0f \u6210\u529f\u6267\u884c\u65f6\uff0cmunmap()\u8fd4\u56de0\u3002\u5931\u8d25\u65f6\uff0cmunmap\u8fd4\u56de-1\uff0cerror\u8fd4\u56de\u6807\u5fd7\u548cmmap\u4e00\u81f4\uff1b msync \u7528\u4e8e\u5f3a\u5236\u540c\u6b65\uff0c\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\uff1a int msync( void *addr, size_t len, int flags ) \u4e00\u822c\u8bf4\u6765\uff0c\u8fdb\u7a0b\u5728\u6620\u5c04\u7a7a\u95f4\u7684\u5bf9\u5171\u4eab\u5185\u5bb9\u7684\u6539\u53d8\u5e76\u4e0d\u76f4\u63a5\u5199\u56de\u5230\u78c1\u76d8\u6587\u4ef6\u4e2d\uff0c\u5f80\u5f80\u5728\u8c03\u7528munmap()\u540e\u624d\u6267\u884c\u8be5\u64cd\u4f5c\u3002\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528msync()\u5b9e\u73b0\u78c1\u76d8\u4e0a\u6587\u4ef6\u5185\u5bb9\u4e0e\u5171\u4eab\u5185\u5b58\u533a\u7684\u5185\u5bb9\u4e00\u81f4\u3002 addr \uff1a\u6587\u4ef6\u6620\u5c04\u5230\u8fdb\u7a0b\u7a7a\u95f4\u7684\u5730\u5740\uff1b len \uff1a\u6620\u5c04\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b flags \uff1a\u5237\u65b0\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u53d6\u503cMS_ASYNC/ MS_SYNC/ MS_INVALIDATE MS_ASYNC\uff08\u5f02\u6b65\uff09\uff1a\u8c03\u7528\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u7b49\u5230\u66f4\u65b0\u7684\u5b8c\u6210\uff1b MS_SYNC\uff08\u540c\u6b65\uff09\uff1a\u8c03\u7528\u4f1a\u7b49\u5230\u66f4\u65b0\u5b8c\u6210\u4e4b\u540e\u8fd4\u56de\uff1b MS_INVALIDATE\uff08\u901a\u77e5\u4f7f\u7528\u8be5\u5171\u4eab\u533a\u57df\u7684\u8fdb\u7a0b\uff0c\u6570\u636e\u5df2\u7ecf\u6539\u53d8\uff09\uff1a\u5728\u5171\u4eab\u5185\u5bb9\u66f4\u6539\u4e4b\u540e\uff0c\u4f7f\u5f97\u6587\u4ef6\u7684\u5176\u4ed6\u6620\u5c04\u5931\u6548\uff0c\u4ece\u800c\u4f7f\u5f97\u5171\u4eab\u8be5\u6587\u4ef6\u7684\u5176\u4ed6\u8fdb\u7a0b\u53bb\u91cd\u65b0\u83b7\u53d6\u6700\u65b0\u503c\uff1b \u8fd4\u56de\u503c \u6210\u529f\u5219\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1 \u4ee3\u7801\u4e3e\u4f8b: #include <iostream> #include <sys/mman.h> #include <unistd.h> #include <stdlib.h> #include <stdio.h> int main(int argc, const char * argv[]) { //\u7533\u8bf7\u5185\u5b58 int* arr = static_cast<int*>( mmap(NULL, //\u5206\u914d\u7684\u9996\u5730\u5740 getpagesize(), //\u5206\u914d\u5185\u5b58\u5927\u5c0f(\u5fc5\u987b\u662f\u9875\u7684\u6574\u6570\u500d, 32\u4f4d1\u9875=4k) PROT_READ | PROT_WRITE, //\u6620\u5c04\u533a\u57df\u4fdd\u62a4\u6743\u9650\uff1a\u8bfb|\u5199 MAP_ANONYMOUS | MAP_SHARED, //\u533f\u540d\u6620\u5c04(\u4e0d\u6d89\u53ca\u6587\u4ef6) -1, //\u8981\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 0 //\u6587\u4ef6\u6620\u5c04\u7684\u504f\u79fb\u91cf\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a0\uff0c\u5fc5\u987b\u662f\u9875\u7684\u6574\u6570\u500d )); printf(\"\u7533\u8bf7\u5185\u5b58\u5927\u5c0f=%dk\\n\", sizeof(arr)); //\u5199\u5165\u5185\u5b58 *arr = 10; *(arr + 1) = 20; *(arr + 2) = 30; printf(\"arr[2]=%d\\n\", arr[2]); //\u91ca\u653e\u6307\u9488arr\u6307\u5411\u7684\u5185\u5b58\u533a\u57df\uff0c\u5e76\u5236\u5b9a\u91ca\u653e\u7684\u5185\u5b58\u5927\u5c0f munmap(arr, getpagesize()); return 0; }","title":"1\u3001C\u5b9e\u73b0"},{"location":"mmap/#2java","text":"MappedByteBuffer\u662fjava nio\u5f15\u5165\u7684\u6587\u4ef6\u5185\u5b58\u6620\u5c04\u65b9\u6848\u3002 FileChannel\u63d0\u4f9b\u4e86map\u65b9\u6cd5\u6765\u628a\u6587\u4ef6\u6620\u5c04\u4e3a\u5185\u5b58\u6620\u50cf\u6587\u4ef6\uff0c\u53ef\u4ee5\u628a\u6587\u4ef6\u7684\u4eceposition\u5f00\u59cb\u7684size\u5927\u5c0f\u7684\u533a\u57df\u6620\u5c04\u4e3a\u5185\u5b58\u6620\u50cf\u6587\u4ef6\uff0cmode\u6307\u51fa\u4e86\u53ef\u8bbf\u95ee\u8be5\u5185\u5b58\u6620\u50cf\u6587\u4ef6\u7684\u65b9\u5f0f\u3002 MappedByteBuffer map(int mode, long position, long size); mode\u6709\u4e09\u79cd\u53d6\u503c\uff1a READ_ONLY\uff08\u53ea\u8bfb\uff09\uff1a \u8bd5\u56fe\u4fee\u6539\u5f97\u5230\u7684\u7f13\u51b2\u533a\u5c06\u5bfc\u81f4\u629b\u51fa\u5f02\u5e38ReadOnlyBufferException.(MapMode.READ_ONLY)\u3002 READ_WRITE\uff08\u8bfb/\u5199\uff09\uff1a \u5bf9\u5f97\u5230\u7684\u7f13\u51b2\u533a\u7684\u66f4\u6539\u6700\u7ec8\u5c06\u4f20\u64ad\u5230\u6587\u4ef6\uff1b\u8be5\u66f4\u6539\u5bf9\u6620\u5c04\u5230\u540c\u4e00\u6587\u4ef6\u7684\u5176\u4ed6\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u662f\u53ef\u89c1\u7684\u3002 PRIVATE\uff08\u4e13\u7528\uff09\uff1a \u5bf9\u5f97\u5230\u7684\u7f13\u51b2\u533a\u7684\u66f4\u6539\u4e0d\u4f1a\u4f20\u64ad\u5230\u6587\u4ef6\uff0c\u5e76\u4e14\u8be5\u66f4\u6539\u5bf9\u6620\u5c04\u5230\u540c\u4e00\u6587\u4ef6\u7684\u5176\u4ed6\u7a0b\u5e8f\u4e5f\u4e0d\u662f\u53ef\u89c1\u7684\uff1b\u76f8\u53cd\uff0c\u4f1a\u521b\u5efa\u7f13\u51b2\u533a\u5df2\u4fee\u6539\u90e8\u5206\u7684\u4e13\u7528\u526f\u672c\u3002 \u4ee3\u7801\u4e3e\u4f8b\uff1a public static void main(String[] args) throws Exception { RandomAccessFile raf = new RandomAccessFile(new File(\"/Users/qylk/Downloads/test2.apk\"), \"rw\"); FileChannel fc = raf.getChannel(); MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_WRITE, 0, fc.size());//\u5185\u5b58\u6620\u5c04 byte[] buf = new byte[(int) fc.size()]; mbb.get(buf);//\u5168\u90e8\u8bfb\u53d6 //\u6539\u5199\u524d128\u4e2a\u5b57\u8282 for (int i = 0; i < 128; i++) { buf[i] = (byte) i; } mbb.position(0);//\u6587\u4ef6\u6307\u9488\u56de\u5230\u539f\u70b9 mbb.put(buf);//\u5199\u56de\u6587\u4ef6 fc.close(); }","title":"2\u3001Java\u5b9e\u73b0"},{"location":"mmkv/","text":"\u6982\u5ff5\uff1a MMKV \u662f\u817e\u8baf\u57fa\u4e8emmap\u5185\u5b58\u6620\u5c04\u7684key-value\u7ec4\u4ef6\uff0c\u5e95\u5c42\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u4f7f\u7528 protobuf \u5b9e\u73b0\uff0c\u6027\u80fd\u9ad8\uff0c\u7a33\u5b9a\u6027\u5f3a\u3002\u529f\u80fd\u4e0a\u7c7b\u4f3c\u4e8eios\u4e0a\u7684NSUserDefaults\u6216\u8005android\u4e0a\u7684sharedPreference\u3002 \u53e6\u5916MMKV\u8fd8\u652f\u6301\u52a0\u5bc6\u5b58\u50a8\u3001\u591a\u8fdb\u7a0b\u5171\u4eab\u3002 \u5f00\u6e90\u5730\u5740\uff1a https://github.com/tencent/mmkv \u57fa\u672c\u4ecb\u7ecd\uff1a MMKV--\u57fa\u4e8e mmap \u7684 iOS \u9ad8\u6027\u80fd\u901a\u7528 key-value \u7ec4\u4ef6 \u539f\u7406\u5206\u6790\uff1a \u6e90\u7801\u89e3\u6790\uff1a 1\u3001\u521d\u59cb\u5316\uff1a //MMKV\u521d\u59cb\u5316\u5165\u53e3 MMKV.initialize(this) public static String initialize(Context context) { rootDir = context.getFilesDir().getAbsolutePath() + \"/mmkv\";//\u5de5\u4f5c\u76ee\u5f55\uff0c\u7528\u4e8emmap\u6620\u5c04\u7684\u6587\u4ef6\u7684\u6839\u76ee\u5f55 initialize(rootDir);//jni\u8c03\u7528 return rootDir; } Java_com_tencent_mmkv_MMKV_initialize(JNIEnv *env, jobject obj, jstring rootDir) { if (!rootDir) { return; } const char *kstr = env->GetStringUTFChars(rootDir, nullptr); if (kstr) { MMKV::initializeMMKV(kstr);//c++\u5c42\u521d\u59cb\u5316 env->ReleaseStringUTFChars(rootDir, kstr); } } void MMKV::initializeMMKV(const std::string &rootDir) { static pthread_once_t once_control = PTHREAD_ONCE_INIT; pthread_once(&once_control, initialize);//\u4f7f\u7528pthread_once\u4fdd\u8bc1\u53ea\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u521d\u59cb\u5316\u5de5\u4f5c\u5728\u6307\u5b9a\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570initialize\u65b9\u6cd5\u4e2d g_rootDir = rootDir; char *path = strdup(g_rootDir.c_str()); mkPath(path);//\u751f\u6210\u5de5\u4f5c\u76ee\u5f55 free(path); } //\u4e00\u6b21\u521d\u59cb\u5316\u8c03\u7528 void initialize() { //\u5806\u5185\u5b58\u4e0a\u5206\u914dmap\u6570\u636e\u7ed3\u6784\uff0ckey\u662fmmapID\uff0cvalue\u662fMMKV\u5b9e\u4f8b\u6307\u9488\uff0c\u7528\u4e8e\u4fdd\u5b58\u6240\u6709\u7684MMKV\u6570\u636e\u3002 //mmapID\u76f8\u5f53\u4e8e\u4e00\u4e2asharedPreference\u7684\u6587\u4ef6\u540d\uff0cMMKV\u76f8\u5f53\u4e8e\u4e00\u4e2asharedPreference\u5b9e\u4f8b\u3002 g_instanceDic = new unordered_map<std::string, MMKV *>; g_instanceLock = ThreadLock();//\u7ebf\u7a0b\u9501 } 2\u3001\u5b9e\u4f8b\u5316MMKV: /** mmapID: \u5b57\u7b26\u4e32\u578b\u540d\u5b57\uff0c\u968f\u4fbf\u8d77\uff0c\u53ea\u8981\u4e0d\u5305\u542b\u7279\u6b8a\u5b57\u7b26 mode: \u6a21\u5f0f\uff0c\u53ef\u7ec4\u5408\u6a21\u5f0f\uff1a SINGLE_PROCESS_MODE\uff1a\u5355\u8fdb\u7a0b MULTI_PROCESS_MODE\uff1a\u591a\u8fdb\u7a0b\u5171\u4eab\u6a21\u5f0f ASHMEM_MODE\uff1a\u533f\u540d\u5171\u4eab\u5185\u5b58\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u662fmmap\u65b9\u5f0f\u7684\u5185\u5b58\u5171\u4eab cryptKey: \u52a0\u5bc6key */ MMKV kv = MMKV.mmkvWithID(mmapID, mode, cryptKey); public static MMKV mmkvWithID(String mmapID, int mode, String cryptKey) { if (rootDir == null) { throw new IllegalStateException(\"You should Call MMKV.initialize() first.\"); } else { verifyMMID(mmapID);//\u68c0\u67e5id\u5b57\u7b26\u7684\u5408\u6cd5\u6027 //jni\u8c03\u7528\u83b7\u53d6\u4e00\u4e2aC\u5c42\u7684MMKV\u5bf9\u8c61\u53e5\u67c4(\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u8c61\u6307\u9488)\uff0c\u8fd9\u4e2a\u53e5\u67c4\u7528\u4e8ejava\u5c42\u7684MMKV\u5bf9\u8c61\u8bbf\u95eeC\u5c42\u7684mmkv\u5bf9\u8c61\u3002 long handle = getMMKVWithID(mmapID, mode, cryptKey); return new MMKV(handle); } } const int DEFAULT_MMAP_SIZE = getpagesize();//\u9ed8\u8ba4\u7684mmap\u957f\u5ea6 = \u4e00\u4e2a\u9875\u9762\u5927\u5c0f\uff0832\u4f4d\u7cfb\u7edf\u4e2d\u901a\u5e38\u662f4k\u5b57\u8282\uff09 extern \"C\" JNIEXPORT JNICALL jlong Java_com_tencent_mmkv_MMKV_getMMKVWithID( JNIEnv *env, jobject obj, jstring mmapID, jint mode, jstring cryptKey) { MMKV *kv = nullptr; if (!mmapID) { return (jlong) kv; } string str = jstring2string(env, mmapID); if (cryptKey != nullptr) { string crypt = jstring2string(env, cryptKey); if (crypt.length() > 0) {//\u4f7f\u7528\u52a0\u5bc6\u6a21\u5f0f //\u8c03\u7528mmkvWithID\u65b9\u6cd5new\u4e00\u4e2aMMKV\u5bf9\u8c61 kv = MMKV::mmkvWithID(str, DEFAULT_MMAP_SIZE, (MMKVMode) mode, &crypt); } } if (!kv) { kv = MMKV::mmkvWithID(str, DEFAULT_MMAP_SIZE, (MMKVMode) mode, nullptr);//\u65e0\u52a0\u5bc6\u6a21\u5f0f } return (jlong) kv; } MMKV *MMKV::mmkvWithID(const std::string &mmapID, int size, MMKVMode mode, string *cryptKey) { ... auto itr = g_instanceDic->find(mmapID);//\u6839\u636emmapId\u4ecemap\u4e2d\u67e5\u627e if (itr != g_instanceDic->end()) {//\u627e\u5230\u4e86 MMKV *kv = itr->second; return kv;//\u8fd4\u56demmkv\u5b9e\u4f8b\u5bf9\u8c61\u6307\u9488 } auto kv = new MMKV(mmapID, size, mode, cryptKey);//\u6ca1\u627e\u5230\uff0cnew\u4e00\u4e2aMMKV (*g_instanceDic)[mmapID] = kv;//\u5b58\u5230map\u4e2d\uff0c\u4e0b\u6b21\u5c31\u80fd\u627e\u5230\u4e86 return kv;//\u8fd4\u56demmkv\u5b9e\u4f8b\u5bf9\u8c61\u6307\u9488 } MMKV::MMKV(const std::string &mmapID, int size, MMKVMode mode, string *cryptKey) : m_mmapID(mmapID)//mmapId , m_path(mappedKVPathWithID(m_mmapID, mode))//mmap\u6620\u5c04\u6587\u4ef6\u8def\u5f84 , m_crcPath(crcPathWithID(m_mmapID, mode))//crc\u6587\u4ef6\u8def\u5f84 , m_metaFile(m_crcPath, DEFAULT_MMAP_SIZE, (mode & MMKV_ASHMEM) ? MMAP_ASHMEM : MMAP_FILE)//meta\u6570\u636e\u7ed3\u6784\u5b58\u50a8\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f , m_crypter(nullptr)//\u52a0\u5bc6\u5668 , m_fileLock(m_metaFile.getFd())//\u6587\u4ef6\u9501 , m_sharedProcessLock(&m_fileLock, SharedLockType) , m_exclusiveProcessLock(&m_fileLock, ExclusiveLockType) , m_isInterProcess((mode & MMKV_MULTI_PROCESS) != 0)//\u591a\u8fdb\u7a0b\u6a21\u5f0f , m_isAshmem((mode & MMKV_ASHMEM) != 0) {//\u662f\u5426\u662f\u533f\u540d\u5171\u4eab\u5185\u5b58\u6a21\u5f0f m_fd = -1; m_ptr = nullptr; m_size = 0; m_actualSize = 0; m_output = nullptr; if (m_isAshmem) { m_ashmemFile = new MmapedFile(m_mmapID, static_cast<size_t>(size), MMAP_ASHMEM);//\u6253\u5f00\u533f\u540d\u5171\u4eab\u5185\u5b58 m_fd = m_ashmemFile->getFd(); } else { m_ashmemFile = nullptr; } if (cryptKey && cryptKey->length() > 0) { m_crypter = new AESCrypt((const unsigned char *) cryptKey->data(), cryptKey->length());//\u521d\u59cb\u5316\u52a0\u5bc6\u5668 } m_needLoadFromFile = true; m_crcDigest = 0; m_sharedProcessLock.m_enable = m_isInterProcess; m_exclusiveProcessLock.m_enable = m_isInterProcess; // sensitive zone { SCOPEDLOCK(m_sharedProcessLock); loadFromFile(); } } //m_metaFile\u662fMmapedFile\u7c7b\u578b\u7684\uff0cpath\u662fcrc\u6587\u4ef6\uff0c\u6784\u9020\u51fd\u6570\uff1a MmapedFile::MmapedFile(const std::string &path, size_t size, bool fileType) : m_name(path), m_fd(-1), m_segmentPtr(nullptr), m_segmentSize(0), m_fileType(fileType) { if (m_fileType == MMAP_FILE) {//mmap\u6a21\u5f0f m_fd = open(m_name.c_str(), O_RDWR | O_CREAT, S_IRWXU);//\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6 if (m_fd < 0) { MMKVError(\"fail to open:%s, %s\", m_name.c_str(), strerror(errno)); } else { struct stat st = {}; if (fstat(m_fd, &st) != -1) { m_segmentSize = static_cast<size_t>(st.st_size); } if (m_segmentSize < DEFAULT_MMAP_SIZE) { m_segmentSize = static_cast<size_t>(DEFAULT_MMAP_SIZE); //ftruncate\u5c06crc\u6587\u4ef6\u5927\u5c0f\u8c03\u6574\u4e3aDEFAULT_MMAP_SIZE\u5927\u5c0f if (ftruncate(m_fd, m_segmentSize) != 0 || !zeroFillFile(m_fd, 0, m_segmentSize)) { MMKVError(\"fail to truncate [%s] to size %zu, %s\", m_name.c_str(), m_segmentSize, strerror(errno)); close(m_fd); m_fd = -1; removeFile(m_name); return; } } //\u8c03\u7528mmap\u6620\u5c04crc\u6587\u4ef6\u5230\u5185\u5b58 m_segmentPtr = (char *) mmap(nullptr, m_segmentSize, PROT_READ | PROT_WRITE, MAP_SHARED, m_fd, 0); if (m_segmentPtr == MAP_FAILED) { MMKVError(\"fail to mmap [%s], %s\", m_name.c_str(), strerror(errno)); close(m_fd); m_fd = -1; m_segmentPtr = nullptr; } } } else {//ashmem\u6a21\u5f0f m_fd = open(ASHMEM_NAME_DEF, O_RDWR); if (m_fd < 0) { MMKVError(\"fail to open ashmem:%s, %s\", m_name.c_str(), strerror(errno)); } else { if (ioctl(m_fd, ASHMEM_SET_NAME, m_name.c_str()) != 0) { MMKVError(\"fail to set ashmem name:%s, %s\", m_name.c_str(), strerror(errno)); } else if (ioctl(m_fd, ASHMEM_SET_SIZE, size) != 0) { MMKVError(\"fail to set ashmem:%s, size %d, %s\", m_name.c_str(), size, strerror(errno)); } else { m_segmentSize = static_cast<size_t>(size); m_segmentPtr = (char *) mmap(nullptr, m_segmentSize, PROT_READ | PROT_WRITE, MAP_SHARED, m_fd, 0); if (m_segmentPtr == MAP_FAILED) { MMKVError(\"fail to mmap [%s], %s\", m_name.c_str(), strerror(errno)); m_segmentPtr = nullptr; } else { return; } } close(m_fd); m_fd = -1; } } } void MMKV::loadFromFile() { if (m_isAshmem) { loadFromAshmem(); return; } m_metaInfo.read(m_metaFile.getMemory()); m_fd = open(m_path.c_str(), O_RDWR | O_CREAT, S_IRWXU);//\u6253\u5f00mmkv\u6570\u636e\u6587\u4ef6 if (m_fd < 0) { MMKVError(\"fail to open:%s, %s\", m_path.c_str(), strerror(errno)); } else { m_size = 0; struct stat st = {0}; if (fstat(m_fd, &st) != -1) { m_size = static_cast<size_t>(st.st_size); } // round up to (n * pagesize) if (m_size < DEFAULT_MMAP_SIZE || (m_size % DEFAULT_MMAP_SIZE != 0)) { size_t oldSize = m_size; m_size = ((m_size / DEFAULT_MMAP_SIZE) + 1) * DEFAULT_MMAP_SIZE; if (ftruncate(m_fd, m_size) != 0) {//\u5c06\u6587\u4ef6\u5927\u5c0f\u8c03\u6574\u4e3an*pagesize MMKVError(\"fail to truncate [%s] to size %zu, %s\", m_mmapID.c_str(), m_size, strerror(errno)); m_size = static_cast<size_t>(st.st_size); } zeroFillFile(m_fd, oldSize, m_size - oldSize);//\u75280\u586b\u5145\u5269\u4f59\u7a7a\u95f4 } //\u8c03\u7528mmap\u6620\u5c04\u6570\u636e\u6587\u4ef6\u5230\u5185\u5b58 m_ptr = (char *) mmap(nullptr, m_size, PROT_READ | PROT_WRITE, MAP_SHARED, m_fd, 0); if (m_ptr == MAP_FAILED) { MMKVError(\"fail to mmap [%s], %s\", m_mmapID.c_str(), strerror(errno)); } else { memcpy(&m_actualSize, m_ptr, Fixed32Size);//\u63d0\u53d6\u524d4\u4e2a\u5b57\u8282\uff1a\u6570\u636e\u957f\u5ea6 MMKVInfo(\"loading [%s] with %zu size in total, file size is %zu\", m_mmapID.c_str(), m_actualSize, m_size); bool loaded = false; if (m_actualSize > 0) { if (m_actualSize < m_size && m_actualSize + Fixed32Size <= m_size) { if (checkFileCRCValid()) {//\u6821\u9a8ccrc\u6587\u4ef6 MMKVInfo(\"loading [%s] with crc %u sequence %u\", m_mmapID.c_str(), m_metaInfo.m_crcDigest, m_metaInfo.m_sequence); MMBuffer inputBuffer(m_ptr + Fixed32Size, m_actualSize, MMBufferNoCopy);//\u5c06\u6240\u6709\u6570\u636e\u52a0\u8f7d\u5230buffer\u4e2d\uff0c\u975e\u62f7\u8d1d\u6a21\u5f0f if (m_crypter) { decryptBuffer(*m_crypter, inputBuffer);//\u6570\u636e\u89e3\u5bc6 } m_dic = MiniPBCoder::decodeMap(inputBuffer);//protobuf\u89e3\u7801\u6210\u6570\u636emap m_output = new CodedOutputData(m_ptr + Fixed32Size + m_actualSize, m_size - Fixed32Size - m_actualSize);//\u6784\u9020\u6570\u636e\u5199\u5165\u7c7b\uff0c\u4ee5\u540e\u4f7f\u7528m_output\u6765\u5199\u5165\u6570\u636e loaded = true; } } } if (!loaded) { SCOPEDLOCK(m_exclusiveProcessLock); if (m_actualSize > 0) { writeAcutalSize(0); } m_output = new CodedOutputData(m_ptr + Fixed32Size, m_size - Fixed32Size); recaculateCRCDigest(); } MMKVInfo(\"loaded [%s] with %zu values\", m_mmapID.c_str(), m_dic.size()); } } if (!isFileValid()) { MMKVWarning(\"[%s] file not valid\", m_mmapID.c_str()); } m_needLoadFromFile = false; } 3\u3001\u6570\u636e\u5199\u5165\uff1a //todo 4\u3001\u6570\u636e\u8bfb\u53d6\uff1a //todo","title":"MMKV"},{"location":"mmkv/#_1","text":"MMKV \u662f\u817e\u8baf\u57fa\u4e8emmap\u5185\u5b58\u6620\u5c04\u7684key-value\u7ec4\u4ef6\uff0c\u5e95\u5c42\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u4f7f\u7528 protobuf \u5b9e\u73b0\uff0c\u6027\u80fd\u9ad8\uff0c\u7a33\u5b9a\u6027\u5f3a\u3002\u529f\u80fd\u4e0a\u7c7b\u4f3c\u4e8eios\u4e0a\u7684NSUserDefaults\u6216\u8005android\u4e0a\u7684sharedPreference\u3002 \u53e6\u5916MMKV\u8fd8\u652f\u6301\u52a0\u5bc6\u5b58\u50a8\u3001\u591a\u8fdb\u7a0b\u5171\u4eab\u3002","title":"\u6982\u5ff5\uff1a"},{"location":"mmkv/#_2","text":"https://github.com/tencent/mmkv \u57fa\u672c\u4ecb\u7ecd\uff1a MMKV--\u57fa\u4e8e mmap \u7684 iOS \u9ad8\u6027\u80fd\u901a\u7528 key-value \u7ec4\u4ef6","title":"\u5f00\u6e90\u5730\u5740\uff1a"},{"location":"mmkv/#_3","text":"","title":"\u539f\u7406\u5206\u6790\uff1a"},{"location":"mmkv/#_4","text":"1\u3001\u521d\u59cb\u5316\uff1a //MMKV\u521d\u59cb\u5316\u5165\u53e3 MMKV.initialize(this) public static String initialize(Context context) { rootDir = context.getFilesDir().getAbsolutePath() + \"/mmkv\";//\u5de5\u4f5c\u76ee\u5f55\uff0c\u7528\u4e8emmap\u6620\u5c04\u7684\u6587\u4ef6\u7684\u6839\u76ee\u5f55 initialize(rootDir);//jni\u8c03\u7528 return rootDir; } Java_com_tencent_mmkv_MMKV_initialize(JNIEnv *env, jobject obj, jstring rootDir) { if (!rootDir) { return; } const char *kstr = env->GetStringUTFChars(rootDir, nullptr); if (kstr) { MMKV::initializeMMKV(kstr);//c++\u5c42\u521d\u59cb\u5316 env->ReleaseStringUTFChars(rootDir, kstr); } } void MMKV::initializeMMKV(const std::string &rootDir) { static pthread_once_t once_control = PTHREAD_ONCE_INIT; pthread_once(&once_control, initialize);//\u4f7f\u7528pthread_once\u4fdd\u8bc1\u53ea\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u521d\u59cb\u5316\u5de5\u4f5c\u5728\u6307\u5b9a\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570initialize\u65b9\u6cd5\u4e2d g_rootDir = rootDir; char *path = strdup(g_rootDir.c_str()); mkPath(path);//\u751f\u6210\u5de5\u4f5c\u76ee\u5f55 free(path); } //\u4e00\u6b21\u521d\u59cb\u5316\u8c03\u7528 void initialize() { //\u5806\u5185\u5b58\u4e0a\u5206\u914dmap\u6570\u636e\u7ed3\u6784\uff0ckey\u662fmmapID\uff0cvalue\u662fMMKV\u5b9e\u4f8b\u6307\u9488\uff0c\u7528\u4e8e\u4fdd\u5b58\u6240\u6709\u7684MMKV\u6570\u636e\u3002 //mmapID\u76f8\u5f53\u4e8e\u4e00\u4e2asharedPreference\u7684\u6587\u4ef6\u540d\uff0cMMKV\u76f8\u5f53\u4e8e\u4e00\u4e2asharedPreference\u5b9e\u4f8b\u3002 g_instanceDic = new unordered_map<std::string, MMKV *>; g_instanceLock = ThreadLock();//\u7ebf\u7a0b\u9501 } 2\u3001\u5b9e\u4f8b\u5316MMKV: /** mmapID: \u5b57\u7b26\u4e32\u578b\u540d\u5b57\uff0c\u968f\u4fbf\u8d77\uff0c\u53ea\u8981\u4e0d\u5305\u542b\u7279\u6b8a\u5b57\u7b26 mode: \u6a21\u5f0f\uff0c\u53ef\u7ec4\u5408\u6a21\u5f0f\uff1a SINGLE_PROCESS_MODE\uff1a\u5355\u8fdb\u7a0b MULTI_PROCESS_MODE\uff1a\u591a\u8fdb\u7a0b\u5171\u4eab\u6a21\u5f0f ASHMEM_MODE\uff1a\u533f\u540d\u5171\u4eab\u5185\u5b58\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u662fmmap\u65b9\u5f0f\u7684\u5185\u5b58\u5171\u4eab cryptKey: \u52a0\u5bc6key */ MMKV kv = MMKV.mmkvWithID(mmapID, mode, cryptKey); public static MMKV mmkvWithID(String mmapID, int mode, String cryptKey) { if (rootDir == null) { throw new IllegalStateException(\"You should Call MMKV.initialize() first.\"); } else { verifyMMID(mmapID);//\u68c0\u67e5id\u5b57\u7b26\u7684\u5408\u6cd5\u6027 //jni\u8c03\u7528\u83b7\u53d6\u4e00\u4e2aC\u5c42\u7684MMKV\u5bf9\u8c61\u53e5\u67c4(\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u8c61\u6307\u9488)\uff0c\u8fd9\u4e2a\u53e5\u67c4\u7528\u4e8ejava\u5c42\u7684MMKV\u5bf9\u8c61\u8bbf\u95eeC\u5c42\u7684mmkv\u5bf9\u8c61\u3002 long handle = getMMKVWithID(mmapID, mode, cryptKey); return new MMKV(handle); } } const int DEFAULT_MMAP_SIZE = getpagesize();//\u9ed8\u8ba4\u7684mmap\u957f\u5ea6 = \u4e00\u4e2a\u9875\u9762\u5927\u5c0f\uff0832\u4f4d\u7cfb\u7edf\u4e2d\u901a\u5e38\u662f4k\u5b57\u8282\uff09 extern \"C\" JNIEXPORT JNICALL jlong Java_com_tencent_mmkv_MMKV_getMMKVWithID( JNIEnv *env, jobject obj, jstring mmapID, jint mode, jstring cryptKey) { MMKV *kv = nullptr; if (!mmapID) { return (jlong) kv; } string str = jstring2string(env, mmapID); if (cryptKey != nullptr) { string crypt = jstring2string(env, cryptKey); if (crypt.length() > 0) {//\u4f7f\u7528\u52a0\u5bc6\u6a21\u5f0f //\u8c03\u7528mmkvWithID\u65b9\u6cd5new\u4e00\u4e2aMMKV\u5bf9\u8c61 kv = MMKV::mmkvWithID(str, DEFAULT_MMAP_SIZE, (MMKVMode) mode, &crypt); } } if (!kv) { kv = MMKV::mmkvWithID(str, DEFAULT_MMAP_SIZE, (MMKVMode) mode, nullptr);//\u65e0\u52a0\u5bc6\u6a21\u5f0f } return (jlong) kv; } MMKV *MMKV::mmkvWithID(const std::string &mmapID, int size, MMKVMode mode, string *cryptKey) { ... auto itr = g_instanceDic->find(mmapID);//\u6839\u636emmapId\u4ecemap\u4e2d\u67e5\u627e if (itr != g_instanceDic->end()) {//\u627e\u5230\u4e86 MMKV *kv = itr->second; return kv;//\u8fd4\u56demmkv\u5b9e\u4f8b\u5bf9\u8c61\u6307\u9488 } auto kv = new MMKV(mmapID, size, mode, cryptKey);//\u6ca1\u627e\u5230\uff0cnew\u4e00\u4e2aMMKV (*g_instanceDic)[mmapID] = kv;//\u5b58\u5230map\u4e2d\uff0c\u4e0b\u6b21\u5c31\u80fd\u627e\u5230\u4e86 return kv;//\u8fd4\u56demmkv\u5b9e\u4f8b\u5bf9\u8c61\u6307\u9488 } MMKV::MMKV(const std::string &mmapID, int size, MMKVMode mode, string *cryptKey) : m_mmapID(mmapID)//mmapId , m_path(mappedKVPathWithID(m_mmapID, mode))//mmap\u6620\u5c04\u6587\u4ef6\u8def\u5f84 , m_crcPath(crcPathWithID(m_mmapID, mode))//crc\u6587\u4ef6\u8def\u5f84 , m_metaFile(m_crcPath, DEFAULT_MMAP_SIZE, (mode & MMKV_ASHMEM) ? MMAP_ASHMEM : MMAP_FILE)//meta\u6570\u636e\u7ed3\u6784\u5b58\u50a8\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f , m_crypter(nullptr)//\u52a0\u5bc6\u5668 , m_fileLock(m_metaFile.getFd())//\u6587\u4ef6\u9501 , m_sharedProcessLock(&m_fileLock, SharedLockType) , m_exclusiveProcessLock(&m_fileLock, ExclusiveLockType) , m_isInterProcess((mode & MMKV_MULTI_PROCESS) != 0)//\u591a\u8fdb\u7a0b\u6a21\u5f0f , m_isAshmem((mode & MMKV_ASHMEM) != 0) {//\u662f\u5426\u662f\u533f\u540d\u5171\u4eab\u5185\u5b58\u6a21\u5f0f m_fd = -1; m_ptr = nullptr; m_size = 0; m_actualSize = 0; m_output = nullptr; if (m_isAshmem) { m_ashmemFile = new MmapedFile(m_mmapID, static_cast<size_t>(size), MMAP_ASHMEM);//\u6253\u5f00\u533f\u540d\u5171\u4eab\u5185\u5b58 m_fd = m_ashmemFile->getFd(); } else { m_ashmemFile = nullptr; } if (cryptKey && cryptKey->length() > 0) { m_crypter = new AESCrypt((const unsigned char *) cryptKey->data(), cryptKey->length());//\u521d\u59cb\u5316\u52a0\u5bc6\u5668 } m_needLoadFromFile = true; m_crcDigest = 0; m_sharedProcessLock.m_enable = m_isInterProcess; m_exclusiveProcessLock.m_enable = m_isInterProcess; // sensitive zone { SCOPEDLOCK(m_sharedProcessLock); loadFromFile(); } } //m_metaFile\u662fMmapedFile\u7c7b\u578b\u7684\uff0cpath\u662fcrc\u6587\u4ef6\uff0c\u6784\u9020\u51fd\u6570\uff1a MmapedFile::MmapedFile(const std::string &path, size_t size, bool fileType) : m_name(path), m_fd(-1), m_segmentPtr(nullptr), m_segmentSize(0), m_fileType(fileType) { if (m_fileType == MMAP_FILE) {//mmap\u6a21\u5f0f m_fd = open(m_name.c_str(), O_RDWR | O_CREAT, S_IRWXU);//\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6 if (m_fd < 0) { MMKVError(\"fail to open:%s, %s\", m_name.c_str(), strerror(errno)); } else { struct stat st = {}; if (fstat(m_fd, &st) != -1) { m_segmentSize = static_cast<size_t>(st.st_size); } if (m_segmentSize < DEFAULT_MMAP_SIZE) { m_segmentSize = static_cast<size_t>(DEFAULT_MMAP_SIZE); //ftruncate\u5c06crc\u6587\u4ef6\u5927\u5c0f\u8c03\u6574\u4e3aDEFAULT_MMAP_SIZE\u5927\u5c0f if (ftruncate(m_fd, m_segmentSize) != 0 || !zeroFillFile(m_fd, 0, m_segmentSize)) { MMKVError(\"fail to truncate [%s] to size %zu, %s\", m_name.c_str(), m_segmentSize, strerror(errno)); close(m_fd); m_fd = -1; removeFile(m_name); return; } } //\u8c03\u7528mmap\u6620\u5c04crc\u6587\u4ef6\u5230\u5185\u5b58 m_segmentPtr = (char *) mmap(nullptr, m_segmentSize, PROT_READ | PROT_WRITE, MAP_SHARED, m_fd, 0); if (m_segmentPtr == MAP_FAILED) { MMKVError(\"fail to mmap [%s], %s\", m_name.c_str(), strerror(errno)); close(m_fd); m_fd = -1; m_segmentPtr = nullptr; } } } else {//ashmem\u6a21\u5f0f m_fd = open(ASHMEM_NAME_DEF, O_RDWR); if (m_fd < 0) { MMKVError(\"fail to open ashmem:%s, %s\", m_name.c_str(), strerror(errno)); } else { if (ioctl(m_fd, ASHMEM_SET_NAME, m_name.c_str()) != 0) { MMKVError(\"fail to set ashmem name:%s, %s\", m_name.c_str(), strerror(errno)); } else if (ioctl(m_fd, ASHMEM_SET_SIZE, size) != 0) { MMKVError(\"fail to set ashmem:%s, size %d, %s\", m_name.c_str(), size, strerror(errno)); } else { m_segmentSize = static_cast<size_t>(size); m_segmentPtr = (char *) mmap(nullptr, m_segmentSize, PROT_READ | PROT_WRITE, MAP_SHARED, m_fd, 0); if (m_segmentPtr == MAP_FAILED) { MMKVError(\"fail to mmap [%s], %s\", m_name.c_str(), strerror(errno)); m_segmentPtr = nullptr; } else { return; } } close(m_fd); m_fd = -1; } } } void MMKV::loadFromFile() { if (m_isAshmem) { loadFromAshmem(); return; } m_metaInfo.read(m_metaFile.getMemory()); m_fd = open(m_path.c_str(), O_RDWR | O_CREAT, S_IRWXU);//\u6253\u5f00mmkv\u6570\u636e\u6587\u4ef6 if (m_fd < 0) { MMKVError(\"fail to open:%s, %s\", m_path.c_str(), strerror(errno)); } else { m_size = 0; struct stat st = {0}; if (fstat(m_fd, &st) != -1) { m_size = static_cast<size_t>(st.st_size); } // round up to (n * pagesize) if (m_size < DEFAULT_MMAP_SIZE || (m_size % DEFAULT_MMAP_SIZE != 0)) { size_t oldSize = m_size; m_size = ((m_size / DEFAULT_MMAP_SIZE) + 1) * DEFAULT_MMAP_SIZE; if (ftruncate(m_fd, m_size) != 0) {//\u5c06\u6587\u4ef6\u5927\u5c0f\u8c03\u6574\u4e3an*pagesize MMKVError(\"fail to truncate [%s] to size %zu, %s\", m_mmapID.c_str(), m_size, strerror(errno)); m_size = static_cast<size_t>(st.st_size); } zeroFillFile(m_fd, oldSize, m_size - oldSize);//\u75280\u586b\u5145\u5269\u4f59\u7a7a\u95f4 } //\u8c03\u7528mmap\u6620\u5c04\u6570\u636e\u6587\u4ef6\u5230\u5185\u5b58 m_ptr = (char *) mmap(nullptr, m_size, PROT_READ | PROT_WRITE, MAP_SHARED, m_fd, 0); if (m_ptr == MAP_FAILED) { MMKVError(\"fail to mmap [%s], %s\", m_mmapID.c_str(), strerror(errno)); } else { memcpy(&m_actualSize, m_ptr, Fixed32Size);//\u63d0\u53d6\u524d4\u4e2a\u5b57\u8282\uff1a\u6570\u636e\u957f\u5ea6 MMKVInfo(\"loading [%s] with %zu size in total, file size is %zu\", m_mmapID.c_str(), m_actualSize, m_size); bool loaded = false; if (m_actualSize > 0) { if (m_actualSize < m_size && m_actualSize + Fixed32Size <= m_size) { if (checkFileCRCValid()) {//\u6821\u9a8ccrc\u6587\u4ef6 MMKVInfo(\"loading [%s] with crc %u sequence %u\", m_mmapID.c_str(), m_metaInfo.m_crcDigest, m_metaInfo.m_sequence); MMBuffer inputBuffer(m_ptr + Fixed32Size, m_actualSize, MMBufferNoCopy);//\u5c06\u6240\u6709\u6570\u636e\u52a0\u8f7d\u5230buffer\u4e2d\uff0c\u975e\u62f7\u8d1d\u6a21\u5f0f if (m_crypter) { decryptBuffer(*m_crypter, inputBuffer);//\u6570\u636e\u89e3\u5bc6 } m_dic = MiniPBCoder::decodeMap(inputBuffer);//protobuf\u89e3\u7801\u6210\u6570\u636emap m_output = new CodedOutputData(m_ptr + Fixed32Size + m_actualSize, m_size - Fixed32Size - m_actualSize);//\u6784\u9020\u6570\u636e\u5199\u5165\u7c7b\uff0c\u4ee5\u540e\u4f7f\u7528m_output\u6765\u5199\u5165\u6570\u636e loaded = true; } } } if (!loaded) { SCOPEDLOCK(m_exclusiveProcessLock); if (m_actualSize > 0) { writeAcutalSize(0); } m_output = new CodedOutputData(m_ptr + Fixed32Size, m_size - Fixed32Size); recaculateCRCDigest(); } MMKVInfo(\"loaded [%s] with %zu values\", m_mmapID.c_str(), m_dic.size()); } } if (!isFileValid()) { MMKVWarning(\"[%s] file not valid\", m_mmapID.c_str()); } m_needLoadFromFile = false; } 3\u3001\u6570\u636e\u5199\u5165\uff1a //todo 4\u3001\u6570\u636e\u8bfb\u53d6\uff1a //todo","title":"\u6e90\u7801\u89e3\u6790\uff1a"},{"location":"navigation/","text":"http://guofeng007.com/2018/05/28/Jackpack-navitation/","title":"Navigation"},{"location":"pandora/","text":"","title":"Pandora"},{"location":"robust/","text":"//https://www.jianshu.com/p/2d7b42cbfa70","title":"Robust"},{"location":"sni/","text":"\u4ecb\u7ecd \u65e9\u671f\u7684SSLv2\u6839\u636e\u7ecf\u5178\u7684\u516c\u94a5\u57fa\u7840\u8bbe\u65bdPKI(Public Key Infrastructure)\u8bbe\u8ba1\uff0c\u5b83\u9ed8\u8ba4\u8ba4\u4e3a\uff1a\u4e00\u53f0\u670d\u52a1\u5668\uff08\u6216\u8005\u8bf4\u4e00\u4e2aIP\uff09\u53ea\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u670d\u52a1\uff0c\u6240\u4ee5\u5728SSL\u63e1\u624b\u65f6\uff0c\u670d\u52a1\u5668\u7aef\u53ef\u4ee5\u786e\u4fe1\u5ba2\u6237\u7aef\u7533\u8bf7\u7684\u662f\u54ea\u5f20\u8bc1\u4e66\u3002 \u4f46\u662f\u8ba9\u4eba\u4e07\u4e07\u6ca1\u6709\u60f3\u5230\u7684\u662f\uff0c \u865a\u62df\u4e3b\u673a \u5927\u529b\u53d1\u5c55\u8d77\u6765\u4e86\uff0c\u8fd9\u5c31\u9020\u6210\u4e86 \u4e00\u4e2aIP\u4f1a\u5bf9\u5e94\u591a\u4e2a\u57df\u540d\u7684\u60c5\u51b5 \u3002\u6d4f\u89c8\u5668\u5728\u8bbf\u95ee\u4e00\u4e2aHTTPS\u7ad9\u70b9\u65f6\uff0c\u5148\u4e0e\u670d\u52a1\u5668\u5efa\u7acbSSL\u8fde\u63a5\uff0c\u5efa\u7acb\u8fde\u63a5\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u8bf7\u6c42\u670d\u52a1\u5668\u7684\u8bc1\u4e66\uff0c\u800c\u670d\u52a1\u5668\u5728\u53d1\u9001\u8bc1\u4e66\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u77e5\u9053\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u662f\u54ea\u4e2a\u57df\u540d\uff0c\u6240\u4ee5\u4e0d\u80fd\u6839\u636e\u4e0d\u540c\u57df\u540d\u53d1\u9001\u4e0d\u540c\u7684\u8bc1\u4e66\u3002\u89e3\u51b3\u529e\u6cd5\u6709\u4e00\u4e9b\uff0c\u4f8b\u5982\u7533\u8bf7\u6cdb\u57df\u540d\u8bc1\u4e66\uff0c\u5bf9\u6240\u6709*.yourdomain.com\u7684\u57df\u540d\u90fd\u53ef\u4ee5\u8ba4\u8bc1\uff0c\u4f46\u5982\u679c\u4f60\u8fd8\u6709\u4e00\u4e2ayourdomain.net\u7684\u57df\u540d\uff0c\u90a3\u5c31\u4e0d\u884c\u4e86\u3002 \u5728HTTP\u534f\u8bae\u4e2d\uff0c\u8bf7\u6c42\u7684\u57df\u540d\u4f5c\u4e3a\u4e3b\u673a\u5934\uff08Host\uff09\u653e\u5728HTTP Header\u4e2d\uff0c\u6240\u4ee5\u670d\u52a1\u5668\u7aef\u77e5\u9053\u5e94\u8be5\u628a\u8bf7\u6c42\u5f15\u5411\u54ea\u4e2a\u57df\u540d\uff0c\u4f46\u662f\u65e9\u671f\u7684SSL\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5728SSL\u63e1\u624b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6839\u672c\u4e0d\u4f1a\u6709Host\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u670d\u52a1\u5668\u7aef\u901a\u5e38\u8fd4\u56de\u7684\u662f\u914d\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53ef\u7528\u8bc1\u4e66\u3002\u56e0\u800c\u4e00\u4e9b\u8f83\u8001\u7684\u73af\u5883\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u591a\u57df\u540d\u5206\u522b\u914d\u597d\u4e86\u8bc1\u4e66\uff0c\u4f46\u8fd4\u56de\u7684\u59cb\u7ec8\u662f\u540c\u4e00\u4e2a\u3002 \u65e2\u7136\u95ee\u9898\u7684\u539f\u56e0\u662f\u5728SSL\u63e1\u624b\u65f6\u7f3a\u5c11\u4e3b\u673a\u5934\u4fe1\u606f\uff0c\u90a3\u4e48\u8865\u4e0a\u5c31\u662f\u4e86\u3002 SNI\uff08Server Name Indication\uff09\u5b9a\u4e49\u5728RFC 4366\uff0c\u662f\u4e00\u9879\u7528\u4e8e\u6539\u5584SSL/TLS\u7684\u6280\u672f\uff0c\u5728SSLv3/TLSv1\u4e2d\u88ab\u542f\u7528\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u5728\u53d1\u8d77SSL\u63e1\u624b\u8bf7\u6c42\u65f6\uff08\u5177\u4f53\u8bf4\u6765\uff0c\u662f\u5ba2\u6237\u7aef\u53d1\u51faSSL\u8bf7\u6c42\u4e2d\u7684ClientHello\u9636\u6bb5\uff09\uff0c\u5c31 \u63d0\u4ea4\u8bf7\u6c42\u7684Host\u4fe1\u606f \uff0c\u4f7f\u5f97\u670d\u52a1\u5668\u80fd\u591f\u5207\u6362\u5230\u6b63\u786e\u7684\u57df\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u8bc1\u4e66\u3002 \u8981\u4f7f\u7528SNI\uff0c\u9700\u8981\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u540c\u65f6\u6ee1\u8db3\u6761\u4ef6\uff0c\u5e78\u597d\u5bf9\u4e8e\u73b0\u4ee3\u6d4f\u89c8\u5668\u6765\u8bf4\uff0c\u5927\u90e8\u5206\u90fd\u652f\u6301SSLv3/TLSv1\uff0c\u6240\u4ee5\u90fd\u53ef\u4ee5\u4eab\u53d7SNI\u5e26\u6765\u7684\u4fbf\u5229\u3002","title":"SNI"},{"location":"sni/#_1","text":"\u65e9\u671f\u7684SSLv2\u6839\u636e\u7ecf\u5178\u7684\u516c\u94a5\u57fa\u7840\u8bbe\u65bdPKI(Public Key Infrastructure)\u8bbe\u8ba1\uff0c\u5b83\u9ed8\u8ba4\u8ba4\u4e3a\uff1a\u4e00\u53f0\u670d\u52a1\u5668\uff08\u6216\u8005\u8bf4\u4e00\u4e2aIP\uff09\u53ea\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u670d\u52a1\uff0c\u6240\u4ee5\u5728SSL\u63e1\u624b\u65f6\uff0c\u670d\u52a1\u5668\u7aef\u53ef\u4ee5\u786e\u4fe1\u5ba2\u6237\u7aef\u7533\u8bf7\u7684\u662f\u54ea\u5f20\u8bc1\u4e66\u3002 \u4f46\u662f\u8ba9\u4eba\u4e07\u4e07\u6ca1\u6709\u60f3\u5230\u7684\u662f\uff0c \u865a\u62df\u4e3b\u673a \u5927\u529b\u53d1\u5c55\u8d77\u6765\u4e86\uff0c\u8fd9\u5c31\u9020\u6210\u4e86 \u4e00\u4e2aIP\u4f1a\u5bf9\u5e94\u591a\u4e2a\u57df\u540d\u7684\u60c5\u51b5 \u3002\u6d4f\u89c8\u5668\u5728\u8bbf\u95ee\u4e00\u4e2aHTTPS\u7ad9\u70b9\u65f6\uff0c\u5148\u4e0e\u670d\u52a1\u5668\u5efa\u7acbSSL\u8fde\u63a5\uff0c\u5efa\u7acb\u8fde\u63a5\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u8bf7\u6c42\u670d\u52a1\u5668\u7684\u8bc1\u4e66\uff0c\u800c\u670d\u52a1\u5668\u5728\u53d1\u9001\u8bc1\u4e66\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u77e5\u9053\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u662f\u54ea\u4e2a\u57df\u540d\uff0c\u6240\u4ee5\u4e0d\u80fd\u6839\u636e\u4e0d\u540c\u57df\u540d\u53d1\u9001\u4e0d\u540c\u7684\u8bc1\u4e66\u3002\u89e3\u51b3\u529e\u6cd5\u6709\u4e00\u4e9b\uff0c\u4f8b\u5982\u7533\u8bf7\u6cdb\u57df\u540d\u8bc1\u4e66\uff0c\u5bf9\u6240\u6709*.yourdomain.com\u7684\u57df\u540d\u90fd\u53ef\u4ee5\u8ba4\u8bc1\uff0c\u4f46\u5982\u679c\u4f60\u8fd8\u6709\u4e00\u4e2ayourdomain.net\u7684\u57df\u540d\uff0c\u90a3\u5c31\u4e0d\u884c\u4e86\u3002 \u5728HTTP\u534f\u8bae\u4e2d\uff0c\u8bf7\u6c42\u7684\u57df\u540d\u4f5c\u4e3a\u4e3b\u673a\u5934\uff08Host\uff09\u653e\u5728HTTP Header\u4e2d\uff0c\u6240\u4ee5\u670d\u52a1\u5668\u7aef\u77e5\u9053\u5e94\u8be5\u628a\u8bf7\u6c42\u5f15\u5411\u54ea\u4e2a\u57df\u540d\uff0c\u4f46\u662f\u65e9\u671f\u7684SSL\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5728SSL\u63e1\u624b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6839\u672c\u4e0d\u4f1a\u6709Host\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u670d\u52a1\u5668\u7aef\u901a\u5e38\u8fd4\u56de\u7684\u662f\u914d\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53ef\u7528\u8bc1\u4e66\u3002\u56e0\u800c\u4e00\u4e9b\u8f83\u8001\u7684\u73af\u5883\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u591a\u57df\u540d\u5206\u522b\u914d\u597d\u4e86\u8bc1\u4e66\uff0c\u4f46\u8fd4\u56de\u7684\u59cb\u7ec8\u662f\u540c\u4e00\u4e2a\u3002 \u65e2\u7136\u95ee\u9898\u7684\u539f\u56e0\u662f\u5728SSL\u63e1\u624b\u65f6\u7f3a\u5c11\u4e3b\u673a\u5934\u4fe1\u606f\uff0c\u90a3\u4e48\u8865\u4e0a\u5c31\u662f\u4e86\u3002 SNI\uff08Server Name Indication\uff09\u5b9a\u4e49\u5728RFC 4366\uff0c\u662f\u4e00\u9879\u7528\u4e8e\u6539\u5584SSL/TLS\u7684\u6280\u672f\uff0c\u5728SSLv3/TLSv1\u4e2d\u88ab\u542f\u7528\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u5728\u53d1\u8d77SSL\u63e1\u624b\u8bf7\u6c42\u65f6\uff08\u5177\u4f53\u8bf4\u6765\uff0c\u662f\u5ba2\u6237\u7aef\u53d1\u51faSSL\u8bf7\u6c42\u4e2d\u7684ClientHello\u9636\u6bb5\uff09\uff0c\u5c31 \u63d0\u4ea4\u8bf7\u6c42\u7684Host\u4fe1\u606f \uff0c\u4f7f\u5f97\u670d\u52a1\u5668\u80fd\u591f\u5207\u6362\u5230\u6b63\u786e\u7684\u57df\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u8bc1\u4e66\u3002 \u8981\u4f7f\u7528SNI\uff0c\u9700\u8981\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u540c\u65f6\u6ee1\u8db3\u6761\u4ef6\uff0c\u5e78\u597d\u5bf9\u4e8e\u73b0\u4ee3\u6d4f\u89c8\u5668\u6765\u8bf4\uff0c\u5927\u90e8\u5206\u90fd\u652f\u6301SSLv3/TLSv1\uff0c\u6240\u4ee5\u90fd\u53ef\u4ee5\u4eab\u53d7SNI\u5e26\u6765\u7684\u4fbf\u5229\u3002","title":"\u4ecb\u7ecd"},{"location":"sonar/","text":"Facebook Sonar","title":"Sonar"},{"location":"strictMode/","text":"StrictMode\u7c7b\u662fAndroid 2.3 \uff08API 9\uff09\u5f15\u5165\u7684\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u53ef\u4ee5\u7528\u6765\u5e2e\u52a9\u5f00\u53d1\u8005\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u4e0d\u89c4\u8303\u7684\u95ee\u9898\uff0c\u4ee5\u8fbe\u5230\u63d0\u5347\u5e94\u7528\u54cd\u5e94\u80fd\u529b\u7684\u76ee\u7684\u3002 \u4e25\u82db\u6a21\u5f0f\u4e3b\u8981\u67092\u5927\u68c0\u6d4b\u7b56\u7565\uff0c\u4e00\u4e2a\u662f\u7ebf\u7a0b\u7b56\u7565\uff0c\u5373TreadPolicy\uff0c\u53e6\u4e00\u4e2a\u662fVM\u7b56\u7565\uff0c\u5373VmPolicy\u3002 ThreadPolicy\u7ebf\u7a0b\u7b56\u7565\u68c0\u6d4b \u81ea\u5b9a\u4e49\u7684\u8017\u65f6\u8c03\u7528 \u4f7f\u7528detectCustomSlowCalls()\u5f00\u542f\uff0c\u9488\u5bf9\u6267\u884c\u6bd4\u8f83\u8017\u65f6\u7684\u68c0\u67e5 \u78c1\u76d8\u8bfb\u53d6\u64cd\u4f5c \u4f7f\u7528detectDiskReads()\u5f00\u542f\uff0c\u7528\u4e8e\u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u4e2d\u662f\u5426\u6709\u78c1\u76d8\u8bfb\u53d6\u64cd\u4f5c \u78c1\u76d8\u5199\u5165\u64cd\u4f5c \u4f7f\u7528detectDiskWrites()\u5f00\u542f\uff0c\u7528\u4e8e\u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u4e2d\u662f\u5426\u6709\u78c1\u76d8\u5199\u5165\u64cd\u4f5c \u7f51\u7edc\u64cd\u4f5c \u4f7f\u7528detectNetwork()\u5f00\u542f\uff0c\u7528\u4e8e\u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u4e2d\u662f\u5426\u6709\u7f51\u7edc\u8bf7\u6c42\u64cd\u4f5c ThreadPolicy\u5728\u54ea\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u8fc7\uff0c\u5c31\u5728\u54ea\u4e2a\u7ebf\u7a0b\u68c0\u6d4b\u3002 boolean DEV_MODE = true; public void onCreate() { if (DEV_MODE) { StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder() .detectCustomSlowCalls() //API\u7b49\u7ea711\uff0c\u4f7f\u7528StrictMode.noteSlowCode .detectDiskReads() .detectDiskWrites() .detectNetwork() .penaltyDialog() //\u5f39\u51fa\u8fdd\u89c4\u63d0\u793a\u5bf9\u8bdd\u6846 .penaltyLog() //\u5728Logcat\u4e2d\u6253\u5370\u8fdd\u89c4\u5f02\u5e38\u4fe1\u606f .penaltyFlashScreen() //\u5c4f\u5e55\u95ea\u70c1 .build()) } super.onCreate() } \u81ea\u5b9a\u4e49\u8017\u65f6\u68c0\u67e5\uff0c\u8c03\u7528StrictMode.noteSlowCall public class TaskExecutor { private static long SLOW_CALL_THRESHOLD = 500; public void executeTask(Runnable task) { long startTime = SystemClock.uptimeMillis(); task.run(); long cost = SystemClock.uptimeMillis() - startTime; if (cost > SLOW_CALL_THRESHOLD) { StrictMode.noteSlowCall(\"slowCall cost=\" + cost); } } } penaltyDeath()\uff0c\u5f53\u89e6\u53d1\u8fdd\u89c4\u6761\u4ef6\u65f6\uff0c\u76f4\u63a5Crash\u6389\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u3002 penaltyDeathOnNetwork()\uff0c\u5f53\u89e6\u53d1\u7f51\u7edc\u8fdd\u89c4\u65f6\uff0cCrash\u6389\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u3002 penaltyDialog()\uff0c\u89e6\u53d1\u8fdd\u89c4\u65f6\uff0c\u663e\u793a\u5bf9\u8fdd\u89c4\u4fe1\u606f\u5bf9\u8bdd\u6846\u3002 penaltyFlashScreen()\uff0c\u4f1a\u9020\u6210\u5c4f\u5e55\u95ea\u70c1\uff0c\u4e0d\u8fc7\u4e00\u822c\u7684\u8bbe\u5907\u53ef\u80fd\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd\u3002 penaltyDropBox()\uff0c\u5c06\u8fdd\u89c4\u4fe1\u606f\u8bb0\u5f55\u5230 dropbox \u7cfb\u7edf\u65e5\u5fd7\u76ee\u5f55\u4e2d\uff08/data/system/dropbox\uff09\u3002 permitCustomSlowCalls()\u3001permitDiskReads ()\u3001permitDiskWrites()\u3001permitNetwork \u5982\u679c\u4f60\u60f3\u5173\u95ed\u67d0\u4e00\u9879\u68c0\u6d4b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5e94\u7684permit*\u65b9\u6cd5\u3002 VmPolicy\u865a\u62df\u673a\u7b56\u7565\u68c0\u6d4b \u68c0\u67e5 Activity \u7684\u5185\u5b58\u6cc4\u9732\u60c5\u51b5 \u4f7f\u7528detectActivityLeaks()\u5f00\u542f \u68c0\u67e5\u8d44\u6e90\u6ca1\u6709\u6b63\u786e\u5173\u95ed\u65f6\u63d0\u9192 \u4f7f\u7528detectLeakedClosableObjects()\u5f00\u542f \u6cc4\u9732\u7684Sqlite\u5bf9\u8c61 \u4f7f\u7528detectLeakedSqlLiteObjects()\u5f00\u542f \u6ce8\u518c\u7c7b\u5bf9\u8c61\u662f\u5426\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5982BroadcastReceiver \u6216 ServiceConnection\uff0c\u4f7f\u7528detectLeakedRegistrationObjects()\u5f00\u542f \u68c0\u6d4b\u5b9e\u4f8b\u6570\u91cf\uff0c\u53ef\u4ee5\u534f\u52a9\u68c0\u67e5\u5185\u5b58\u6cc4\u9732\uff0c\u4f7f\u7528setClassInstanceLimit()\u5f00\u542f boolean DEV_MODE = true; public void onCreate() { if (DEV_MODE) { StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder() .detectLeakedSqlLiteObjects() .detectLeakedClosableObjects() //API\u7b49\u7ea711 .penaltyLog() .penaltyDeath() .build()) } super.onCreate() } \u539f\u7406 StrictMode\u5b9e\u73b0\u539f\u7406\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u76f8\u5173\u7684\u4ee3\u7801\u70b9\u63d2\u5165\u68c0\u6d4b\u4ee3\u7801\uff0c\u6839\u636e\u7b56\u7565\u505a\u68c0\u67e5\u3002 \u4ee5IO\u64cd\u4f5c\u4e3a\u4f8b\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u5728open\uff0cread\uff0cwrite\uff0cclose\u65f6\u8fdb\u884c\u76d1\u63a7\u3002libcore.io.BlockGuardOs\u6587\u4ef6\u5c31\u662f\u76d1\u63a7\u7684\u5730\u65b9\u3002 \u4ee5write\u4e3a\u4f8b\uff0c\u5982\u4e0b\u8fdb\u884c\u76d1\u63a7\uff1a @Override public int pwrite(FileDescriptor fd, ByteBuffer buffer, long offset) { BlockGuard.getThreadPolicy().onWriteToDisk(); return os.pwrite(fd, buffer, offset); } \u5176\u4e2donReadFromDisk()\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u4ee3\u7801\u4f4d\u4e8eStrictMode.java\u4e2d // Part of BlockGuard.Policy interface: public void onReadFromDisk() { if ((mPolicyMask & DETECT_DISK_READ) == 0) { return; } if (tooManyViolationsThisLoop()) { return; } startHandlingViolationException(new DiskReadViolation()); } \u6ce8\u610f\u4e8b\u9879 \u53ea\u5728\u5f00\u53d1\u9636\u6bb5\u542f\u7528StrictMode\uff0c\u53d1\u5e03\u5e94\u7528\u6216\u8005release\u7248\u672c\u4e00\u5b9a\u8981\u7981\u7528\u5b83\u3002 \u4e25\u683c\u6a21\u5f0f\u65e0\u6cd5\u76d1\u63a7JNI\u4e2d\u7684\u78c1\u76d8IO\u548c\u7f51\u7edc\u8bf7\u6c42\u3002 \u5e94\u7528\u4e2d\u5e76\u975e\u9700\u8981\u89e3\u51b3\u5168\u90e8\u7684\u8fdd\u4f8b\u60c5\u51b5\uff0c\u6bd4\u5982\u6709\u4e9bIO\u64cd\u4f5c\u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u3002","title":"StrictMode"},{"location":"strictMode/#threadpolicy","text":"\u81ea\u5b9a\u4e49\u7684\u8017\u65f6\u8c03\u7528 \u4f7f\u7528detectCustomSlowCalls()\u5f00\u542f\uff0c\u9488\u5bf9\u6267\u884c\u6bd4\u8f83\u8017\u65f6\u7684\u68c0\u67e5 \u78c1\u76d8\u8bfb\u53d6\u64cd\u4f5c \u4f7f\u7528detectDiskReads()\u5f00\u542f\uff0c\u7528\u4e8e\u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u4e2d\u662f\u5426\u6709\u78c1\u76d8\u8bfb\u53d6\u64cd\u4f5c \u78c1\u76d8\u5199\u5165\u64cd\u4f5c \u4f7f\u7528detectDiskWrites()\u5f00\u542f\uff0c\u7528\u4e8e\u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u4e2d\u662f\u5426\u6709\u78c1\u76d8\u5199\u5165\u64cd\u4f5c \u7f51\u7edc\u64cd\u4f5c \u4f7f\u7528detectNetwork()\u5f00\u542f\uff0c\u7528\u4e8e\u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u4e2d\u662f\u5426\u6709\u7f51\u7edc\u8bf7\u6c42\u64cd\u4f5c ThreadPolicy\u5728\u54ea\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u8fc7\uff0c\u5c31\u5728\u54ea\u4e2a\u7ebf\u7a0b\u68c0\u6d4b\u3002 boolean DEV_MODE = true; public void onCreate() { if (DEV_MODE) { StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder() .detectCustomSlowCalls() //API\u7b49\u7ea711\uff0c\u4f7f\u7528StrictMode.noteSlowCode .detectDiskReads() .detectDiskWrites() .detectNetwork() .penaltyDialog() //\u5f39\u51fa\u8fdd\u89c4\u63d0\u793a\u5bf9\u8bdd\u6846 .penaltyLog() //\u5728Logcat\u4e2d\u6253\u5370\u8fdd\u89c4\u5f02\u5e38\u4fe1\u606f .penaltyFlashScreen() //\u5c4f\u5e55\u95ea\u70c1 .build()) } super.onCreate() } \u81ea\u5b9a\u4e49\u8017\u65f6\u68c0\u67e5\uff0c\u8c03\u7528StrictMode.noteSlowCall public class TaskExecutor { private static long SLOW_CALL_THRESHOLD = 500; public void executeTask(Runnable task) { long startTime = SystemClock.uptimeMillis(); task.run(); long cost = SystemClock.uptimeMillis() - startTime; if (cost > SLOW_CALL_THRESHOLD) { StrictMode.noteSlowCall(\"slowCall cost=\" + cost); } } } penaltyDeath()\uff0c\u5f53\u89e6\u53d1\u8fdd\u89c4\u6761\u4ef6\u65f6\uff0c\u76f4\u63a5Crash\u6389\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u3002 penaltyDeathOnNetwork()\uff0c\u5f53\u89e6\u53d1\u7f51\u7edc\u8fdd\u89c4\u65f6\uff0cCrash\u6389\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u3002 penaltyDialog()\uff0c\u89e6\u53d1\u8fdd\u89c4\u65f6\uff0c\u663e\u793a\u5bf9\u8fdd\u89c4\u4fe1\u606f\u5bf9\u8bdd\u6846\u3002 penaltyFlashScreen()\uff0c\u4f1a\u9020\u6210\u5c4f\u5e55\u95ea\u70c1\uff0c\u4e0d\u8fc7\u4e00\u822c\u7684\u8bbe\u5907\u53ef\u80fd\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd\u3002 penaltyDropBox()\uff0c\u5c06\u8fdd\u89c4\u4fe1\u606f\u8bb0\u5f55\u5230 dropbox \u7cfb\u7edf\u65e5\u5fd7\u76ee\u5f55\u4e2d\uff08/data/system/dropbox\uff09\u3002 permitCustomSlowCalls()\u3001permitDiskReads ()\u3001permitDiskWrites()\u3001permitNetwork \u5982\u679c\u4f60\u60f3\u5173\u95ed\u67d0\u4e00\u9879\u68c0\u6d4b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5e94\u7684permit*\u65b9\u6cd5\u3002","title":"ThreadPolicy\u7ebf\u7a0b\u7b56\u7565\u68c0\u6d4b"},{"location":"strictMode/#vmpolicy","text":"\u68c0\u67e5 Activity \u7684\u5185\u5b58\u6cc4\u9732\u60c5\u51b5 \u4f7f\u7528detectActivityLeaks()\u5f00\u542f \u68c0\u67e5\u8d44\u6e90\u6ca1\u6709\u6b63\u786e\u5173\u95ed\u65f6\u63d0\u9192 \u4f7f\u7528detectLeakedClosableObjects()\u5f00\u542f \u6cc4\u9732\u7684Sqlite\u5bf9\u8c61 \u4f7f\u7528detectLeakedSqlLiteObjects()\u5f00\u542f \u6ce8\u518c\u7c7b\u5bf9\u8c61\u662f\u5426\u88ab\u6b63\u786e\u91ca\u653e\uff0c\u5982BroadcastReceiver \u6216 ServiceConnection\uff0c\u4f7f\u7528detectLeakedRegistrationObjects()\u5f00\u542f \u68c0\u6d4b\u5b9e\u4f8b\u6570\u91cf\uff0c\u53ef\u4ee5\u534f\u52a9\u68c0\u67e5\u5185\u5b58\u6cc4\u9732\uff0c\u4f7f\u7528setClassInstanceLimit()\u5f00\u542f boolean DEV_MODE = true; public void onCreate() { if (DEV_MODE) { StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder() .detectLeakedSqlLiteObjects() .detectLeakedClosableObjects() //API\u7b49\u7ea711 .penaltyLog() .penaltyDeath() .build()) } super.onCreate() }","title":"VmPolicy\u865a\u62df\u673a\u7b56\u7565\u68c0\u6d4b"},{"location":"strictMode/#_1","text":"StrictMode\u5b9e\u73b0\u539f\u7406\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u76f8\u5173\u7684\u4ee3\u7801\u70b9\u63d2\u5165\u68c0\u6d4b\u4ee3\u7801\uff0c\u6839\u636e\u7b56\u7565\u505a\u68c0\u67e5\u3002 \u4ee5IO\u64cd\u4f5c\u4e3a\u4f8b\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u5728open\uff0cread\uff0cwrite\uff0cclose\u65f6\u8fdb\u884c\u76d1\u63a7\u3002libcore.io.BlockGuardOs\u6587\u4ef6\u5c31\u662f\u76d1\u63a7\u7684\u5730\u65b9\u3002 \u4ee5write\u4e3a\u4f8b\uff0c\u5982\u4e0b\u8fdb\u884c\u76d1\u63a7\uff1a @Override public int pwrite(FileDescriptor fd, ByteBuffer buffer, long offset) { BlockGuard.getThreadPolicy().onWriteToDisk(); return os.pwrite(fd, buffer, offset); } \u5176\u4e2donReadFromDisk()\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u4ee3\u7801\u4f4d\u4e8eStrictMode.java\u4e2d // Part of BlockGuard.Policy interface: public void onReadFromDisk() { if ((mPolicyMask & DETECT_DISK_READ) == 0) { return; } if (tooManyViolationsThisLoop()) { return; } startHandlingViolationException(new DiskReadViolation()); }","title":"\u539f\u7406"},{"location":"strictMode/#_2","text":"\u53ea\u5728\u5f00\u53d1\u9636\u6bb5\u542f\u7528StrictMode\uff0c\u53d1\u5e03\u5e94\u7528\u6216\u8005release\u7248\u672c\u4e00\u5b9a\u8981\u7981\u7528\u5b83\u3002 \u4e25\u683c\u6a21\u5f0f\u65e0\u6cd5\u76d1\u63a7JNI\u4e2d\u7684\u78c1\u76d8IO\u548c\u7f51\u7edc\u8bf7\u6c42\u3002 \u5e94\u7528\u4e2d\u5e76\u975e\u9700\u8981\u89e3\u51b3\u5168\u90e8\u7684\u8fdd\u4f8b\u60c5\u51b5\uff0c\u6bd4\u5982\u6709\u4e9bIO\u64cd\u4f5c\u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"tcpdump/","text":"tcpdump\u7528\u4e8e\u624b\u673a\u7f51\u7edc\u7684\u6293\u5305\u5de5\u5177 * \u9700\u8981\u624b\u673aroot \u4e0b\u8f7d\u5730\u5740\uff1a http://www.strazzere.com/android/tcpdump \u6b65\u9aa4\uff1a 1. \u4e0b\u8f7dtcpdump 2. \u4e0a\u4f20\u5230\u624b\u673a /data/local/tmp\u76ee\u5f55\u4e0b 3. \u4fee\u6539\u6743\u9650 chmod +x tcpdump 4. \u542f\u52a8tcpdump\u6293\u5305 tcpdump -p -vv -s 0 -w /sdcard/1.pcap tcpdump -p -vv -s 0 'port 1111' -w /sdcard/1.pcap Ctrl+C\u7ed3\u675f\u6293\u5305 \u5bfc\u51fa\u6293\u5305\u6570\u636e\u6587\u4ef6 \u4f7f\u7528Charles\u6216\u8005WireShark\u5206\u6790\u6293\u5305\u6570\u636e \u66f4\u591atcpdump\u547d\u4ee4\u53c2\u6570\u8bf7\u53c2\u8003\uff1a https://blog.csdn.net/hzhsan/article/details/43445787","title":"tcpdump"},{"location":"threadLocal/","text":"","title":"threadLocal"},{"location":"touchEventDispatch/","text":"1\u3001\u4e3b\u8981\u4e8b\u4ef6\u7c7b\u578b\uff1a \u4e8b\u4ef6 \u89e6\u53d1 \u6b21\u6570 MotionEvent.ACTION_DOWN \u6309\u4e0bView\uff08\u6240\u6709\u4e8b\u4ef6\u7684\u5f00\u59cb\uff09 \u53d1\u751f\u4e00\u6b21 MotionEvent.ACTION_UP \u62ac\u8d77View\uff08\u4e0eDOWN\u5bf9\u5e94\uff09 \u53d1\u751f\u4e00\u6b21 MotionEvent.ACTION_MOVE \u6ed1\u52a8View \u53d1\u751f\u591a\u6b21 MotionEvent.ACTION_CANCEL \u7ed3\u675f\u4e8b\u4ef6\uff08\u975e\u4eba\u4e3a\u539f\u56e0\uff09 \u53d1\u751f\u4e00\u6b21 2\u3001\u4e8b\u4ef6\u5206\u53d1\u8fc7\u7a0b\u7531\u54ea\u4e9b\u65b9\u6cd5\u534f\u4f5c\u5b8c\u6210\uff1f |\u65b9\u6cd5|\u4f5c\u7528|\u8c03\u7528\u65f6\u673a| |---|---|---| |dispatchTouchEvent|\u9010\u5c42\u5206\u53d1\u4e8b\u4ef6|\u4e8b\u4ef6\u88ab\u4f20\u9012\u5230\u65f6\u8c03\u7528| |onInterceptTouchEvent|\u5224\u65ad\u662f\u5426\u8981\u62e6\u622a\u67d0\u4e2a\u4e8b\u4ef6\uff0c \u53ea\u5728ViewGroup\u4e2d\u5b58\u5728 |\u5728ViewGroup\u7684|dispatchTouchEvent\u4e2d\u8c03\u7528| |onTouchEvent|\u5904\u7406\u4e8b\u4ef6| 3\u3001\u6d41\u7a0b\u56fe 4\u3001\u6e90\u7801\u7b80\u6790 \u7b2c\u4e00\u5c42\uff1aActivity #Activity public boolean dispatchTouchEvent(MotionEvent ev) { // \u4e00\u822c\u4e8b\u4ef6\u5217\u5f00\u59cb\u90fd\u662fDOWN\u4e8b\u4ef6\uff0c\u6545\u6b64\u5904\u57fa\u672c\u662ftrue if (ev.getAction() == MotionEvent.ACTION_DOWN) { onUserInteraction(); // ->>\u5206\u67901 } // ->>\u5206\u67902 if (getWindow().superDispatchTouchEvent(ev)) { return true; // \u82e5getWindow().superDispatchTouchEvent(ev)\u7684\u8fd4\u56detrue // \u4e8b\u4ef6\u5206\u53d1\u8fc7\u7a0b\u7ed3\u675f\u3002 } // \u5982\u679c\u4e0a\u4e00\u6b65\u8fd4\u56defalse\uff0c\u6700\u540e\u8c03\u7528Activity#onTouchEvent\u6765\u5904\u7406\u4e8b\u4ef6 // ->>\u5206\u67903 return onTouchEvent(ev); } #Activity // ->>\u5206\u67901 public void onUserInteraction() { //\u8be5\u65b9\u6cd5\u9ed8\u8ba4\u4e3a\u7a7a\u65b9\u6cd5\uff0c\u4e00\u822c\u53ef\u7528\u6765\u5b9e\u73b0\u5c4f\u4fdd\u529f\u80fd\uff0c\u5f53\u7528\u6237\u548c\u5c4f\u5e55\u6709\u4ea4\u4e92\u65f6\uff0c\u6b64\u65b9\u6cd5\u88ab\u8c03\u7528 } #Window // ->>\u5206\u67902 @Override public boolean superDispatchTouchEvent(MotionEvent event) { //\u8c03\u5230DecorView\u4e2d return mDecor.superDispatchTouchEvent(event); } #DecorView public boolean superDispatchTouchEvent(MotionEvent event) { // \u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 = ViewGroup\u7684dispatchTouchEvent // \u5373\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230ViewGroup\u53bb\u5904\u7406 // ->>\u5206\u67904 return super.dispatchTouchEvent(event); } #Activity // ->>\u5206\u67903 //\u4e8b\u4ef6\u6700\u540e\u7684\u5904\u7406\u8005 public boolean onTouchEvent(MotionEvent event) { // ->> \u5206\u67905 //shouldCloseOnTouch\u65f6\u7ed3\u675factivity if (mWindow.shouldCloseOnTouch(this, event)) { finish(); return true; } return false;//\u9ed8\u8ba4\u4e0d\u5904\u7406\uff0c\u8fd4\u56defalse } public boolean shouldCloseOnTouch(Context context, MotionEvent event) { // \u4e3b\u8981\u662f\u5bf9\u4e8e\u5904\u7406window\u8fb9\u754c\u5916\u70b9\u51fb\u4e8b\u4ef6\u7684\u5224\u65ad if (mCloseOnTouchOutside && event.getAction() == MotionEvent.ACTION_DOWN && isOutOfBounds(context, event) && peekDecorView() != null) { return true; } return false; } \u7b2c\u4e8c\u5c42\uff1aViewGroup public boolean dispatchTouchEvent(MotionEvent ev) { //\u5bf9DOWN\u4e8b\u4ef6\u7279\u6b8a\u5bf9\u5f85\uff1f if (action == MotionEvent.ACTION_DOWN) { if (disallowIntercept || !onInterceptTouchEvent(ev)) { // \u5224\u65ad\u503c1\uff1adisallowIntercept=\u662f\u5426\u7981\u7528\u4e8b\u4ef6\u62e6\u622a\u7684\u529f\u80fd(\u9ed8\u8ba4\u662ffalse)\uff0c\u53ef\u901a\u8fc7\u8c03\u7528requestDisallowInterceptTouchEvent\u4fee\u6539 // \u5224\u65ad\u503c2\uff1a\u8c03\u7528onInterceptTouchEvent\u5224\u65ad\u662f\u5426\u62e6\u622a\u6b64\u4e8b\u4ef6 final View[] children = mChildren; final int count = mChildrenCount; //\u904d\u5386child for (int i = count - 1; i >= 0; i--) { final View child = children[i]; //\u5224\u8bfbchild\u53ef\u89c1\u6027 if ((child.mViewFlags & VISIBILITY_MASK) == VISIBLE || child.getAnimation() != null) { //\u5224\u65ad\u70b9\u51fb\u4f4d\u7f6e\u662f\u5426\u5728child\u8986\u76d6\u8303\u56f4\u5185 if (frame.contains(scrolledXInt, scrolledYInt)) { //\u8ba9child\u505a\u4e8b\u4ef6\u5206\u53d1 if (child.dispatchTouchEvent(ev)) { //\u627e\u5230\u6d88\u8d39\u6389\u4e8b\u4ef6\u7684\u90a3\u4e2achild\u4e86\uff0c\u8bb0\u5f55\u4e0b\u6765\u540e\uff0c //\u540e\u7eed\u4e8b\u4ef6\u90fd\u76f4\u63a5\u53d1\u7ed9\u5b83\uff0c\u4e0d\u518d\u7ed9\u5176\u4ed6child\u673a\u4f1a\u4e86 mMotionTarget = child; return true; } } } } } } final View target = mMotionTarget; if (target == null) {//\u5982\u679c\u4e4b\u524d\u6ca1\u6709child\u5bf9\u4e8b\u4ef6\u611f\u5174\u8da3 ev.setLocation(xf, yf); //\u8c03\u7528View\u7684dispatchTouchEvent\u65b9\u6cd5 return super.dispatchTouchEvent(ev); } //\u5230\u8fd9\u91cc\uff0c\u8868\u793a\u4e4b\u524d\u6709\u4e00\u4e2aView\u5bf9\u89e6\u6478\u4e8b\u4ef6\u611f\u5174\u8da3 //\u662f\u5426\u662f\u8981\u7ed3\u675f\u7684\u4e8b\u4ef6 boolean isUpOrCancel = (action == MotionEvent.ACTION_UP) || (action == MotionEvent.ACTION_CANCEL); // if have a target, see if we're allowed to and want to intercept its // events if (!disallowIntercept && onInterceptTouchEvent(ev)) { //\u4e8b\u4ef6\u76f4\u63a5\u4ea4\u7ed9target\u5904\u7406 if (!target.dispatchTouchEvent(ev)) { } // clear the target mMotionTarget = null; //\u7ed3\u675f\u4e8b\u4ef6\u5206\u53d1 return true; } if (isUpOrCancel) { mMotionTarget = null; } //\u4e8b\u4ef6\u8fd8\u662f\u76f4\u63a5\u4ea4\u7ed9target\u5904\u7406 return target.dispatchTouchEvent(ev); } public boolean onInterceptTouchEvent(MotionEvent ev) { //\u9ed8\u8ba4\u4e0d\u62e6\u622a return false; } \u7b2c\u4e09\u5c42\uff1aView \u8fd9\u91ccView\u65e2\u53ef\u4ee5\u662f\u7b2c\u4e8c\u5c42\u7684ViewGroup\uff0c\u4e5f\u53ef\u4ee5\u662fViewGroup\u4e2d\u7684Child public boolean dispatchTouchEvent(MotionEvent event) { if (mOnTouchListener != null && (mViewFlags & ENABLED_MASK) == ENABLED && mOnTouchListener.onTouch(this, event)) { return true; } //\u5148\u7ed9TouchListener\u5904\u7406\u7684\u673a\u4f1a\uff0c\u7136\u540e\u624d\u8f6e\u5230\u81ea\u8eab\u7684onTouchEvent return onTouchEvent(event); } onInterceptTouchEvent\uff1a \u5982\u679c\u8fd4\u56de\u503c\u662ftrue\uff0c\u4ee3\u8868\u4e8b\u4ef6\u5728\u5f53\u524d\u7684viewGroup\u4e2d\u4f1a\u88ab\u5904\u7406\uff0c\u5411\u4e0b\u4f20\u9012\u4e4b\u8def\u88ab\u622a\u65ad\uff0c\u540c\u65f6\u628a\u4e8b\u4ef6\u4f20\u9012\u7ed9\u5f53\u524d\u7684\u63a7\u4ef6\u7684onTouchEvent()\u7ee7\u7eed\u8fdb\u884c\u4f20\u9012\u6216\u5904\u7406\u3002 \u5982\u679c\u8fd4\u56de\u503c\u662ffalse\uff0c\u5373\u4e0d\u62e6\u622a\u5f53\u524d\u4f20\u9012\u6765\u7684\u4e8b\u4ef6\uff0c\u4f1a\u7ee7\u7eed\u5411\u4e0b\u4f20\u9012\uff0c\u628a\u4e8b\u4ef6\u4ea4\u7ed9\u5b50\u63a7\u4ef6\u7684onInterceptTouchEvent()\u3002 onTouchEvent\uff1a \u5982\u679c\u8fd4\u56de\u503c\u662ftrue\uff0c\u8868\u793a\u6d88\u8d39(consume)\u4e86\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u4ee5ACTION_DOWN\u4e3a\u4f8b\uff0c\u5982\u679c\u67d0\u4e2a\u63a7\u4ef6\u7684onTouchEvent\u8fd4\u56de\u503c\u4e3atrue\uff0c\u5219\u540e\u7eed\u7684n\u4e2aACTION_MOVE\u4e0e1\u4e2aACTION_UP\u90fd\u4f1a\u9010\u5c42\u4f20\u9012\u5230\u8fd9\u4e2a\u63a7\u4ef6\u7684onTouchEvent\u8fdb\u884c\u5904\u7406\u3002 \u5982\u679c\u8fd4\u56de\u503c\u662ffalse\uff0c\u5219\u4f1a\u5c06ACTION_DOWN\u4f20\u9012\u7ed9\u5176\u7236ViewGroup\u7684onTouchEvent\u8fdb\u884c\u5904\u7406\uff0c\u76f4\u5230\u7531\u54ea\u4e00\u5c42ViewGroup\u6d88\u8d39\u4e86ACTION_DOWN\u4e8b\u4ef6\u4e3a\u6b62\u3002","title":"\u89e6\u6478\u4e8b\u4ef6\u5206\u53d1"},{"location":"ui/","text":"swxxxdp\uff0c\u5373small width\u7684\u7f29\u5199\uff0c\u5176\u4e0d\u533a\u5206\u65b9\u5411\uff0c\u5373\u65e0\u8bba\u662f\u5bbd\u5ea6\u8fd8\u662f\u9ad8\u5ea6\uff0c\u53ea\u8981\u5927\u4e8e xxxdp\uff0c\u5c31\u91c7\u7528\u6b21\u6b64\u5e03\u5c40\u3002 \u4f8b\u5b50\uff1a\u4f7f\u7528\u4e86layout-sw600dp\u7684\u6700\u5c0f\u5bbd\u5ea6\u9650\u5b9a\u7b26\uff0c\u5373\u65e0\u8bba\u662f\u5bbd\u5ea6\u8fd8\u662f\u9ad8\u5ea6\uff0c\u53ea\u8981\u5927\u4e8e600dp\uff0c\u5c31\u91c7\u7528layout-sw600dp\u76ee\u5f55\u4e0b\u7684\u5e03\u5c40","title":"Ui"},{"location":"volatile/","text":"volatile \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 \u7ebf\u7a0b\u540c\u6b65 \u673a\u5236\u3002\u5b83\u7684\u7279\u6027\u4e4b\u4e00\uff0c\u662f\u4fdd\u8bc1\u4e86\u53d8\u91cf\u5728\u7ebf\u7a0b\u4e4b\u95f4\u7684 \u53ef\u89c1\u6027 \uff0c\u5e76\u4e0d\u4fdd\u8bc1\u66f4\u65b0\u7684\u539f\u5b50\u6027\u3002 volatile \u4e3b\u8981\u5bf9\u6240\u4fee\u9970\u7684\u53d8\u91cf\u63d0\u4f9b\u4e24\u4e2a\u529f\u80fd\uff1a * \u53ef\u89c1\u6027 * \u9632\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f 1\u3001\u53ef\u89c1\u6027 Java\u5185\u5b58\u6a21\u578b(JMM)\u4e0a\uff1a * \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58 * \u6240\u6709\u7ebf\u7a0b\u5171\u7528\u4e00\u4e2a\u4e3b\u5b58 * \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u5c06\u5171\u4eab\u6570\u636e\u4ece\u4e3b\u5185\u5b58\u62f7\u8d1d\u81f3\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u5171\u4eab\u53d8\u91cf\u53ef\u89c1\u6027\u7684\u95ee\u9898\uff1f \u8fd9\u662f\u56e0\u4e3a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5fc5\u987b\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58\u4e2d\u8fdb\u884c\uff0c\u4e0d\u80fd\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u5199\uff1b\u800c\u4e14\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u5176\u5b83\u7ebf\u7a0b\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\uff0c\u7ebf\u7a0b\u95f4\u53d8\u91cf\u503c\u7684\u4f20\u9012\u9700\u8981\u901a\u8fc7\u4e3b\u5185\u5b58\u6765\u5b8c\u6210\u3002 \u5b8c\u6210\u53ef\u89c1\u6027\uff0c\u5fc5\u987b\u8981\u7ecf\u8fc7\u5982\u4e0b\u4e24\u4e2a\u6b65\u9aa4\uff1a 1. \u628a\u5de5\u4f5c\u5185\u5b581\u4e2d\u66f4\u65b0\u8fc7\u7684\u5171\u4eab\u53d8\u91cf\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b 2. \u628a\u5185\u5b58\u4e2d\u6700\u65b0\u7684\u5171\u4eab\u53d8\u91cf\u7684\u503c\u66f4\u65b0\u5230\u5de5\u4f5c\u5185\u5b582\u4e2d\uff1b Java\u8bed\u8a00\u5c42\u9762\u652f\u6301\u7684\u53ef\u89c1\u6027\u5b9e\u73b0\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a 1. synchronized 2. volatile synchronized\u4e0d\u4ec5\u80fd\u901a\u8fc7\u4e92\u65a5\u9501\u6765\u5b9e\u73b0\u540c\u6b65\uff0c\u800c\u4e14\u8fd8\u80fd\u591f\u5b9e\u73b0\u53ef\u89c1\u6027\u3002Java\u5185\u5b58\u6a21\u578b\u5173\u4e8esynchronized\u6709\u4e24\u6761\u89c4\u5b9a\uff1a * \u7ebf\u7a0b\u91ca\u653e\u9501\u4e4b\u524d\uff0cJMM\u4f1a\u5c06\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u5171\u4eab\u53d8\u91cf\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b * \u7ebf\u7a0b\u52a0\u9501\u65f6\uff0c\u5c06\u6e05\u7a7a\u5de5\u4f5c\u5185\u5b58\u4e2d\u5171\u4eab\u53d8\u91cf\u7684\u503c\uff0c\u4ece\u800c\u4f7f\u7528\u5171\u4eab\u53d8\u91cf\u65f6\u9700\u8981\u4ece\u4e3b\u5185\u5b58\u4e2d\u91cd\u65b0\u8bfb\u53d6\u6700\u65b0\u7684\u503c\uff1b \u7ebf\u7a0b\u6267\u884c\u4e92\u65a5\u4ee3\u7801\u7684\u8fc7\u7a0b\uff1a 1. \u83b7\u53d6\u76d1\u89c6\u5668\u9501 2. \u6e05\u7a7a\u5de5\u4f5c\u5185\u5b58 3. \u4ece\u4e3b\u5185\u5b58\u4e2d\u62f7\u8d1d\u53d8\u91cf\u7684\u6700\u65b0\u526f\u672c\u5230\u5de5\u4f5c\u5185\u5b58 4. \u6267\u884c\u4ee3\u7801 5. \u5c06\u66f4\u6539\u540e\u7684\u5171\u4eab\u53d8\u91cf\u7684\u503c\u5237\u65b0\u5230\u4e3b\u5185\u5b58 6. \u91ca\u653e\u76d1\u89c6\u5668\u9501 \u5176\u4e2dvolatile\u662f\u6bd4synchronized\u66f4\u8f7b\u91cf\u7684\u65b9\u6848\u3002 \u88abvolatile\u4fee\u9970\u7684\u53d8\u91cf\u5728\u4fee\u6539\u540e\uff0c\u4f1a\u7acb\u5373\u5199\u4f1a\u4e3b\u5185\u5b58\uff0c\u540c\u65f6\u88ab\u5176\u4ed6\u7ebf\u7a0b\u611f\u77e5\u5230\uff0c\u5e76\u91cd\u65b0\u4ece\u4e3b\u5185\u5b58\u62f7\u8d1d\uff0c\u83b7\u5f97\u6700\u65b0\u4fee\u6539\u503c\uff0c\u4ece\u800c\u907f\u514d\u6570\u636e\u810f\u8bfb\u3002 \u5177\u4f53\u6765\u8bf4\uff1a * \u5bf9volatile\u53d8\u91cf\u6267\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u4f1a\u5728\u5199\u64cd\u4f5c\u540e\u52a0\u5165\u4e00\u6761 store\u5c4f\u969c\u6307\u4ee4 \uff0c\u8fd9\u6837\u5c31\u4f1a\u628a\u8bfb\u5199\u65f6\u7684\u6570\u636e\u7f13\u5b58\u52a0\u8f7d\u5230\u4e3b\u5185\u5b58\u4e2d * \u5bf9volatile\u53d8\u91cf\u6267\u884c\u8bfb\u64cd\u4f5c\u65f6\uff0c\u4f1a\u5728\u8bfb\u64cd\u4f5c\u524d\u52a0\u5165\u4e00\u6761 load\u5c4f\u969c\u6307\u4ee4 \uff0c\u8fd9\u6837\u5c31\u4f1a\u4ece\u4e3b\u5185\u5b58\u4e2d\u52a0\u8f7d\u53d8\u91cf \u6240\u4ee5\u8bf4\uff0cvolatile\u53d8\u91cf\u6bcf\u6b21\u88ab\u7ebf\u7a0b \u4fee\u6539 \u65f6\uff0c\u4f1a\u88ab\u5f3a\u8feb\u5199\u56de\u4e3b\u5185\u5b58\uff0c\u800c\u6bcf\u6b21\u88ab\u7ebf\u7a0b \u8bbf\u95ee \u65f6\uff0c\u90fd\u5f3a\u8feb\u4ece\u4e3b\u5185\u5b58\u4e2d\u91cd\u8bfb\u8be5\u53d8\u91cf\u7684\u503c\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e0d\u540c\u7684\u7ebf\u7a0b\u603b\u80fd\u770b\u5230\u8be5\u53d8\u91cf\u7684\u6700\u65b0\u503c\u3002 \u7ebf\u7a0b\u5199volatile\u53d8\u91cf\u7684\u8fc7\u7a0b\uff1a 1. \u6539\u53d8\u7ebf\u7a0b\u5de5\u4f5c\u5185\u5b58\u4e2dvolatile\u53d8\u91cf\u526f\u672c\u7684\u503c\uff1b 2. \u5c06\u6539\u53d8\u540e\u7684\u526f\u672c\u7684\u503c\u4ece\u5de5\u4f5c\u5185\u5b58\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b \u7ebf\u7a0b\u8bfbvolatile\u53d8\u91cf\u7684\u8fc7\u7a0b\uff1a 1. \u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u53d6volatile\u53d8\u91cf\u7684\u6700\u65b0\u503c\u5230\u7ebf\u7a0b\u7684\u5de5\u4f5c\u5185\u5b58\u4e2d\uff1b 2. \u4ece\u5de5\u4f5c\u5185\u5b58\u4e2d\u8bfb\u53d6volatile\u53d8\u91cf\u7684\u526f\u672c Java\u5185\u5b58\u6a21\u578b\u4e5f\u89c4\u5b9a\u4e86\u5de5\u4f5c\u5185\u5b58\u4e0e\u4e3b\u5185\u5b58\u4e4b\u95f4\u4ea4\u4e92\u7684\u534f\u8bae\uff0c\u5b9a\u4e49\u4e868\u79cd \u539f\u5b50\u64cd\u4f5c : (1) lock:\u5c06\u4e3b\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u9501\u5b9a\uff0c\u4e3a\u4e00\u4e2a\u7ebf\u7a0b\u6240\u72ec\u5360 (2) unclock:\u5c06lock\u52a0\u7684\u9501\u5b9a\u89e3\u9664\uff0c\u6b64\u65f6\u5176\u5b83\u7684\u7ebf\u7a0b\u53ef\u4ee5\u6709\u673a\u4f1a\u8bbf\u95ee\u6b64\u53d8\u91cf (3) read:\u5c06\u4e3b\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u503c\u8bfb\u5230\u5de5\u4f5c\u5185\u5b58\u5f53\u4e2d (4) load:\u5c06read\u8bfb\u53d6\u7684\u503c\u4fdd\u5b58\u5230\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u526f\u672c\u4e2d (5) use:\u5c06\u503c\u4f20\u9012\u7ed9\u7ebf\u7a0b\u7684\u4ee3\u7801\u6267\u884c\u5f15\u64ce (6) assign:\u5c06\u6267\u884c\u5f15\u64ce\u5904\u7406\u8fd4\u56de\u7684\u503c\u91cd\u65b0\u8d4b\u503c\u7ed9\u53d8\u91cf\u526f\u672c (7) store:\u5c06\u53d8\u91cf\u526f\u672c\u7684\u503c\u5b58\u50a8\u5230\u4e3b\u5185\u5b58\u4e2d (8) write:\u5c06store\u5b58\u50a8\u7684\u503c\u5199\u5165\u5230\u4e3b\u5185\u5b58\u7684\u5171\u4eab\u53d8\u91cf\u5f53\u4e2d 2\u3001\u6307\u4ee4\u91cd\u6392 \u6307\u4ee4\u91cd\u6392\u5e8f\u662fJVM\u4e3a\u4e86\u4f18\u5316\u6307\u4ee4\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\uff0c\u5728\u4e0d\u5f71\u54cd \u5355\u7ebf\u7a0b \u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5730\u63d0\u9ad8\u5e76\u884c\u5ea6\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4e00\u4e9b\u64cd\u4f5c\u6307\u4ee4\u8fdb\u884c\u4e86\u91cd\u65b0\u6392\u5e8f\u3002\u5728\u591a\u7ebf\u7a0b\u4e0b\uff0c\u6307\u4ee4\u91cd\u6392\u5c06\u4f1a\u7ed9\u6211\u4eec\u7684\u7a0b\u5e8f\u5e26\u6765\u4e0d\u786e\u5b9a\u7684\u7ed3\u679c\u3002 \u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u5bf9\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\u7684\u7a0b\u5e8f\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\uff0c\u8fd9\u91cc\u7684\u4f9d\u8d56\u6027\u4ec5\u4ec5\u6307\u5355\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u7684\u6570\u636e\u4f9d\u8d56\u6027\u3002 \u5728\u7ebf\u7a0bA\u4e2d: context = loadContext(); contextReady = true; \u5728\u7ebf\u7a0bB\u4e2d: while(!contextReady){ sleep(100); } \u5728\u5355\u7ebf\u7a0b\u6a21\u5f0f\u4e0b, loadContext\u548ccontextReady\u5e76\u6ca1\u6709\u4f9d\u8d56\u6027\uff0c\u6240\u4ee5\u53ef\u80fd\u53d1\u751f\u6307\u4ee4\u91cd\u6392\u5e8f\uff0c\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u6837\uff1a contextReady = true; context = loadContext(); \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u591a\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\uff0c\u6307\u4ee4\u91cd\u6392\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u7684\u903b\u8f91\uff0c\u4ea7\u751f\u4e0d\u786e\u5b9a\u6267\u884c\u7ed3\u679c\u3002 \u88ab volatile \u4fee\u9970\u7684\u53d8\u91cf\uff0cJVM\u4f1a\u4e3a\u6211\u4eec\u505a\u4e24\u4ef6\u4e8b\uff1a 1\u3001\u5728\u6bcf\u4e2avolatile\u5199\u64cd\u4f5c\u524d\u63d2\u5165 StoreStore \u5c4f\u969c\uff0c\u5728\u5199\u64cd\u4f5c\u540e\u63d2\u5165 StoreLoad \u5c4f\u969c\u3002 2\u3001\u5728\u6bcf\u4e2avolatile\u8bfb\u64cd\u4f5c\u524d\u63d2\u5165 LoadLoad \u5c4f\u969c\uff0c\u5728\u8bfb\u64cd\u4f5c\u540e\u63d2\u5165 LoadStore \u5c4f\u969c\u3002 JVM\u7f16\u8bd1\u5668 \u9075\u5faa\u5185\u5b58\u5c4f\u969c\u7684\u7ea6\u675f \uff0c\u8fd0\u884c\u65f6\u4f9d\u9760 CPU\u5c4f\u969c\u6307\u4ee4 \u6765\u9632\u6b62\u6307\u4ee4\u91cd\u6392\u3002 \u5199\u7ebf\u7a0b\uff1a volatile boolean contextReady = false; context = loadContext(); contextReady = true; ##store\u5c4f\u969c\u6307\u4ee4## \u8bfb\u7ebf\u7a0b\uff1a while(##load\u5c4f\u969c\u6307\u4ee4## !contextReady){ sleep(100); } \u7efc\u4e0a\u6765\u770b\uff0c volatile \u6838\u5fc3\u539f\u7406\u662f \u5185\u5b58\u5c4f\u969c\u6307\u4ee4 , \u5c4f\u969c\u6307\u4ee4\u65e2\u89e3\u51b3\u53ef\u89c1\u6027\u95ee\u9898\uff0c\u53c8\u9632\u6b62JVM\u6307\u4ee4\u91cd\u6392\u3002","title":"Volatile"},{"location":"volatile/#1","text":"Java\u5185\u5b58\u6a21\u578b(JMM)\u4e0a\uff1a * \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58 * \u6240\u6709\u7ebf\u7a0b\u5171\u7528\u4e00\u4e2a\u4e3b\u5b58 * \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u5c06\u5171\u4eab\u6570\u636e\u4ece\u4e3b\u5185\u5b58\u62f7\u8d1d\u81f3\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u5171\u4eab\u53d8\u91cf\u53ef\u89c1\u6027\u7684\u95ee\u9898\uff1f \u8fd9\u662f\u56e0\u4e3a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5fc5\u987b\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u5185\u5b58\u4e2d\u8fdb\u884c\uff0c\u4e0d\u80fd\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u5199\uff1b\u800c\u4e14\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u5176\u5b83\u7ebf\u7a0b\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\uff0c\u7ebf\u7a0b\u95f4\u53d8\u91cf\u503c\u7684\u4f20\u9012\u9700\u8981\u901a\u8fc7\u4e3b\u5185\u5b58\u6765\u5b8c\u6210\u3002 \u5b8c\u6210\u53ef\u89c1\u6027\uff0c\u5fc5\u987b\u8981\u7ecf\u8fc7\u5982\u4e0b\u4e24\u4e2a\u6b65\u9aa4\uff1a 1. \u628a\u5de5\u4f5c\u5185\u5b581\u4e2d\u66f4\u65b0\u8fc7\u7684\u5171\u4eab\u53d8\u91cf\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b 2. \u628a\u5185\u5b58\u4e2d\u6700\u65b0\u7684\u5171\u4eab\u53d8\u91cf\u7684\u503c\u66f4\u65b0\u5230\u5de5\u4f5c\u5185\u5b582\u4e2d\uff1b Java\u8bed\u8a00\u5c42\u9762\u652f\u6301\u7684\u53ef\u89c1\u6027\u5b9e\u73b0\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a 1. synchronized 2. volatile synchronized\u4e0d\u4ec5\u80fd\u901a\u8fc7\u4e92\u65a5\u9501\u6765\u5b9e\u73b0\u540c\u6b65\uff0c\u800c\u4e14\u8fd8\u80fd\u591f\u5b9e\u73b0\u53ef\u89c1\u6027\u3002Java\u5185\u5b58\u6a21\u578b\u5173\u4e8esynchronized\u6709\u4e24\u6761\u89c4\u5b9a\uff1a * \u7ebf\u7a0b\u91ca\u653e\u9501\u4e4b\u524d\uff0cJMM\u4f1a\u5c06\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u5171\u4eab\u53d8\u91cf\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b * \u7ebf\u7a0b\u52a0\u9501\u65f6\uff0c\u5c06\u6e05\u7a7a\u5de5\u4f5c\u5185\u5b58\u4e2d\u5171\u4eab\u53d8\u91cf\u7684\u503c\uff0c\u4ece\u800c\u4f7f\u7528\u5171\u4eab\u53d8\u91cf\u65f6\u9700\u8981\u4ece\u4e3b\u5185\u5b58\u4e2d\u91cd\u65b0\u8bfb\u53d6\u6700\u65b0\u7684\u503c\uff1b \u7ebf\u7a0b\u6267\u884c\u4e92\u65a5\u4ee3\u7801\u7684\u8fc7\u7a0b\uff1a 1. \u83b7\u53d6\u76d1\u89c6\u5668\u9501 2. \u6e05\u7a7a\u5de5\u4f5c\u5185\u5b58 3. \u4ece\u4e3b\u5185\u5b58\u4e2d\u62f7\u8d1d\u53d8\u91cf\u7684\u6700\u65b0\u526f\u672c\u5230\u5de5\u4f5c\u5185\u5b58 4. \u6267\u884c\u4ee3\u7801 5. \u5c06\u66f4\u6539\u540e\u7684\u5171\u4eab\u53d8\u91cf\u7684\u503c\u5237\u65b0\u5230\u4e3b\u5185\u5b58 6. \u91ca\u653e\u76d1\u89c6\u5668\u9501 \u5176\u4e2dvolatile\u662f\u6bd4synchronized\u66f4\u8f7b\u91cf\u7684\u65b9\u6848\u3002 \u88abvolatile\u4fee\u9970\u7684\u53d8\u91cf\u5728\u4fee\u6539\u540e\uff0c\u4f1a\u7acb\u5373\u5199\u4f1a\u4e3b\u5185\u5b58\uff0c\u540c\u65f6\u88ab\u5176\u4ed6\u7ebf\u7a0b\u611f\u77e5\u5230\uff0c\u5e76\u91cd\u65b0\u4ece\u4e3b\u5185\u5b58\u62f7\u8d1d\uff0c\u83b7\u5f97\u6700\u65b0\u4fee\u6539\u503c\uff0c\u4ece\u800c\u907f\u514d\u6570\u636e\u810f\u8bfb\u3002 \u5177\u4f53\u6765\u8bf4\uff1a * \u5bf9volatile\u53d8\u91cf\u6267\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u4f1a\u5728\u5199\u64cd\u4f5c\u540e\u52a0\u5165\u4e00\u6761 store\u5c4f\u969c\u6307\u4ee4 \uff0c\u8fd9\u6837\u5c31\u4f1a\u628a\u8bfb\u5199\u65f6\u7684\u6570\u636e\u7f13\u5b58\u52a0\u8f7d\u5230\u4e3b\u5185\u5b58\u4e2d * \u5bf9volatile\u53d8\u91cf\u6267\u884c\u8bfb\u64cd\u4f5c\u65f6\uff0c\u4f1a\u5728\u8bfb\u64cd\u4f5c\u524d\u52a0\u5165\u4e00\u6761 load\u5c4f\u969c\u6307\u4ee4 \uff0c\u8fd9\u6837\u5c31\u4f1a\u4ece\u4e3b\u5185\u5b58\u4e2d\u52a0\u8f7d\u53d8\u91cf \u6240\u4ee5\u8bf4\uff0cvolatile\u53d8\u91cf\u6bcf\u6b21\u88ab\u7ebf\u7a0b \u4fee\u6539 \u65f6\uff0c\u4f1a\u88ab\u5f3a\u8feb\u5199\u56de\u4e3b\u5185\u5b58\uff0c\u800c\u6bcf\u6b21\u88ab\u7ebf\u7a0b \u8bbf\u95ee \u65f6\uff0c\u90fd\u5f3a\u8feb\u4ece\u4e3b\u5185\u5b58\u4e2d\u91cd\u8bfb\u8be5\u53d8\u91cf\u7684\u503c\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e0d\u540c\u7684\u7ebf\u7a0b\u603b\u80fd\u770b\u5230\u8be5\u53d8\u91cf\u7684\u6700\u65b0\u503c\u3002 \u7ebf\u7a0b\u5199volatile\u53d8\u91cf\u7684\u8fc7\u7a0b\uff1a 1. \u6539\u53d8\u7ebf\u7a0b\u5de5\u4f5c\u5185\u5b58\u4e2dvolatile\u53d8\u91cf\u526f\u672c\u7684\u503c\uff1b 2. \u5c06\u6539\u53d8\u540e\u7684\u526f\u672c\u7684\u503c\u4ece\u5de5\u4f5c\u5185\u5b58\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b \u7ebf\u7a0b\u8bfbvolatile\u53d8\u91cf\u7684\u8fc7\u7a0b\uff1a 1. \u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u53d6volatile\u53d8\u91cf\u7684\u6700\u65b0\u503c\u5230\u7ebf\u7a0b\u7684\u5de5\u4f5c\u5185\u5b58\u4e2d\uff1b 2. \u4ece\u5de5\u4f5c\u5185\u5b58\u4e2d\u8bfb\u53d6volatile\u53d8\u91cf\u7684\u526f\u672c Java\u5185\u5b58\u6a21\u578b\u4e5f\u89c4\u5b9a\u4e86\u5de5\u4f5c\u5185\u5b58\u4e0e\u4e3b\u5185\u5b58\u4e4b\u95f4\u4ea4\u4e92\u7684\u534f\u8bae\uff0c\u5b9a\u4e49\u4e868\u79cd \u539f\u5b50\u64cd\u4f5c : (1) lock:\u5c06\u4e3b\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u9501\u5b9a\uff0c\u4e3a\u4e00\u4e2a\u7ebf\u7a0b\u6240\u72ec\u5360 (2) unclock:\u5c06lock\u52a0\u7684\u9501\u5b9a\u89e3\u9664\uff0c\u6b64\u65f6\u5176\u5b83\u7684\u7ebf\u7a0b\u53ef\u4ee5\u6709\u673a\u4f1a\u8bbf\u95ee\u6b64\u53d8\u91cf (3) read:\u5c06\u4e3b\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u503c\u8bfb\u5230\u5de5\u4f5c\u5185\u5b58\u5f53\u4e2d (4) load:\u5c06read\u8bfb\u53d6\u7684\u503c\u4fdd\u5b58\u5230\u5de5\u4f5c\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u526f\u672c\u4e2d (5) use:\u5c06\u503c\u4f20\u9012\u7ed9\u7ebf\u7a0b\u7684\u4ee3\u7801\u6267\u884c\u5f15\u64ce (6) assign:\u5c06\u6267\u884c\u5f15\u64ce\u5904\u7406\u8fd4\u56de\u7684\u503c\u91cd\u65b0\u8d4b\u503c\u7ed9\u53d8\u91cf\u526f\u672c (7) store:\u5c06\u53d8\u91cf\u526f\u672c\u7684\u503c\u5b58\u50a8\u5230\u4e3b\u5185\u5b58\u4e2d (8) write:\u5c06store\u5b58\u50a8\u7684\u503c\u5199\u5165\u5230\u4e3b\u5185\u5b58\u7684\u5171\u4eab\u53d8\u91cf\u5f53\u4e2d","title":"1\u3001\u53ef\u89c1\u6027"},{"location":"volatile/#2","text":"\u6307\u4ee4\u91cd\u6392\u5e8f\u662fJVM\u4e3a\u4e86\u4f18\u5316\u6307\u4ee4\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\uff0c\u5728\u4e0d\u5f71\u54cd \u5355\u7ebf\u7a0b \u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5730\u63d0\u9ad8\u5e76\u884c\u5ea6\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4e00\u4e9b\u64cd\u4f5c\u6307\u4ee4\u8fdb\u884c\u4e86\u91cd\u65b0\u6392\u5e8f\u3002\u5728\u591a\u7ebf\u7a0b\u4e0b\uff0c\u6307\u4ee4\u91cd\u6392\u5c06\u4f1a\u7ed9\u6211\u4eec\u7684\u7a0b\u5e8f\u5e26\u6765\u4e0d\u786e\u5b9a\u7684\u7ed3\u679c\u3002 \u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u5bf9\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\u7684\u7a0b\u5e8f\u6307\u4ee4\u8fdb\u884c\u91cd\u6392\uff0c\u8fd9\u91cc\u7684\u4f9d\u8d56\u6027\u4ec5\u4ec5\u6307\u5355\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u7684\u6570\u636e\u4f9d\u8d56\u6027\u3002 \u5728\u7ebf\u7a0bA\u4e2d: context = loadContext(); contextReady = true; \u5728\u7ebf\u7a0bB\u4e2d: while(!contextReady){ sleep(100); } \u5728\u5355\u7ebf\u7a0b\u6a21\u5f0f\u4e0b, loadContext\u548ccontextReady\u5e76\u6ca1\u6709\u4f9d\u8d56\u6027\uff0c\u6240\u4ee5\u53ef\u80fd\u53d1\u751f\u6307\u4ee4\u91cd\u6392\u5e8f\uff0c\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u6837\uff1a contextReady = true; context = loadContext(); \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u591a\u7ebf\u7a0b\u6a21\u5f0f\u4e0b\uff0c\u6307\u4ee4\u91cd\u6392\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u7684\u903b\u8f91\uff0c\u4ea7\u751f\u4e0d\u786e\u5b9a\u6267\u884c\u7ed3\u679c\u3002 \u88ab volatile \u4fee\u9970\u7684\u53d8\u91cf\uff0cJVM\u4f1a\u4e3a\u6211\u4eec\u505a\u4e24\u4ef6\u4e8b\uff1a 1\u3001\u5728\u6bcf\u4e2avolatile\u5199\u64cd\u4f5c\u524d\u63d2\u5165 StoreStore \u5c4f\u969c\uff0c\u5728\u5199\u64cd\u4f5c\u540e\u63d2\u5165 StoreLoad \u5c4f\u969c\u3002 2\u3001\u5728\u6bcf\u4e2avolatile\u8bfb\u64cd\u4f5c\u524d\u63d2\u5165 LoadLoad \u5c4f\u969c\uff0c\u5728\u8bfb\u64cd\u4f5c\u540e\u63d2\u5165 LoadStore \u5c4f\u969c\u3002 JVM\u7f16\u8bd1\u5668 \u9075\u5faa\u5185\u5b58\u5c4f\u969c\u7684\u7ea6\u675f \uff0c\u8fd0\u884c\u65f6\u4f9d\u9760 CPU\u5c4f\u969c\u6307\u4ee4 \u6765\u9632\u6b62\u6307\u4ee4\u91cd\u6392\u3002 \u5199\u7ebf\u7a0b\uff1a volatile boolean contextReady = false; context = loadContext(); contextReady = true; ##store\u5c4f\u969c\u6307\u4ee4## \u8bfb\u7ebf\u7a0b\uff1a while(##load\u5c4f\u969c\u6307\u4ee4## !contextReady){ sleep(100); } \u7efc\u4e0a\u6765\u770b\uff0c volatile \u6838\u5fc3\u539f\u7406\u662f \u5185\u5b58\u5c4f\u969c\u6307\u4ee4 , \u5c4f\u969c\u6307\u4ee4\u65e2\u89e3\u51b3\u53ef\u89c1\u6027\u95ee\u9898\uff0c\u53c8\u9632\u6b62JVM\u6307\u4ee4\u91cd\u6392\u3002","title":"2\u3001\u6307\u4ee4\u91cd\u6392"},{"location":"websocket/","text":"","title":"Websocket"},{"location":"webview_bug/","text":"\u4efb\u610f\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e \u5bc6\u7801\u660e\u6587\u5b58\u50a8\u6f0f\u6d1e \u57df\u63a7\u5236\u4e0d\u4e25\u683c\u6f0f\u6d1e \u51fa\u73b0\u6f0f\u6d1e\u7684\u539f\u56e0\u6709\u4e09\u4e2a\uff1a WebView \u4e2d addJavascriptInterface\u63a5\u53e3 WebView \u5185\u7f6e\u5bfc\u51fa\u7684 searchBoxJavaBridge_\u5bf9\u8c61 WebView \u5185\u7f6e\u5bfc\u51fa\u7684 accessibility \u548c accessibilityTraversalObject \u5bf9\u8c61 1\u3001addJavascriptInterface\u63a5\u53e3\u5bfc\u81f4\u4efb\u610f\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e webView.addJavascriptInterface(new JSObject(), \"myObj\"); //\u901a\u8fc7\u5bf9\u8c61\u6620\u5c04\u5c06Android\u4e2d\u7684\u672c\u5730\u5bf9\u8c61\u548cJS\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u5173\u8054\uff0c\u4ece\u800c\u5b9e\u73b0JS\u8c03\u7528Android\u7684\u5bf9\u8c61\u548c\u65b9\u6cd5 \u6f0f\u6d1e\u4ea7\u751f\u539f\u56e0\u662f\uff1a\u5f53JS\u62ff\u5230Android\u8fd9\u4e2a\u5bf9\u8c61\u540e\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2aJava\u5bf9\u8c61\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u7cfb\u7edf\u7c7b\uff08java.lang.Runtime\uff09\uff0c\u4ece\u800c\u8fdb\u884c\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002 \u5177\u4f53\u7684\uff1aJava\u5bf9\u8c61\u6709\u516c\u5171\u65b9\u6cd5getClass()\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u5f53\u524d\u7c7b\u7684Class\u3002Class\u8fd8\u6709Class.forName\u65b9\u6cd5\uff0c\u53ef\u4ee5\u52a0\u8f7d\u4efb\u610f\u7c7b\uff0c\u5305\u62ecjava.lang.Runtime\uff0c\u4ece\u800c\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u672c\u5730linux\u547d\u4ee4\u3002 \u89e3\u51b3\uff1a Google \u5728Android 4.2 \u7248\u672c\u4e2d\u89c4\u5b9a\u5bf9\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4ee5 @JavascriptInterface\u8fdb\u884c\u6ce8\u89e3\u4ece\u800c\u907f\u514d\u6f0f\u6d1e\u653b\u51fb\u3002 2\u3001WebView\u9ed8\u8ba4\u5f00\u542f\u5bc6\u7801\u4fdd\u5b58\u529f\u80fd mWebView.setSavePassword(true) \u5f00\u542f\u540e\uff0c\u5728\u7528\u6237\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u4f1a\u5f39\u51fa\u63d0\u793a\u6846\uff1a\u8be2\u95ee\u7528\u6237\u662f\u5426\u4fdd\u5b58\u5bc6\u7801\uff1b \u5982\u679c\u9009\u62e9\u201d\u662f\u201d\uff0c\u5bc6\u7801\u4f1a\u88ab\u660e\u6587\u4fdd\u5230 /data/data/packageName/databases/webview.db \u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u88ab\u76d7\u53d6\u5bc6\u7801\u7684\u5371\u9669\u3002 \u89e3\u51b3\uff1a\u5173\u95ed\u5bc6\u7801\u4fdd\u5b58\u529f\u80fd 3\u3001\u52a0\u8f7dfile\u534f\u8bae\u7684url // \u8bbe\u7f6e\u662f\u5426\u5141\u8bb8 WebView \u4f7f\u7528 File \u534f\u8bae webView.getSettings().setAllowFileAccess(true); // \u9ed8\u8ba4\u4e3atrue\uff0c\u5373\u5141\u8bb8\u5728 File \u57df\u4e0b\u6267\u884c\u4efb\u610f JavaScript \u4ee3\u7801 \u4f7f\u7528 file \u57df\u52a0\u8f7d\u7684 js \u4ee3\u7801\u80fd\u591f\u4f7f\u7528\u8fdb\u884c\u540c\u6e90\u7b56\u7565\u8de8\u57df\u8bbf\u95ee\uff08\u6307\u7684\u662f\u5bf9\u79c1\u6709\u76ee\u5f55\u6587\u4ef6\u8fdb\u884c\u8bbf\u95ee\uff09\uff0c\u4ece\u800c\u5bfc\u81f4\u9690\u79c1\u4fe1\u606f\u6cc4\u9732\u3002 \u89e3\u51b3\uff1a //\u5173\u95edfile\u534f\u8bae\u652f\u6301 setAllowFileAccess(true); \u200b //\u5bf9\u4e8e\u786e\u5b9e\u9700\u8981file\u534f\u8bae\u7684\u9875\u9762\uff0c\u7981\u6b62\u52a0\u8f7d JavaScript if (url.startsWith(\"file://\") { setJavaScriptEnabled(false); } else { setJavaScriptEnabled(true); } \u53ea\u7981\u7528 javascript\u5e76\u4e0d\u80fd\u5b8c\u5168\u675c\u7edd\u6587\u4ef6\u6cc4\u9732\uff1a\u56e0\u4e3a\u5982\u679c\u5e94\u7528\u7684webview\u5b9e\u73b0\u4e86\u4e0b\u8f7d\u529f\u80fd\uff0c\u5bf9\u4e8e\u65e0\u6cd5\u52a0\u8f7d\u7684\u9875\u9762\uff0c\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5230 sd \u5361\u4e2d\uff1b\u653b\u51fb\u8005\u901a\u8fc7\u6784\u9020\u4e00\u4e2a file URL \u6307\u5411\u88ab\u653b\u51fb\u5e94\u7528\u7684\u6c99\u76d2\u5185\u6587\u4ef6\uff0c\u7136\u540e\u7528\u6b64 URL \u542f\u52a8\u88ab\u653b\u51fb\u5e94\u7528\u7684 WebView\uff0c\u8fd9\u6837\u7531\u4e8e\u8be5 WebView \u65e0\u6cd5\u52a0\u8f7d\u8be5\u6587\u4ef6\uff0c\u5c31\u4f1a\u5c06\u8be5\u6587\u4ef6\u4e0b\u8f7d\u5230 sd \u5361\u4e0b\u9762\uff0c\u9020\u6210\u6c99\u76d2\u6587\u4ef6\u6d41\u51fa\u3002","title":"\u6f0f\u6d1e"},{"location":"webview_bug/#1addjavascriptinterface","text":"webView.addJavascriptInterface(new JSObject(), \"myObj\"); //\u901a\u8fc7\u5bf9\u8c61\u6620\u5c04\u5c06Android\u4e2d\u7684\u672c\u5730\u5bf9\u8c61\u548cJS\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u5173\u8054\uff0c\u4ece\u800c\u5b9e\u73b0JS\u8c03\u7528Android\u7684\u5bf9\u8c61\u548c\u65b9\u6cd5 \u6f0f\u6d1e\u4ea7\u751f\u539f\u56e0\u662f\uff1a\u5f53JS\u62ff\u5230Android\u8fd9\u4e2a\u5bf9\u8c61\u540e\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2aJava\u5bf9\u8c61\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u7cfb\u7edf\u7c7b\uff08java.lang.Runtime\uff09\uff0c\u4ece\u800c\u8fdb\u884c\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002 \u5177\u4f53\u7684\uff1aJava\u5bf9\u8c61\u6709\u516c\u5171\u65b9\u6cd5getClass()\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u5f53\u524d\u7c7b\u7684Class\u3002Class\u8fd8\u6709Class.forName\u65b9\u6cd5\uff0c\u53ef\u4ee5\u52a0\u8f7d\u4efb\u610f\u7c7b\uff0c\u5305\u62ecjava.lang.Runtime\uff0c\u4ece\u800c\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u672c\u5730linux\u547d\u4ee4\u3002 \u89e3\u51b3\uff1a Google \u5728Android 4.2 \u7248\u672c\u4e2d\u89c4\u5b9a\u5bf9\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4ee5 @JavascriptInterface\u8fdb\u884c\u6ce8\u89e3\u4ece\u800c\u907f\u514d\u6f0f\u6d1e\u653b\u51fb\u3002","title":"1\u3001addJavascriptInterface\u63a5\u53e3\u5bfc\u81f4\u4efb\u610f\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e"},{"location":"webview_bug/#2webview","text":"mWebView.setSavePassword(true) \u5f00\u542f\u540e\uff0c\u5728\u7528\u6237\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u4f1a\u5f39\u51fa\u63d0\u793a\u6846\uff1a\u8be2\u95ee\u7528\u6237\u662f\u5426\u4fdd\u5b58\u5bc6\u7801\uff1b \u5982\u679c\u9009\u62e9\u201d\u662f\u201d\uff0c\u5bc6\u7801\u4f1a\u88ab\u660e\u6587\u4fdd\u5230 /data/data/packageName/databases/webview.db \u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u88ab\u76d7\u53d6\u5bc6\u7801\u7684\u5371\u9669\u3002 \u89e3\u51b3\uff1a\u5173\u95ed\u5bc6\u7801\u4fdd\u5b58\u529f\u80fd","title":"2\u3001WebView\u9ed8\u8ba4\u5f00\u542f\u5bc6\u7801\u4fdd\u5b58\u529f\u80fd"},{"location":"webview_bug/#3fileurl","text":"// \u8bbe\u7f6e\u662f\u5426\u5141\u8bb8 WebView \u4f7f\u7528 File \u534f\u8bae webView.getSettings().setAllowFileAccess(true); // \u9ed8\u8ba4\u4e3atrue\uff0c\u5373\u5141\u8bb8\u5728 File \u57df\u4e0b\u6267\u884c\u4efb\u610f JavaScript \u4ee3\u7801 \u4f7f\u7528 file \u57df\u52a0\u8f7d\u7684 js \u4ee3\u7801\u80fd\u591f\u4f7f\u7528\u8fdb\u884c\u540c\u6e90\u7b56\u7565\u8de8\u57df\u8bbf\u95ee\uff08\u6307\u7684\u662f\u5bf9\u79c1\u6709\u76ee\u5f55\u6587\u4ef6\u8fdb\u884c\u8bbf\u95ee\uff09\uff0c\u4ece\u800c\u5bfc\u81f4\u9690\u79c1\u4fe1\u606f\u6cc4\u9732\u3002 \u89e3\u51b3\uff1a //\u5173\u95edfile\u534f\u8bae\u652f\u6301 setAllowFileAccess(true); \u200b //\u5bf9\u4e8e\u786e\u5b9e\u9700\u8981file\u534f\u8bae\u7684\u9875\u9762\uff0c\u7981\u6b62\u52a0\u8f7d JavaScript if (url.startsWith(\"file://\") { setJavaScriptEnabled(false); } else { setJavaScriptEnabled(true); } \u53ea\u7981\u7528 javascript\u5e76\u4e0d\u80fd\u5b8c\u5168\u675c\u7edd\u6587\u4ef6\u6cc4\u9732\uff1a\u56e0\u4e3a\u5982\u679c\u5e94\u7528\u7684webview\u5b9e\u73b0\u4e86\u4e0b\u8f7d\u529f\u80fd\uff0c\u5bf9\u4e8e\u65e0\u6cd5\u52a0\u8f7d\u7684\u9875\u9762\uff0c\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5230 sd \u5361\u4e2d\uff1b\u653b\u51fb\u8005\u901a\u8fc7\u6784\u9020\u4e00\u4e2a file URL \u6307\u5411\u88ab\u653b\u51fb\u5e94\u7528\u7684\u6c99\u76d2\u5185\u6587\u4ef6\uff0c\u7136\u540e\u7528\u6b64 URL \u542f\u52a8\u88ab\u653b\u51fb\u5e94\u7528\u7684 WebView\uff0c\u8fd9\u6837\u7531\u4e8e\u8be5 WebView \u65e0\u6cd5\u52a0\u8f7d\u8be5\u6587\u4ef6\uff0c\u5c31\u4f1a\u5c06\u8be5\u6587\u4ef6\u4e0b\u8f7d\u5230 sd \u5361\u4e0b\u9762\uff0c\u9020\u6210\u6c99\u76d2\u6587\u4ef6\u6d41\u51fa\u3002","title":"3\u3001\u52a0\u8f7dfile\u534f\u8bae\u7684url"},{"location":"webview_cache/","text":"Webview\u81ea\u5e26\u7684\u7f13\u5b58\u673a\u5236\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd: \u6d4f\u89c8\u5668\u7f13\u5b58 APPlication Cache Dom Storage Web Sql Database Indexed Database File System \u7b2c\u4e00\u79cd\uff1a\u6d4f\u89c8\u5668\u7f13\u5b58\u673a\u5236 \u8fd9\u4e2a\u534f\u8bae\u4e3b\u8981\u662f\u524d\u7aef\u540c\u5b66\u8bbe\u7f6e\uff0c\u539f\u7406\u662f\uff1a \u6839\u636e HTTP \u534f\u8bae\u5934\u91cc\u7684 Cache-Control \uff08\u6216 Expires\uff09\u548c Last-Modified\uff08\u6216 Etag\uff09\u7b49\u5b57\u6bb5\u6765\u63a7\u5236\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u6587\u4ef6\u7f13\u5b58\u673a\u5236 Cache-Control \uff1a\u7528\u4e8e\u63a7\u5236\u6587\u4ef6\u5728\u672c\u5730\u7f13\u5b58\u6709\u6548\u65f6\u957f Cache-Control:max-age=600 \u8868\u793a\u6587\u4ef6\u5728\u672c\u5730\u5e94\u8be5\u7f13\u5b58\uff0c\u4e14\u6709\u6548\u65f6\u957f\u662f600\u79d2\uff08\u4ece\u53d1\u51fa\u8bf7\u6c42\u7b97\u8d77\uff09\u3002\u5728\u63a5\u4e0b\u6765600\u79d2\u5185\uff0c\u5982\u679c\u6709\u8bf7\u6c42\u8fd9\u4e2a\u8d44\u6e90\uff0c\u6d4f\u89c8\u5668\u4e0d\u4f1a\u53d1\u51fa HTTP \u8bf7\u6c42\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u7f13\u5b58\u7684\u6587\u4ef6 Expires \uff1a\u4e0eCache-Control\u529f\u80fd\u76f8\u540c\uff0c\u5373\u63a7\u5236\u7f13\u5b58\u7684\u6709\u6548\u65f6\u95f4 Expires:Tue,12 Jun 2018 16:39:54 GMT Expires\u662f HTTP1.0 \u6807\u51c6\u4e2d\u7684\u5b57\u6bb5\uff0cCache-Control \u662f HTTP1.1 \u6807\u51c6\u4e2d\u65b0\u52a0\u7684\u5b57\u6bb5\uff0c\u5f53\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u540c\u65f6\u51fa\u73b0\u65f6\uff0cCache-Control \u4f18\u5148\u7ea7\u8f83\u9ad8 Last-Modified \uff1a\u6807\u8bc6\u6587\u4ef6\u5728\u670d\u52a1\u5668\u4e0a\u7684\u6700\u65b0\u66f4\u65b0\u65f6\u95f4 Last-Modified:Tue,12 Jun 2018 16:39:54 GMT \u8fd9\u8868\u793a\u6587\u4ef6\u6700\u540e\u7684\u4fee\u6539\u65f6\u95f4 \u5728\u4e0b\u6b21\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u95f4\u5df2\u7ecf\u8d85\u8fc7\u4e86\u4e0a\u9762\u8fd9\u4e2a\u5b57\u6bb5\u7684\u65f6\u95f4\uff0c\u6d4f\u89c8\u5668\u901a\u8fc7 If-Modified-Since \u5b57\u6bb5\u5e26\u4e0a\u8fd9\u4e2a\u65f6\u95f4\uff0c\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u7531\u670d\u52a1\u5668\u6bd4\u8f83\u65f6\u95f4\u6233\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6709\u4fee\u6539\u3002\u5982\u679c\u6ca1\u6709\u4fee\u6539\uff0c\u670d\u52a1\u5668\u8fd4\u56de304\u544a\u8bc9\u6d4f\u89c8\u5668\u7ee7\u7eed\u4f7f\u7528\u7f13\u5b58\uff1b\u5982\u679c\u6709\u4fee\u6539\uff0c\u5219\u8fd4\u56de200\uff0c\u540c\u65f6\u8fd4\u56de\u6700\u65b0\u7684\u6587\u4ef6\u3002 Etag \uff1a\u529f\u80fd\u540cLast-Modified \uff0c\u5373\u6807\u8bc6\u6587\u4ef6\u5728\u670d\u52a1\u5668\u4e0a\u7684\u6700\u65b0\u66f4\u65b0\u65f6\u95f4 ETag:\"10df8c5f-110\" Etag \u53d6\u503c\u662f\u4e00\u4e2a\u5bf9\u6587\u4ef6\u8fdb\u884c\u6807\u8bc6\u7684\u7279\u5f81\u5b57\u4e32 \u5728\u5411\u670d\u52a1\u5668\u67e5\u8be2\u6587\u4ef6\u662f\u5426\u6709\u66f4\u65b0\u65f6\uff0c\u6d4f\u89c8\u5668\u901a\u8fc7If-None-Match \u5b57\u6bb5\u628a\u7279\u5f81\u5b57\u4e32\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u7531\u670d\u52a1\u5668\u548c\u6587\u4ef6\u6700\u65b0\u7279\u5f81\u5b57\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6709\u66f4\u65b0\uff1a\u6ca1\u6709\u66f4\u65b0\u56de\u5305304\uff0c\u6709\u66f4\u65b0\u56de\u5305200 \u5f52\u6839\u7ed3\u5e95\u5c31\u662f\u75282\u4e2a\u5b57\u6bb5\uff0c\u4e00\u4e2a\u7528\u4e8e\u63a7\u5236\u7f13\u5b58\u6709\u6548\u65f6\u95f4\uff0c\u4e00\u4e2a\u7528\u4e8e\u5728\u7f13\u5b58\u5931\u6548\u540e\uff0c\u5411\u670d\u52a1\u67e5\u8be2\u662f\u5426\u6709\u66f4\u65b0\u3002 \u7279\u522b\u6ce8\u610f\uff1a\u6d4f\u89c8\u5668\u7f13\u5b58\u673a\u5236\u662f\u6d4f\u89c8\u5668\u5185\u6838\u7684\u673a\u5236\uff0c\u4e00\u822c\u90fd\u662f\u6807\u51c6\u7684\u5b9e\u73b0 \u7b2c\u4e8c\u79cd\uff1aAPPlication Cache \u4ee5\u6587\u4ef6\u4e3a\u5355\u4f4d\u8fdb\u884c\u7f13\u5b58\uff0c\u4e14\u6587\u4ef6\u6709\u4e00\u5b9a\u66f4\u65b0\u673a\u5236\uff08\u662f\u5bf9\u6d4f\u89c8\u5668\u7f13\u5b58\u673a\u5236\u7684\u8865\u5145, \u539f\u7406\u76f8\u4f3c\uff09 \u662f\u4e00\u4e2a\u4e13\u95e8\u4e3aWeb App\u79bb\u7ebf\u4f7f\u7528\u7684\u7f13\u5b58\u673a\u5236 AppCache \u7684\u7f13\u5b58\u6587\u4ef6\u4e0e\u6d4f\u89c8\u5668\u7684\u7f13\u5b58\u6587\u4ef6\u662f\u5206\u5f00\u5b58\u50a8\u7684\uff0c\u56e0\u4e3a AppCache \u5728\u672c\u5730\u67095MB\u7684\u7a7a\u95f4\u9650\u5236 \u524d\u7aef\u5728\u6587\u6863\u7684 html \u6807\u8bb0\u4e2d\u6dfb\u52a0 manifest \u5c5e\u6027\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6: <!--https://\u57df\u540d/cache.manifest--> <html manifest=\"/cache.manifest\"> ... </html> \u4e00\u4e2a\u5178\u578b\u7684manifest\u6587\u4ef6\u683c\u5f0f\uff0c\u5305\u542b\u4e09\u90e8\u5206\u914d\u7f6e\uff1a CACHE MANIFEST - \u5728\u6b64\u6807\u9898\u4e0b\u5217\u51fa\u7684\u6587\u4ef6\u5c06\u5728\u9996\u6b21\u4e0b\u8f7d\u540e\u8fdb\u884c\u7f13\u5b58 NETWORK - \u5728\u6b64\u6807\u9898\u4e0b\u5217\u51fa\u7684\u6587\u4ef6\u9700\u8981\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u4e14\u4e0d\u4f1a\u88ab\u7f13\u5b58 FALLBACK - \u5728\u6b64\u6807\u9898\u4e0b\u5217\u51fa\u7684\u6587\u4ef6\u89c4\u5b9a\u5f53\u9875\u9762\u65e0\u6cd5\u8bbf\u95ee\u65f6\u7684\u56de\u9000\u9875\u9762\uff08\u6bd4\u5982 404 \u9875\u9762\uff09 \u683c\u5f0f\u4e3e\u4f8b\uff1a CACHE MANIFEST ## \u6ce8\u91ca\uff1a\u9700\u8981\u7f13\u5b58\u7684\u6587\u4ef6\uff0c\u65e0\u8bba\u5728\u7ebf\u4e0e\u5426\uff0c\u5747\u4ece\u7f13\u5b58\u91cc\u8bfb\u53d6 CACHE: chched.js cached.css # \u6ce8\u91ca\uff1a\u4e0d\u7f13\u5b58\u7684\u6587\u4ef6\uff0c\u65e0\u8bba\u7f13\u5b58\u4e2d\u5b58\u5728\u4e0e\u5426\uff0c\u5747\u4ece\u65b0\u83b7\u53d6 NETWORK: uncached.js uncached.css # \u6ce8\u91ca\uff1a\u83b7\u53d6\u4e0d\u5230\u8d44\u6e90\u65f6\u7684\u5907\u9009\u8def\u5f84\uff0c\u5982index.html\u8bbf\u95ee\u5931\u8d25\uff0c\u5219\u8fd4\u56de404\u9875\u9762 FALLBACK: index.html 404.html android\u5ba2\u6237\u7aefAppCache\u7f13\u5b58\u76ee\u5f55\u8bbe\u7f6e\uff1a //\u8bbe\u7f6e\u7f13\u5b58\u76ee\u5f55 mSetting.setAppCachePath(getCacheDir().getAbsolutePath()); //\u8bbe\u7f6e\u662f\u5426\u542f\u7528\u7f13\u5b58 mSetting.setAppCacheEnabled(true); //\u8bbe\u7f6e\u7f13\u5b58\u5927\u5c0f mSetting.setAppCacheMaxSize(20*1024*1024); \u7b2c\u4e09\u79cd Dom Storage \u901a\u8fc7\u5b58\u50a8\u5b57\u7b26\u4e32\u7684 Key - Value \u5bf9\u6765\u63d0\u4f9b\uff0c\u8be5\u5b58\u50a8\u673a\u5236\u548c\u670d\u52a1\u5668\u6ca1\u6709\u4ea4\u4e92\uff0c\u7c7b\u4f3c\u4e8e Android \u7684 SharedPreference \u5b58\u50a8\u673a\u5236\uff0c\u9002\u5408\u5b58\u50a8\u4e34\u65f6\u3001\u7b80\u5355\u7684\u6570\u636e\u3002\u63d0\u4f9b 5MB\uff08\u5206 HOST)\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 DOM Storage \u5206\u4e3a sessionStorage & localStorage\uff1b \u4e8c\u8005\u4f7f\u7528\u65b9\u6cd5\u57fa\u672c\u76f8\u540c\uff0c\u533a\u522b\u5728\u4e8e\u4f5c\u7528\u8303\u56f4\u4e0d\u540c\uff1a sessionStorage\uff1a\u5177\u5907\u4e34\u65f6\u6027\uff0c\u5373\u5b58\u50a8\u4e0e\u9875\u9762\u76f8\u5173\u7684\u6570\u636e\uff0c\u5b83\u5728\u9875\u9762\u5173\u95ed\u540e\u65e0\u6cd5\u4f7f\u7528 localStorage\uff1a\u5177\u5907\u6301\u4e45\u6027\uff0c\u5373\u4fdd\u5b58\u7684\u6570\u636e\u5728\u9875\u9762\u5173\u95ed\u540e\u4e0b\u6b21\u8fd8\u53ef\u4ee5\u4f7f\u7528 android\u5ba2\u6237\u7aefDOM Storage\u8bbe\u7f6e\uff1a // \u5f00\u542fDOM storage mSetting.setDomStorageEnabled(true); \u7b2c\u56db\u79cd Web Sql Database \u539f\u7406\u662f\u57fa\u4e8eSQL\u7684\u6570\u636e\u5e93\u5b58\u50a8\u4e00\u4e9b\u7ed3\u6784\u6027\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5bf9\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u67e5\uff0c\u73b0\u5728\u4e3b\u6d41\u6d4f\u89c8\u5668 SQL Database \u7684\u5b9e\u73b0\u90fd\u662f\u57fa\u4e8e SQLite\uff0c\u4f46\u8fd9\u79cd\u65b9\u5f0f\u5b98\u65b9\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u4e86\uff0cAndroid webview\u4f3c\u4e4e\u4e5f\u4e0d\u518d\u652f\u6301\uff0c\u540e\u7eed\u7248\u672c\u4e0d\u518d\u7ef4\u62a4\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662fIndexedDB\u7f13\u5b58\u673a\u5236\u3002 android\u5ba2\u6237\u7aefSql Database\u8bbe\u7f6e\uff1a mSetting.setDatabaseEnabled(true); String dbPath = getDir(\"db\", Context.MODE_PRIVATE).getPath(); mSetting.setDatabasePath(dbPath); \u7b2c\u4e94\u79cd Indexed Database \u662f\u4e00\u79cdNoSql\u6570\u636e\u5e93\uff0c\u4e5f\u4f7f\u7528key-value\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u76f8\u6bd4\u4e8edom\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u673a\u5236\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u652f\u6301index(\u7d22\u5f15)\u5feb\u901f\u67e5\u8be2\uff1b\u5b58\u50a8\u7a7a\u95f4\u66f4\u5927\uff0c\u9ed8\u8ba4\u63a8\u8350250M\uff0c\u6bd4dom\u76845M\u5927\u7684\u591a\u4e86\uff0c\u6bd4\u8f83\u9002\u5408\u590d\u6742\uff0c\u5927\u91cf\u7684\u7ed3\u6784\u5316\u6570\u636e\u5b58\u50a8 Android 4.4 \u5f15\u5165 IndexDB \u652f\u6301\uff0c\u5728\u5ba2\u6237\u7aef\u4e0a\u53ea\u7528\u8bbe\u7f6e\u5141\u8bb8js\uff0c\u5c31\u81ea\u52a8\u6253\u5f00\u4e86\u8fd9\u79cd\u7f13\u5b58\u673a\u5236 mSetting.setJavaScriptEnabled(true); \u7b2c\u516d\u79cd File System \u8fd9\u79cd\u673a\u5236\u662fH5\u65b0\u52a0\u5165\u7684\u5b58\u50a8\u673a\u5236\uff0c\u539f\u7406\u4e3aH5\u9875\u9762\u7684\u6570\u636e \u63d0\u4f9b\u4e00\u4e2a\u865a\u62df\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u76ee\u524dAndroid Webview\u6682\u65f6\u4e0d\u652f\u6301 \u53ef\u8fdb\u884c\u6587\u4ef6\u7684\u521b\u5efa\u3001\u8bfb\u3001\u5199\u3001\u5220\u9664\u3001\u904d\u5386\u7b49\u64cd\u4f5c\uff0c\u5c31\u50cf Native App \u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e00\u6837 \u865a\u62df\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u8fd0\u884c\u5728\u6c99\u76d2\u4e2d \u4e0d\u540c WebApp \u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u662f\u4e92\u76f8\u9694\u79bb\u7684\uff0c\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0e\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e5f\u662f\u4e92\u76f8\u9694\u79bb\u7684 android WebView\u7f13\u5b58\u7b56\u7565\u914d\u7f6e\uff1a LOAD_CACHE_ONLY\uff1a\u4e0d\u4f7f\u7528\u7f51\u7edc\uff0c\u53ea\u8bfb\u53d6\u672c\u5730\u7f13\u5b58\u6570\u636e LOAD_DEFAULT\uff1a\uff08\u9ed8\u8ba4\uff09\u6839\u636ecache-control\u51b3\u5b9a\u662f\u5426\u4ece\u7f51\u7edc\u4e0a\u53d6\u6570\u636e LOAD_NO_CACHE\uff1a\u4e0d\u4f7f\u7528\u7f13\u5b58\uff0c\u53ea\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e LOAD_CACHE_ELSE_NETWORK\uff1a\u53ea\u8981\u672c\u5730\u6709\uff0c\u65e0\u8bba\u662f\u5426\u8fc7\u671f\uff0c\u90fd\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u672c\u5730\u6ca1\u6709\u7f13\u5b58\u65f6\u624d\u4ece\u7f51\u7edc\u83b7\u53d6 //\u8bbe\u7f6e\u7f13\u5b58\u7b56\u7565 mSetting.setCacheMode(WebSettings.LOAD_DEFAULT); android webView\u7f13\u5b58\u8def\u5f84\uff1a android webView\u7f13\u5b58\u7684\u6e05\u7406\uff1a /** * Clears the storage currently being used by both the Application Cache and * Web SQL Database APIs by the given origin. The origin is specified using * its string representation. */ public void deleteOrigin(String origin) { // Must be a no-op for backward compatibility: see the hidden constructor for reason. } /** * Clears all storage currently being used by the JavaScript storage APIs. * This includes the Application Cache, Web SQL Database and the HTML5 Web * Storage APIs. */ public void deleteAllData() { // Must be a no-op for backward compatibility: see the hidden constructor for reason. }","title":"\u7f13\u5b58\u673a\u5236"},{"location":"webview_cache/#_1","text":"\u8fd9\u4e2a\u534f\u8bae\u4e3b\u8981\u662f\u524d\u7aef\u540c\u5b66\u8bbe\u7f6e\uff0c\u539f\u7406\u662f\uff1a \u6839\u636e HTTP \u534f\u8bae\u5934\u91cc\u7684 Cache-Control \uff08\u6216 Expires\uff09\u548c Last-Modified\uff08\u6216 Etag\uff09\u7b49\u5b57\u6bb5\u6765\u63a7\u5236\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u6587\u4ef6\u7f13\u5b58\u673a\u5236 Cache-Control \uff1a\u7528\u4e8e\u63a7\u5236\u6587\u4ef6\u5728\u672c\u5730\u7f13\u5b58\u6709\u6548\u65f6\u957f Cache-Control:max-age=600 \u8868\u793a\u6587\u4ef6\u5728\u672c\u5730\u5e94\u8be5\u7f13\u5b58\uff0c\u4e14\u6709\u6548\u65f6\u957f\u662f600\u79d2\uff08\u4ece\u53d1\u51fa\u8bf7\u6c42\u7b97\u8d77\uff09\u3002\u5728\u63a5\u4e0b\u6765600\u79d2\u5185\uff0c\u5982\u679c\u6709\u8bf7\u6c42\u8fd9\u4e2a\u8d44\u6e90\uff0c\u6d4f\u89c8\u5668\u4e0d\u4f1a\u53d1\u51fa HTTP \u8bf7\u6c42\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u7f13\u5b58\u7684\u6587\u4ef6 Expires \uff1a\u4e0eCache-Control\u529f\u80fd\u76f8\u540c\uff0c\u5373\u63a7\u5236\u7f13\u5b58\u7684\u6709\u6548\u65f6\u95f4 Expires:Tue,12 Jun 2018 16:39:54 GMT Expires\u662f HTTP1.0 \u6807\u51c6\u4e2d\u7684\u5b57\u6bb5\uff0cCache-Control \u662f HTTP1.1 \u6807\u51c6\u4e2d\u65b0\u52a0\u7684\u5b57\u6bb5\uff0c\u5f53\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u540c\u65f6\u51fa\u73b0\u65f6\uff0cCache-Control \u4f18\u5148\u7ea7\u8f83\u9ad8 Last-Modified \uff1a\u6807\u8bc6\u6587\u4ef6\u5728\u670d\u52a1\u5668\u4e0a\u7684\u6700\u65b0\u66f4\u65b0\u65f6\u95f4 Last-Modified:Tue,12 Jun 2018 16:39:54 GMT \u8fd9\u8868\u793a\u6587\u4ef6\u6700\u540e\u7684\u4fee\u6539\u65f6\u95f4 \u5728\u4e0b\u6b21\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u95f4\u5df2\u7ecf\u8d85\u8fc7\u4e86\u4e0a\u9762\u8fd9\u4e2a\u5b57\u6bb5\u7684\u65f6\u95f4\uff0c\u6d4f\u89c8\u5668\u901a\u8fc7 If-Modified-Since \u5b57\u6bb5\u5e26\u4e0a\u8fd9\u4e2a\u65f6\u95f4\uff0c\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u7531\u670d\u52a1\u5668\u6bd4\u8f83\u65f6\u95f4\u6233\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6709\u4fee\u6539\u3002\u5982\u679c\u6ca1\u6709\u4fee\u6539\uff0c\u670d\u52a1\u5668\u8fd4\u56de304\u544a\u8bc9\u6d4f\u89c8\u5668\u7ee7\u7eed\u4f7f\u7528\u7f13\u5b58\uff1b\u5982\u679c\u6709\u4fee\u6539\uff0c\u5219\u8fd4\u56de200\uff0c\u540c\u65f6\u8fd4\u56de\u6700\u65b0\u7684\u6587\u4ef6\u3002 Etag \uff1a\u529f\u80fd\u540cLast-Modified \uff0c\u5373\u6807\u8bc6\u6587\u4ef6\u5728\u670d\u52a1\u5668\u4e0a\u7684\u6700\u65b0\u66f4\u65b0\u65f6\u95f4 ETag:\"10df8c5f-110\" Etag \u53d6\u503c\u662f\u4e00\u4e2a\u5bf9\u6587\u4ef6\u8fdb\u884c\u6807\u8bc6\u7684\u7279\u5f81\u5b57\u4e32 \u5728\u5411\u670d\u52a1\u5668\u67e5\u8be2\u6587\u4ef6\u662f\u5426\u6709\u66f4\u65b0\u65f6\uff0c\u6d4f\u89c8\u5668\u901a\u8fc7If-None-Match \u5b57\u6bb5\u628a\u7279\u5f81\u5b57\u4e32\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u7531\u670d\u52a1\u5668\u548c\u6587\u4ef6\u6700\u65b0\u7279\u5f81\u5b57\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6709\u66f4\u65b0\uff1a\u6ca1\u6709\u66f4\u65b0\u56de\u5305304\uff0c\u6709\u66f4\u65b0\u56de\u5305200 \u5f52\u6839\u7ed3\u5e95\u5c31\u662f\u75282\u4e2a\u5b57\u6bb5\uff0c\u4e00\u4e2a\u7528\u4e8e\u63a7\u5236\u7f13\u5b58\u6709\u6548\u65f6\u95f4\uff0c\u4e00\u4e2a\u7528\u4e8e\u5728\u7f13\u5b58\u5931\u6548\u540e\uff0c\u5411\u670d\u52a1\u67e5\u8be2\u662f\u5426\u6709\u66f4\u65b0\u3002 \u7279\u522b\u6ce8\u610f\uff1a\u6d4f\u89c8\u5668\u7f13\u5b58\u673a\u5236\u662f\u6d4f\u89c8\u5668\u5185\u6838\u7684\u673a\u5236\uff0c\u4e00\u822c\u90fd\u662f\u6807\u51c6\u7684\u5b9e\u73b0","title":"\u7b2c\u4e00\u79cd\uff1a\u6d4f\u89c8\u5668\u7f13\u5b58\u673a\u5236"},{"location":"webview_cache/#application-cache","text":"\u4ee5\u6587\u4ef6\u4e3a\u5355\u4f4d\u8fdb\u884c\u7f13\u5b58\uff0c\u4e14\u6587\u4ef6\u6709\u4e00\u5b9a\u66f4\u65b0\u673a\u5236\uff08\u662f\u5bf9\u6d4f\u89c8\u5668\u7f13\u5b58\u673a\u5236\u7684\u8865\u5145, \u539f\u7406\u76f8\u4f3c\uff09 \u662f\u4e00\u4e2a\u4e13\u95e8\u4e3aWeb App\u79bb\u7ebf\u4f7f\u7528\u7684\u7f13\u5b58\u673a\u5236 AppCache \u7684\u7f13\u5b58\u6587\u4ef6\u4e0e\u6d4f\u89c8\u5668\u7684\u7f13\u5b58\u6587\u4ef6\u662f\u5206\u5f00\u5b58\u50a8\u7684\uff0c\u56e0\u4e3a AppCache \u5728\u672c\u5730\u67095MB\u7684\u7a7a\u95f4\u9650\u5236 \u524d\u7aef\u5728\u6587\u6863\u7684 html \u6807\u8bb0\u4e2d\u6dfb\u52a0 manifest \u5c5e\u6027\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6: <!--https://\u57df\u540d/cache.manifest--> <html manifest=\"/cache.manifest\"> ... </html> \u4e00\u4e2a\u5178\u578b\u7684manifest\u6587\u4ef6\u683c\u5f0f\uff0c\u5305\u542b\u4e09\u90e8\u5206\u914d\u7f6e\uff1a CACHE MANIFEST - \u5728\u6b64\u6807\u9898\u4e0b\u5217\u51fa\u7684\u6587\u4ef6\u5c06\u5728\u9996\u6b21\u4e0b\u8f7d\u540e\u8fdb\u884c\u7f13\u5b58 NETWORK - \u5728\u6b64\u6807\u9898\u4e0b\u5217\u51fa\u7684\u6587\u4ef6\u9700\u8981\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u4e14\u4e0d\u4f1a\u88ab\u7f13\u5b58 FALLBACK - \u5728\u6b64\u6807\u9898\u4e0b\u5217\u51fa\u7684\u6587\u4ef6\u89c4\u5b9a\u5f53\u9875\u9762\u65e0\u6cd5\u8bbf\u95ee\u65f6\u7684\u56de\u9000\u9875\u9762\uff08\u6bd4\u5982 404 \u9875\u9762\uff09 \u683c\u5f0f\u4e3e\u4f8b\uff1a CACHE MANIFEST ## \u6ce8\u91ca\uff1a\u9700\u8981\u7f13\u5b58\u7684\u6587\u4ef6\uff0c\u65e0\u8bba\u5728\u7ebf\u4e0e\u5426\uff0c\u5747\u4ece\u7f13\u5b58\u91cc\u8bfb\u53d6 CACHE: chched.js cached.css # \u6ce8\u91ca\uff1a\u4e0d\u7f13\u5b58\u7684\u6587\u4ef6\uff0c\u65e0\u8bba\u7f13\u5b58\u4e2d\u5b58\u5728\u4e0e\u5426\uff0c\u5747\u4ece\u65b0\u83b7\u53d6 NETWORK: uncached.js uncached.css # \u6ce8\u91ca\uff1a\u83b7\u53d6\u4e0d\u5230\u8d44\u6e90\u65f6\u7684\u5907\u9009\u8def\u5f84\uff0c\u5982index.html\u8bbf\u95ee\u5931\u8d25\uff0c\u5219\u8fd4\u56de404\u9875\u9762 FALLBACK: index.html 404.html android\u5ba2\u6237\u7aefAppCache\u7f13\u5b58\u76ee\u5f55\u8bbe\u7f6e\uff1a //\u8bbe\u7f6e\u7f13\u5b58\u76ee\u5f55 mSetting.setAppCachePath(getCacheDir().getAbsolutePath()); //\u8bbe\u7f6e\u662f\u5426\u542f\u7528\u7f13\u5b58 mSetting.setAppCacheEnabled(true); //\u8bbe\u7f6e\u7f13\u5b58\u5927\u5c0f mSetting.setAppCacheMaxSize(20*1024*1024);","title":"\u7b2c\u4e8c\u79cd\uff1aAPPlication Cache"},{"location":"webview_cache/#dom-storage","text":"\u901a\u8fc7\u5b58\u50a8\u5b57\u7b26\u4e32\u7684 Key - Value \u5bf9\u6765\u63d0\u4f9b\uff0c\u8be5\u5b58\u50a8\u673a\u5236\u548c\u670d\u52a1\u5668\u6ca1\u6709\u4ea4\u4e92\uff0c\u7c7b\u4f3c\u4e8e Android \u7684 SharedPreference \u5b58\u50a8\u673a\u5236\uff0c\u9002\u5408\u5b58\u50a8\u4e34\u65f6\u3001\u7b80\u5355\u7684\u6570\u636e\u3002\u63d0\u4f9b 5MB\uff08\u5206 HOST)\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 DOM Storage \u5206\u4e3a sessionStorage & localStorage\uff1b \u4e8c\u8005\u4f7f\u7528\u65b9\u6cd5\u57fa\u672c\u76f8\u540c\uff0c\u533a\u522b\u5728\u4e8e\u4f5c\u7528\u8303\u56f4\u4e0d\u540c\uff1a sessionStorage\uff1a\u5177\u5907\u4e34\u65f6\u6027\uff0c\u5373\u5b58\u50a8\u4e0e\u9875\u9762\u76f8\u5173\u7684\u6570\u636e\uff0c\u5b83\u5728\u9875\u9762\u5173\u95ed\u540e\u65e0\u6cd5\u4f7f\u7528 localStorage\uff1a\u5177\u5907\u6301\u4e45\u6027\uff0c\u5373\u4fdd\u5b58\u7684\u6570\u636e\u5728\u9875\u9762\u5173\u95ed\u540e\u4e0b\u6b21\u8fd8\u53ef\u4ee5\u4f7f\u7528 android\u5ba2\u6237\u7aefDOM Storage\u8bbe\u7f6e\uff1a // \u5f00\u542fDOM storage mSetting.setDomStorageEnabled(true);","title":"\u7b2c\u4e09\u79cd Dom Storage"},{"location":"webview_cache/#web-sql-database","text":"\u539f\u7406\u662f\u57fa\u4e8eSQL\u7684\u6570\u636e\u5e93\u5b58\u50a8\u4e00\u4e9b\u7ed3\u6784\u6027\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5bf9\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u67e5\uff0c\u73b0\u5728\u4e3b\u6d41\u6d4f\u89c8\u5668 SQL Database \u7684\u5b9e\u73b0\u90fd\u662f\u57fa\u4e8e SQLite\uff0c\u4f46\u8fd9\u79cd\u65b9\u5f0f\u5b98\u65b9\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u4e86\uff0cAndroid webview\u4f3c\u4e4e\u4e5f\u4e0d\u518d\u652f\u6301\uff0c\u540e\u7eed\u7248\u672c\u4e0d\u518d\u7ef4\u62a4\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662fIndexedDB\u7f13\u5b58\u673a\u5236\u3002 android\u5ba2\u6237\u7aefSql Database\u8bbe\u7f6e\uff1a mSetting.setDatabaseEnabled(true); String dbPath = getDir(\"db\", Context.MODE_PRIVATE).getPath(); mSetting.setDatabasePath(dbPath);","title":"\u7b2c\u56db\u79cd Web Sql Database"},{"location":"webview_cache/#indexed-database","text":"\u662f\u4e00\u79cdNoSql\u6570\u636e\u5e93\uff0c\u4e5f\u4f7f\u7528key-value\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u76f8\u6bd4\u4e8edom\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u673a\u5236\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\uff0c\u652f\u6301index(\u7d22\u5f15)\u5feb\u901f\u67e5\u8be2\uff1b\u5b58\u50a8\u7a7a\u95f4\u66f4\u5927\uff0c\u9ed8\u8ba4\u63a8\u8350250M\uff0c\u6bd4dom\u76845M\u5927\u7684\u591a\u4e86\uff0c\u6bd4\u8f83\u9002\u5408\u590d\u6742\uff0c\u5927\u91cf\u7684\u7ed3\u6784\u5316\u6570\u636e\u5b58\u50a8 Android 4.4 \u5f15\u5165 IndexDB \u652f\u6301\uff0c\u5728\u5ba2\u6237\u7aef\u4e0a\u53ea\u7528\u8bbe\u7f6e\u5141\u8bb8js\uff0c\u5c31\u81ea\u52a8\u6253\u5f00\u4e86\u8fd9\u79cd\u7f13\u5b58\u673a\u5236 mSetting.setJavaScriptEnabled(true);","title":"\u7b2c\u4e94\u79cd Indexed Database"},{"location":"webview_cache/#file-system","text":"\u8fd9\u79cd\u673a\u5236\u662fH5\u65b0\u52a0\u5165\u7684\u5b58\u50a8\u673a\u5236\uff0c\u539f\u7406\u4e3aH5\u9875\u9762\u7684\u6570\u636e \u63d0\u4f9b\u4e00\u4e2a\u865a\u62df\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u76ee\u524dAndroid Webview\u6682\u65f6\u4e0d\u652f\u6301 \u53ef\u8fdb\u884c\u6587\u4ef6\u7684\u521b\u5efa\u3001\u8bfb\u3001\u5199\u3001\u5220\u9664\u3001\u904d\u5386\u7b49\u64cd\u4f5c\uff0c\u5c31\u50cf Native App \u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e00\u6837 \u865a\u62df\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u8fd0\u884c\u5728\u6c99\u76d2\u4e2d \u4e0d\u540c WebApp \u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u662f\u4e92\u76f8\u9694\u79bb\u7684\uff0c\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0e\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e5f\u662f\u4e92\u76f8\u9694\u79bb\u7684 android WebView\u7f13\u5b58\u7b56\u7565\u914d\u7f6e\uff1a LOAD_CACHE_ONLY\uff1a\u4e0d\u4f7f\u7528\u7f51\u7edc\uff0c\u53ea\u8bfb\u53d6\u672c\u5730\u7f13\u5b58\u6570\u636e LOAD_DEFAULT\uff1a\uff08\u9ed8\u8ba4\uff09\u6839\u636ecache-control\u51b3\u5b9a\u662f\u5426\u4ece\u7f51\u7edc\u4e0a\u53d6\u6570\u636e LOAD_NO_CACHE\uff1a\u4e0d\u4f7f\u7528\u7f13\u5b58\uff0c\u53ea\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e LOAD_CACHE_ELSE_NETWORK\uff1a\u53ea\u8981\u672c\u5730\u6709\uff0c\u65e0\u8bba\u662f\u5426\u8fc7\u671f\uff0c\u90fd\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u672c\u5730\u6ca1\u6709\u7f13\u5b58\u65f6\u624d\u4ece\u7f51\u7edc\u83b7\u53d6 //\u8bbe\u7f6e\u7f13\u5b58\u7b56\u7565 mSetting.setCacheMode(WebSettings.LOAD_DEFAULT); android webView\u7f13\u5b58\u8def\u5f84\uff1a android webView\u7f13\u5b58\u7684\u6e05\u7406\uff1a /** * Clears the storage currently being used by both the Application Cache and * Web SQL Database APIs by the given origin. The origin is specified using * its string representation. */ public void deleteOrigin(String origin) { // Must be a no-op for backward compatibility: see the hidden constructor for reason. } /** * Clears all storage currently being used by the JavaScript storage APIs. * This includes the Application Cache, Web SQL Database and the HTML5 Web * Storage APIs. */ public void deleteAllData() { // Must be a no-op for backward compatibility: see the hidden constructor for reason. }","title":"\u7b2c\u516d\u79cd File System"},{"location":"webview_native/","text":"Native\u8c03\u7528JS\u67092\u79cd\u65b9\u6cd5\uff1a 1\u3001\u901a\u8fc7evaluateJavascript\u63a5\u53e3 mWebView.evaluateJavascript\uff08\"javascript:callJS()\", new ValueCallback<String>() { @Override public void onReceiveValue(String value) { //\u6b64\u5904\u4e3a js \u8fd4\u56de\u7684\u7ed3\u679c } }); 2\u3001\u901a\u8fc7loadUrl mWebView.loadUrl(\"javascript:callJS()\"); \u4e24\u79cd\u6bd4\u8f83\uff1a JS\u8c03\u7528Native\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a prompt/alert url\u62e6\u622a @JavascriptInterface\u6ce8\u89e3 local socket HTML message channels 1\u3001prompt/alert/log\u7b49 var result = prompt(\"js://webview?arg1=111&arg2=222\"); // WebChromeClient public boolean onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult result) { //\u6839\u636e\u534f\u8bae\u7684\u53c2\u6570\uff0c\u5224\u65ad\u662f\u5426\u662f\u6240\u9700\u8981\u7684url // \u4e00\u822c\u6839\u636escheme\uff08\u534f\u8bae\u683c\u5f0f\uff09 & authority\uff08\u534f\u8bae\u540d\uff09\u5224\u65ad //\u5047\u5b9a\u4f20\u5165\u8fdb\u6765\u7684 url = \"js://webview?arg1=111&arg2=222\" Uri uri = Uri.parse(url); if (uri.getScheme().equals(\"js\")) { if (uri.getAuthority().equals(\"webview\")) { result.confirm(\"success\"); return true; } } return false; } //console.log(\"js://webview?arg1=111&arg2=222\") @Override public boolean onConsoleMessage(ConsoleMessage consoleMessage) { String message = consoleMessage.message(); if(this.hijack(message)) { return true; } return super.onConsoleMessage(consoleMessage); } @Override public void onConsoleMessage(String message, int lineNumber, String sourceID) { if(this.hijack(message)) { return true; } super.onConsoleMessage(message, lineNumber, sourceID); } } 2\u3001url\u62e6\u622a function callback(result){} document.location = \"js://webview?arg1=111&arg2=222&cb=callback\"; public boolean shouldOverrideUrlLoading(final WebView webView, String url) { Uri uri = Uri.parse(url); if (uri.getScheme().equals(\"js\")) { if (uri.getAuthority().equals(\"webview\")) { final String cb = uri.getQueryParameter(\"cb\"); final String result = \"success\"; new Handler().post(new Runnable() { @Override public void run() { webView.loadUrl(String.format(\"javascript:%1$s(%2$s)\", cb, result)); } }); } return true; } return super.shouldOverrideUrlLoading(view, url); } 3\u3001JavascriptInterface\u6ce8\u89e3 Android 4.4 \u540e\u624d\u53ef\u4f7f\u7528\uff0c\u6709\u5b89\u5168\u9690\u60a3\u4e00\u822c\u90fd\u4e0d\u4f1a\u7528 //\u5b9a\u4e49\u4e00\u4e2ajs\u53ef\u8c03\u7684native\u63a5\u53e3\"android\" webview.addJavascriptInterface(new JavaScriptinterface(context, this),\"android\"); public class JavaScriptinterface { public JavaScriptinterface(Context context) { } //\u5e26\u6709\u6b64\u6ce8\u91ca\u7684\u6807\u8bb0\u53ef\u7528\u4e8eJavaScript\u4ee3\u7801 @JavascriptInterface public void callAndroid(String url) { Uri uri = Uri.parse(url); if (uri.getScheme().equals(\"js\")) { if (uri.getAuthority().equals(\"webview\")) { final String cb = uri.getQueryParameter(\"cb\"); final String result = \"success\"; webView.loadUrl(String.format(\"javascript:%1$s(%2$s)\", cb, result)); } } } } function callNative() { android.callAndroid('js://webview?arg1=111&arg2=222&cb=callback'); } 4\u3001socket Native\u542f\u52a8\u4e00\u4e2aServerSocket\uff0c\u5982\u7aef\u53e3\u53f7\u4e3a8888\uff0c\u4f7f\u7528socket\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u79cd\u6bd4\u8f83\u9ebb\u70e6\u3002 $.get('http://127.0.0.1:8888/getGeoLocation?callback=cbname') 5\u3001HTML message channels \u4ec5\u652f\u6301android 6.0\u4ee5\u4e0a\uff0c\u7528\u6765\u4ee3\u66ffJavascriptInterface\u673a\u5236\u3002\u652f\u6301\u53cc\u5411\u901a\u4fe1\u3002 WebMessagePort[] channel = mWebView.createWebMessageChannel(); WebMessagePort port = channel[0]; // Create handler for channel[0] to receive messages port.setWebMessageCallback(new WebMessagePort.WebMessageCallback() { @Override public void onMessage(WebMessagePort port, WebMessage message) { //message from js } }); // Send channel[1] to webWindow\uff0c\u5c06\u89e6\u53d1window.onmessage\u65b9\u6cd5 mWebView.postWebMessage(new WebMessage(\"\", new WebMessagePort[]{channel[1]}), Uri.EMPTY); //send message to js by port port.postMessage(new WebMessage(\"hello from native\")); //\u5b9a\u4e49window\u7684onmessage\u56de\u8c03\uff0c\u63a5\u6536mWebView.postWebMessage\u53d1\u8fc7\u6765\u7684\u4e8b\u4ef6 window.onmessage = function (event) { port = event.ports[0];//\u8bb0\u5f55\u4e0b\u4f20\u8fc7\u6765\u7684port\uff0c\u4e5f\u5373\u662f\u4e0a\u9762\u7684channel[1] //\u7ed9port\u5b9a\u4e49onmessage\u56de\u8c03\uff0c\u53ea\u6709\u5c31\u53ef\u4ee5\u901a\u8fc7port\u8fdb\u884c\u901a\u4fe1\u4e86 port.onmessage = function (e) { parse(e.data); } } \u8bf4\u4e00\u4e0b MessagePort \u548c MessageChannel \u662f\u5565\uff1f MessageChannel \u6784\u9020\u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u5bf9\u76f8\u4e92\u5173\u8054\u7684 MessagePort \u5bf9\u8c61(port1 \u548c port2)\uff0c\u600e\u4e48\u7406\u89e3 MessagePort \u5bf9\u8c61\u5462\uff1f\u53ef\u4ee5\u628a\u4e00\u4e2a MessagePort \u5bf9\u8c61\u5f53\u6210\u6d88\u606f\u4f20\u9012\u7684\u7aef\u53e3\uff0c\u800cMessageChannel\u8fde\u63a5\u7740\u8fd9\u4e24\u4e2a\u7aef\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u7aef\u53e3\u6765\u8fdb\u884c\u6d88\u606f\u7684\u4f20\u9012\uff0cport1 \u548c port2 \u53ef\u4ee5\u76f8\u4e92\u4f20\u9012\u5904\u7406\u6d88\u606f\uff0c\u60f3\u8c61\u4e00\u4e0b\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4e24\u4e2a\u4eba\u901a\u8fc7\u624b\u673a\u6253\u7535\u8bdd\uff0c\u4e00\u4e2a MessagePort \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u624b\u673a\uff0cMessageChannel\u5c31\u662f\u7535\u4fe1\u8fd0\u8425\u5546\u3002 \u5728web\u73af\u5883\u4e0b\uff0cJavaScript \u8de8\u57df\u7684\u95ee\u9898\uff0c\u4e00\u76f4\u662f\u4e00\u4e2a\u9887\u4e3a\u68d8\u624b\u7684\u95ee\u9898\uff0cHTML5 \u63d0\u4f9b\u4e86\u7f51\u9875\u6587\u6863\u4e4b\u95f4\u4e92\u76f8\u63a5\u6536\u4e0e\u53d1\u9001\u4fe1\u606f\u7684\u529f\u80fd\uff0c\u4f7f\u7528 postMessage \u548c onmessage \u4e3b\u8981\u5c31\u7528\u6765\u89e3\u51b3\u8de8\u6587\u6863\u901a\u4fe1\u7684\u95ee\u9898\u7684\uff08\u79f0\u4e4b\u4e3a cross-document messaging \uff09\u3002\u5f53\u7136\u4e0a\u9762\u6240\u8bf4\u7684MessageChannel\u4e5f\u662f\u4e00\u79cd\u901a\u4fe1\u65b9\u5f0f\uff0c\u79f0\u4e4b\u4e3a channel messaging \u3002\u4ed6\u4eec\u662fHTML5\u901a\u4fe1\u63a5\u53e3\u5957\u4ef6\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002 \u5728Native\u4fa7\uff0c\u901a\u8fc7WebView#postWebMessage\uff0c\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u4e2aport(\u5982port2)\u5c01\u88c5\u8fdbWebMessage\u5bf9\u8c61\u4e2d\uff0c\u5e76\u4f20\u5165JS\u73af\u5883\uff0cJS\u73af\u5883\u62ff\u5230port\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u548c\u53e6\u5916\u5269\u4f59\u7684\u90a3\u4e2aport(\u5982port1)\u8fdb\u884c\u901a\u4fe1\u4e86\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u7528\u5230\u4e86\u4e0a\u9762\u6240\u8ff0\u7684\u4e24\u79cd\u901a\u4fe1\u65b9\u5f0f\uff1a\u901a\u8fc7postMessage\u4f20\u9012port\uff0c\u7136\u540e\u901a\u8fc7port\u8fdb\u884c\u540e\u7eed\u7684\u901a\u4fe1\u3002 \u51e0\u79cd\u65b9\u6cd5\u7684\u6bd4\u8f83 \u7b2c\u4e09\u65b9\u5e93 \u57fa\u672c\u4e0a\u4ea4\u4e92\u7684\u57fa\u672c\u65b9\u5f0f\u5c31\u662f\u4ee5\u4e0a\u51e0\u79cd\uff0c\u4e0d\u8fc7\u6709\u4eba\u5c06\u901a\u4fe1\u673a\u5236\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u5f62\u6210\u4e00\u5957\u5b8c\u5584\u7684 WebviewJSBridge \u65b9\u6848\uff0c\u63d0\u4f9b\u4e86\u5ba2\u6237\u7aef\u8c03\u524d\u7aef\uff0c\u524d\u7aef\u8c03\u7528\u5ba2\u6237\u7aef\u7684\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\u3002 * lzyzsd/JsBridge \u9879\u76ee\uff0c\u6211\u4eec\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u5b83\u5728\u5e95\u5c42\u662f\u4f7f\u7528\u4e86 URL \u52ab\u6301\u7684\u65b9\u6cd5\u4e0e JS \u8fdb\u884c\u4ea4\u4e92\u3002 * \u5fae\u5e97\u4e5f\u5f00\u6e90\u4e86\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\u8fd0\u884c\u6846\u67b6 Hera \uff0c\u4f7f\u7528\u7684\u662faddJavascriptInterface\u65b9\u5f0f\u8fdb\u884c\u7684\u4ea4\u4e92\u3002 * web app\u9879\u76ee Cordova-Android \uff0c\u5219\u901a\u8fc7addJavascriptInterface \u548cJS Prompt\u8fd9\u4e24\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0JS\u5bf9\u4e8eNative API\u7684\u8c03\u7528\u3002 * DSBridge \u8de8\u5e73\u53f0\u89e3\u51b3\u65b9\u6848\uff0c\u552f\u4e00\u4e00\u4e2a\u652f\u6301\u540c\u6b65\u8c03\u7528\u7684javascript bridge","title":"\u548cNative\u901a\u4fe1"},{"location":"webview_native/#nativejs2","text":"","title":"Native\u8c03\u7528JS\u67092\u79cd\u65b9\u6cd5\uff1a"},{"location":"webview_native/#1evaluatejavascript","text":"mWebView.evaluateJavascript\uff08\"javascript:callJS()\", new ValueCallback<String>() { @Override public void onReceiveValue(String value) { //\u6b64\u5904\u4e3a js \u8fd4\u56de\u7684\u7ed3\u679c } });","title":"1\u3001\u901a\u8fc7evaluateJavascript\u63a5\u53e3"},{"location":"webview_native/#2loadurl","text":"mWebView.loadUrl(\"javascript:callJS()\"); \u4e24\u79cd\u6bd4\u8f83\uff1a","title":"2\u3001\u901a\u8fc7loadUrl"},{"location":"webview_native/#jsnative","text":"prompt/alert url\u62e6\u622a @JavascriptInterface\u6ce8\u89e3 local socket HTML message channels","title":"JS\u8c03\u7528Native\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a"},{"location":"webview_native/#1promptalertlog","text":"var result = prompt(\"js://webview?arg1=111&arg2=222\"); // WebChromeClient public boolean onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult result) { //\u6839\u636e\u534f\u8bae\u7684\u53c2\u6570\uff0c\u5224\u65ad\u662f\u5426\u662f\u6240\u9700\u8981\u7684url // \u4e00\u822c\u6839\u636escheme\uff08\u534f\u8bae\u683c\u5f0f\uff09 & authority\uff08\u534f\u8bae\u540d\uff09\u5224\u65ad //\u5047\u5b9a\u4f20\u5165\u8fdb\u6765\u7684 url = \"js://webview?arg1=111&arg2=222\" Uri uri = Uri.parse(url); if (uri.getScheme().equals(\"js\")) { if (uri.getAuthority().equals(\"webview\")) { result.confirm(\"success\"); return true; } } return false; } //console.log(\"js://webview?arg1=111&arg2=222\") @Override public boolean onConsoleMessage(ConsoleMessage consoleMessage) { String message = consoleMessage.message(); if(this.hijack(message)) { return true; } return super.onConsoleMessage(consoleMessage); } @Override public void onConsoleMessage(String message, int lineNumber, String sourceID) { if(this.hijack(message)) { return true; } super.onConsoleMessage(message, lineNumber, sourceID); } }","title":"1\u3001prompt/alert/log\u7b49"},{"location":"webview_native/#2url","text":"function callback(result){} document.location = \"js://webview?arg1=111&arg2=222&cb=callback\"; public boolean shouldOverrideUrlLoading(final WebView webView, String url) { Uri uri = Uri.parse(url); if (uri.getScheme().equals(\"js\")) { if (uri.getAuthority().equals(\"webview\")) { final String cb = uri.getQueryParameter(\"cb\"); final String result = \"success\"; new Handler().post(new Runnable() { @Override public void run() { webView.loadUrl(String.format(\"javascript:%1$s(%2$s)\", cb, result)); } }); } return true; } return super.shouldOverrideUrlLoading(view, url); }","title":"2\u3001url\u62e6\u622a"},{"location":"webview_native/#3javascriptinterface","text":"Android 4.4 \u540e\u624d\u53ef\u4f7f\u7528\uff0c\u6709\u5b89\u5168\u9690\u60a3\u4e00\u822c\u90fd\u4e0d\u4f1a\u7528 //\u5b9a\u4e49\u4e00\u4e2ajs\u53ef\u8c03\u7684native\u63a5\u53e3\"android\" webview.addJavascriptInterface(new JavaScriptinterface(context, this),\"android\"); public class JavaScriptinterface { public JavaScriptinterface(Context context) { } //\u5e26\u6709\u6b64\u6ce8\u91ca\u7684\u6807\u8bb0\u53ef\u7528\u4e8eJavaScript\u4ee3\u7801 @JavascriptInterface public void callAndroid(String url) { Uri uri = Uri.parse(url); if (uri.getScheme().equals(\"js\")) { if (uri.getAuthority().equals(\"webview\")) { final String cb = uri.getQueryParameter(\"cb\"); final String result = \"success\"; webView.loadUrl(String.format(\"javascript:%1$s(%2$s)\", cb, result)); } } } } function callNative() { android.callAndroid('js://webview?arg1=111&arg2=222&cb=callback'); }","title":"3\u3001JavascriptInterface\u6ce8\u89e3"},{"location":"webview_native/#4socket","text":"Native\u542f\u52a8\u4e00\u4e2aServerSocket\uff0c\u5982\u7aef\u53e3\u53f7\u4e3a8888\uff0c\u4f7f\u7528socket\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u79cd\u6bd4\u8f83\u9ebb\u70e6\u3002 $.get('http://127.0.0.1:8888/getGeoLocation?callback=cbname')","title":"4\u3001socket"},{"location":"webview_native/#5html-message-channels","text":"\u4ec5\u652f\u6301android 6.0\u4ee5\u4e0a\uff0c\u7528\u6765\u4ee3\u66ffJavascriptInterface\u673a\u5236\u3002\u652f\u6301\u53cc\u5411\u901a\u4fe1\u3002 WebMessagePort[] channel = mWebView.createWebMessageChannel(); WebMessagePort port = channel[0]; // Create handler for channel[0] to receive messages port.setWebMessageCallback(new WebMessagePort.WebMessageCallback() { @Override public void onMessage(WebMessagePort port, WebMessage message) { //message from js } }); // Send channel[1] to webWindow\uff0c\u5c06\u89e6\u53d1window.onmessage\u65b9\u6cd5 mWebView.postWebMessage(new WebMessage(\"\", new WebMessagePort[]{channel[1]}), Uri.EMPTY); //send message to js by port port.postMessage(new WebMessage(\"hello from native\")); //\u5b9a\u4e49window\u7684onmessage\u56de\u8c03\uff0c\u63a5\u6536mWebView.postWebMessage\u53d1\u8fc7\u6765\u7684\u4e8b\u4ef6 window.onmessage = function (event) { port = event.ports[0];//\u8bb0\u5f55\u4e0b\u4f20\u8fc7\u6765\u7684port\uff0c\u4e5f\u5373\u662f\u4e0a\u9762\u7684channel[1] //\u7ed9port\u5b9a\u4e49onmessage\u56de\u8c03\uff0c\u53ea\u6709\u5c31\u53ef\u4ee5\u901a\u8fc7port\u8fdb\u884c\u901a\u4fe1\u4e86 port.onmessage = function (e) { parse(e.data); } } \u8bf4\u4e00\u4e0b MessagePort \u548c MessageChannel \u662f\u5565\uff1f MessageChannel \u6784\u9020\u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u5bf9\u76f8\u4e92\u5173\u8054\u7684 MessagePort \u5bf9\u8c61(port1 \u548c port2)\uff0c\u600e\u4e48\u7406\u89e3 MessagePort \u5bf9\u8c61\u5462\uff1f\u53ef\u4ee5\u628a\u4e00\u4e2a MessagePort \u5bf9\u8c61\u5f53\u6210\u6d88\u606f\u4f20\u9012\u7684\u7aef\u53e3\uff0c\u800cMessageChannel\u8fde\u63a5\u7740\u8fd9\u4e24\u4e2a\u7aef\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u7aef\u53e3\u6765\u8fdb\u884c\u6d88\u606f\u7684\u4f20\u9012\uff0cport1 \u548c port2 \u53ef\u4ee5\u76f8\u4e92\u4f20\u9012\u5904\u7406\u6d88\u606f\uff0c\u60f3\u8c61\u4e00\u4e0b\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4e24\u4e2a\u4eba\u901a\u8fc7\u624b\u673a\u6253\u7535\u8bdd\uff0c\u4e00\u4e2a MessagePort \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u624b\u673a\uff0cMessageChannel\u5c31\u662f\u7535\u4fe1\u8fd0\u8425\u5546\u3002 \u5728web\u73af\u5883\u4e0b\uff0cJavaScript \u8de8\u57df\u7684\u95ee\u9898\uff0c\u4e00\u76f4\u662f\u4e00\u4e2a\u9887\u4e3a\u68d8\u624b\u7684\u95ee\u9898\uff0cHTML5 \u63d0\u4f9b\u4e86\u7f51\u9875\u6587\u6863\u4e4b\u95f4\u4e92\u76f8\u63a5\u6536\u4e0e\u53d1\u9001\u4fe1\u606f\u7684\u529f\u80fd\uff0c\u4f7f\u7528 postMessage \u548c onmessage \u4e3b\u8981\u5c31\u7528\u6765\u89e3\u51b3\u8de8\u6587\u6863\u901a\u4fe1\u7684\u95ee\u9898\u7684\uff08\u79f0\u4e4b\u4e3a cross-document messaging \uff09\u3002\u5f53\u7136\u4e0a\u9762\u6240\u8bf4\u7684MessageChannel\u4e5f\u662f\u4e00\u79cd\u901a\u4fe1\u65b9\u5f0f\uff0c\u79f0\u4e4b\u4e3a channel messaging \u3002\u4ed6\u4eec\u662fHTML5\u901a\u4fe1\u63a5\u53e3\u5957\u4ef6\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002 \u5728Native\u4fa7\uff0c\u901a\u8fc7WebView#postWebMessage\uff0c\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u4e2aport(\u5982port2)\u5c01\u88c5\u8fdbWebMessage\u5bf9\u8c61\u4e2d\uff0c\u5e76\u4f20\u5165JS\u73af\u5883\uff0cJS\u73af\u5883\u62ff\u5230port\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u548c\u53e6\u5916\u5269\u4f59\u7684\u90a3\u4e2aport(\u5982port1)\u8fdb\u884c\u901a\u4fe1\u4e86\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u7528\u5230\u4e86\u4e0a\u9762\u6240\u8ff0\u7684\u4e24\u79cd\u901a\u4fe1\u65b9\u5f0f\uff1a\u901a\u8fc7postMessage\u4f20\u9012port\uff0c\u7136\u540e\u901a\u8fc7port\u8fdb\u884c\u540e\u7eed\u7684\u901a\u4fe1\u3002","title":"5\u3001HTML message channels"},{"location":"webview_native/#_1","text":"","title":"\u51e0\u79cd\u65b9\u6cd5\u7684\u6bd4\u8f83"},{"location":"webview_native/#_2","text":"\u57fa\u672c\u4e0a\u4ea4\u4e92\u7684\u57fa\u672c\u65b9\u5f0f\u5c31\u662f\u4ee5\u4e0a\u51e0\u79cd\uff0c\u4e0d\u8fc7\u6709\u4eba\u5c06\u901a\u4fe1\u673a\u5236\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u5f62\u6210\u4e00\u5957\u5b8c\u5584\u7684 WebviewJSBridge \u65b9\u6848\uff0c\u63d0\u4f9b\u4e86\u5ba2\u6237\u7aef\u8c03\u524d\u7aef\uff0c\u524d\u7aef\u8c03\u7528\u5ba2\u6237\u7aef\u7684\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\u3002 * lzyzsd/JsBridge \u9879\u76ee\uff0c\u6211\u4eec\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u5b83\u5728\u5e95\u5c42\u662f\u4f7f\u7528\u4e86 URL \u52ab\u6301\u7684\u65b9\u6cd5\u4e0e JS \u8fdb\u884c\u4ea4\u4e92\u3002 * \u5fae\u5e97\u4e5f\u5f00\u6e90\u4e86\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\u8fd0\u884c\u6846\u67b6 Hera \uff0c\u4f7f\u7528\u7684\u662faddJavascriptInterface\u65b9\u5f0f\u8fdb\u884c\u7684\u4ea4\u4e92\u3002 * web app\u9879\u76ee Cordova-Android \uff0c\u5219\u901a\u8fc7addJavascriptInterface \u548cJS Prompt\u8fd9\u4e24\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0JS\u5bf9\u4e8eNative API\u7684\u8c03\u7528\u3002 * DSBridge \u8de8\u5e73\u53f0\u89e3\u51b3\u65b9\u6848\uff0c\u552f\u4e00\u4e00\u4e2a\u652f\u6301\u540c\u6b65\u8c03\u7528\u7684javascript bridge","title":"\u7b2c\u4e09\u65b9\u5e93"},{"location":"webview_optmize/","text":"webview\u5386\u53f2 \u4eceAndroid4.4\u7cfb\u7edf\u5f00\u59cb\uff0cChromium\u5185\u6838\u53d6\u4ee3\u4e86Webkit\u5185\u6838\u3002 \u4eceAndroid5.0\u7cfb\u7edf\u5f00\u59cb\uff0cWebView\u79fb\u690d\u6210\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684apk\uff0c\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u7cfb\u7edf\u800c\u72ec\u7acb\u5b58\u5728\u548c\u66f4\u65b0\u3002 \u4eceAndroid7.0 \u7cfb\u7edf\u5f00\u59cb\uff0c\u5982\u679c\u7528\u6237\u624b\u673a\u91cc\u5b89\u88c5\u4e86 Chrome \uff0c \u7cfb\u7edf\u4f18\u5148\u9009\u62e9 Chrome \u4e3a\u5e94\u7528\u63d0\u4f9b WebView \u6e32\u67d3\u3002 \u4eceAndroid8.0\u7cfb\u7edf\u5f00\u59cb\uff0c\u9ed8\u8ba4\u5f00\u542fWebView\u591a\u8fdb\u7a0b\u6a21\u5f0f\uff0c\u5373WebView\u8fd0\u884c\u5728\u72ec\u7acb\u7684\u6c99\u76d2\u8fdb\u7a0b\u4e2d\u3002 \u4f18\u5316 - \u5185\u6838\u63d0\u524d\u521d\u59cb\u5316 \u63d0\u524d\u521d\u59cb\u5316webview\u5185\u6838\uff0c\u53ef\u63d0\u5347\u7b2c\u4e00\u6b21webview\u6253\u5f00\u901f\u5ea6 public class App extends Application { private WebView mWebView ; @Override public void onCreate() { super.onCreate(); mWebView = new WebView(new MutableContextWrapper(this)); } } \u4f18\u5316 - \u590d\u7528webview \u5728\u4f7f\u7528webview\u6bd4\u8f83\u9891\u7e41\u7684\u573a\u666f\u4e0b, \u590d\u7528webview\u53ef\u63d0\u9ad8\u6027\u80fd\u548c\u8282\u4fed\u5185\u5b58\u3002 https://www.jianshu.com/p/fc7909e24178 public class WebPools { private final Queue<WebView> mWebViews; private Object lock = new Object(); private static WebPools mWebPools = null; private static final AtomicReference<WebPools> mAtomicReference = new AtomicReference<>(); private static final String TAG=WebPools.class.getSimpleName(); private WebPools() { mWebViews = new LinkedBlockingQueue<>(); } public static WebPools getInstance() { if (mWebPools != null) return mWebPools; if (mAtomicReference.compareAndSet(null, new WebPools())) return mWebPools=mAtomicReference.get(); } public void recycle(WebView webView) { recycleInternal(webView); } public WebView acquireWebView(Activity activity) { return acquireWebViewInternal(activity); } private WebView acquireWebViewInternal(Activity activity) { WebView mWebView = mWebViews.poll(); LogUtils.i(TAG,\"acquireWebViewInternal webview:\"+mWebView); if (mWebView == null) { synchronized (lock) { return new WebView(new MutableContextWrapper(activity)); } } else { MutableContextWrapper mMutableContextWrapper = (MutableContextWrapper) mWebView.getContext(); mMutableContextWrapper.setBaseContext(activity); return mWebView; } } private void recycleInternal(WebView webView) { try { if (webView.getContext() instanceof MutableContextWrapper) { MutableContextWrapper mContext = (MutableContextWrapper) webView.getContext(); mContext.setBaseContext(mContext.getApplicationContext()); LogUtils.i(TAG,\"enqueue webview:\"+webView); mWebViews.offer(webView); } if(webView.getContext() instanceof Activity){ // throw new RuntimeException(\"leaked\"); LogUtils.i(TAG,\"Abandon this webview \uff0c It will cause leak if enqueue !\"); } }catch (Exception e){ e.printStackTrace(); } } } \u6ce8\u610f\u5728 WebView \u8fdb\u5165 WebPools \u4e4b\u524d \uff0c \u9700\u8981\u91cd\u7f6e WebView \uff0c\u5305\u62ec\u6e05\u7a7a\u6ce8\u5165 WebView \u7684\u6ce8\u5165\u5bf9\u8c61 \uff0c \u5426\u5219\u975e\u5e38\u5bb9\u6613\u6cc4\u9732\u3002 \u4f18\u5316 - webview\u72ec\u7acb\u8fdb\u7a0b \u7cfb\u7edf\u9700\u8981\u65f6\u95f4 Fork \u51fa\u65b0\u8fdb\u7a0b\uff0c \u90a3\u4e48\u52a0\u8f7d\u53d8\u5f97\u66f4\u6162\u4e86\uff0c\u56e0\u4e3a\u8fdb\u7a0b\u7684\u521b\u5efa\u4e5f\u662f\u4e00\u4ef6\u8017\u65f6\u7684\u4e8b\u60c5\uff0c\u6240\u8c13\u7684\u9884\u52a0\u8f7d\u8fdb\u7a0b\uff0c \u5c31\u662f\u63d0\u524d\u628a\u8fdb\u7a0b\u521b\u5efa\u51fa\u6765\uff0c \u63d0\u5347\u52a0\u8f7d\u901f\u5ea6, \u53ef\u4ee5\u4f7f\u7528\u5e7f\u64adBroadcast\u63d0\u524d\u542f\u52a8 webview \u8fdb\u7a0b <activity android:name=\".WebActivity\" android:process=\":web\" /> \u4f18\u5316 - \u663e\u793a\u52a0\u8f7d\u8fdb\u5ea6\u6761 webView.setWebChromeClient(new WebChromeClient() { @Override public void onProgressChanged(WebView view, int newProgress) { if (newProgress == 100) { progressBar.setVisibility(View.GONE);//\u52a0\u8f7d\u5b8c\u7f51\u9875\u8fdb\u5ea6\u6761\u6d88\u5931 } else { progressBar.setVisibility(View.VISIBLE);//\u5f00\u59cb\u52a0\u8f7d\u7f51\u9875\u65f6\u663e\u793a\u8fdb\u5ea6\u6761 progressBar.setProgress(newProgress);//\u8bbe\u7f6e\u8fdb\u5ea6\u503c } super.onProgressChanged(view, newProgress); } }); \u4f18\u5316 - \u5f00\u542f\u786c\u4ef6\u52a0\u901f \u6027\u80fd\u63d0\u5347\u8fd8\u662f\u5f88\u660e\u663e\u7684\uff0c\u4f46\u662f\u4f1a\u8017\u8d39\u66f4\u5927\u7684\u5185\u5b58 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) { webView.setLayerType(View.LAYER_TYPE_HARDWARE, null); } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { webView.setLayerType(View.LAYER_TYPE_HARDWARE, null); } else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) { webView.setLayerType(View.LAYER_TYPE_SOFTWARE, null); } \u4f18\u5316 - \u5f00\u542f\u786c\u4ef6\u52a0\u901f \u62e6\u622a\u8bf7\u6c42\uff0c\u4f7f\u7528\u672c\u5730\u8d44\u6e90\u4ee3\u66ff\u8fdc\u7a0b\u9759\u6001\u8d44\u6e90\u3002 @Override public WebResourceResponse shouldInterceptRequest(WebView view, String url) { // \u66ff\u6362\u8d44\u6e90 WebResourceResponse response = new WebResourceResponse(\"image/png\", \"utf-8\", resInputStream); // \u53c2\u65701\uff1ahttp\u8bf7\u6c42\u91cc\u8be5\u56fe\u7247\u7684Content-Type,\u6b64\u5904\u56fe\u7247\u4e3aimage/png // \u53c2\u65702\uff1a\u7f16\u7801\u7c7b\u578b // \u53c2\u65703\uff1a\u5b58\u653e\u7740\u66ff\u6362\u8d44\u6e90\u7684\u8f93\u5165\u6d41\uff08\u4e0a\u9762\u521b\u5efa\u7684\u90a3\u4e2a\uff09 return response; } \u4f18\u5316 - webview\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879 //\u6fc0\u6d3bWebView\u4e3a\u6d3b\u8dc3\u72b6\u6001\uff0c\u80fd\u6b63\u5e38\u6267\u884c\u7f51\u9875\u7684\u54cd\u5e94 webView.onResume() \uff1b //\u5f53\u9875\u9762\u88ab\u5931\u53bb\u7126\u70b9\u88ab\u5207\u6362\u5230\u540e\u53f0\u4e0d\u53ef\u89c1\u72b6\u6001\uff0c\u9700\u8981\u6267\u884conPause //\u901a\u8fc7onPause\u52a8\u4f5c\u901a\u77e5\u5185\u6838\u6682\u505c\u6240\u6709\u7684\u52a8\u4f5c\uff0c\u6bd4\u5982DOM\u7684\u89e3\u6790\u3001plugin\u7684\u6267\u884c\u3001JavaScript\u6267\u884c\u3002 webView.onPause()\uff1b //\u5f53\u5e94\u7528\u7a0b\u5e8f(\u5b58\u5728webview)\u88ab\u5207\u6362\u5230\u540e\u53f0\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4ec5\u4ec5\u9488\u5bf9\u5f53\u524d\u7684webview\u800c\u662f\u5168\u5c40\u7684\u5168\u5e94\u7528\u7a0b\u5e8f\u7684webview //\u5b83\u4f1a\u6682\u505c\u6240\u6709webview\u7684layout\uff0cparsing\uff0cjavascripttimer\u3002\u964d\u4f4eCPU\u529f\u8017\u3002 webView.pauseTimers() //\u6062\u590dpauseTimers\u72b6\u6001 webView.resumeTimers()\uff1b //\u9500\u6bc1Webview //\u5728\u5173\u95ed\u4e86Activity\u65f6\uff0c\u5982\u679cWebview\u7684\u97f3\u4e50\u6216\u89c6\u9891\uff0c\u8fd8\u5728\u64ad\u653e\uff0c\u5c31\u5fc5\u987b\u9500\u6bc1Webview rootLayout.removeView(webView); webView.destroy(); //\u58f0\u660eWebSettings\u5b50\u7c7b WebSettings webSettings = webView.getSettings(); //\u5982\u679c\u8bbf\u95ee\u7684\u9875\u9762\u4e2d\u8981\u4e0eJavascript\u4ea4\u4e92\uff0c\u5219webview\u5fc5\u987b\u8bbe\u7f6e\u652f\u6301Javascript webSettings.setJavaScriptEnabled(true); //\u652f\u6301\u63d2\u4ef6 webSettings.setPluginsEnabled(true); //\u8bbe\u7f6e\u81ea\u9002\u5e94\u5c4f\u5e55\uff0c\u4e24\u8005\u5408\u7528 webSettings.setUseWideViewPort(true); //\u5c06\u56fe\u7247\u8c03\u6574\u5230\u9002\u5408webview\u7684\u5927\u5c0f webSettings.setLoadWithOverviewMode(true); // \u7f29\u653e\u81f3\u5c4f\u5e55\u7684\u5927\u5c0f //\u7f29\u653e\u64cd\u4f5c webSettings.setSupportZoom(true); //\u652f\u6301\u7f29\u653e\uff0c\u9ed8\u8ba4\u4e3atrue\u3002\u662f\u4e0b\u9762\u90a3\u4e2a\u7684\u524d\u63d0\u3002 webSettings.setBuiltInZoomControls(true); //\u8bbe\u7f6e\u5185\u7f6e\u7684\u7f29\u653e\u63a7\u4ef6\u3002\u82e5\u4e3afalse\uff0c\u5219\u8be5WebView\u4e0d\u53ef\u7f29\u653e webSettings.setDisplayZoomControls(false); //\u9690\u85cf\u539f\u751f\u7684\u7f29\u653e\u63a7\u4ef6 //\u5176\u4ed6\u7ec6\u8282\u64cd\u4f5c webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK); //\u5173\u95edwebview\u4e2d\u7f13\u5b58 webSettings.setAllowFileAccess(true); //\u8bbe\u7f6e\u53ef\u4ee5\u8bbf\u95ee\u6587\u4ef6 webSettings.setJavaScriptCanOpenWindowsAutomatically(true); //\u652f\u6301\u901a\u8fc7JS\u6253\u5f00\u65b0\u7a97\u53e3 webSettings.setLoadsImagesAutomatically(true); //\u652f\u6301\u81ea\u52a8\u52a0\u8f7d\u56fe\u7247 webSettings.setDefaultTextEncodingName(\"utf-8\");//\u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f //SSL\u8bc1\u4e66\u9519\u8bef\uff0c\u4e0d\u53ef\u5ffd\u7565\uff0c\u9700\u8981\u7531\u7528\u6237\u786e\u8ba4 @Override public void onReceivedSslError(final WebView view, final SslErrorHandler handler, final SslError error) { new AlertDialog.Builder(context) .setTitle(\"\u5b89\u5168\u8b66\u544a\") .setMessage(\"\u8be5\u7f51\u7ad9\u7684\u5b89\u5168\u8bc1\u4e66\u6709\u95ee\u9898\") .setPositiveButton(\"\u7ee7\u7eed\", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { handler.proceed(); } }) .setNegativeButton(\"\u53d6\u6d88\", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { handler.cancel(); } }).create().show(); } \u4e00\u4e2a\u7b2c\u4e09\u65b9webview\u5c01\u88c5\u5e93\uff1a https://github.com/Justson/AgentWeb","title":"\u4f18\u5316"},{"location":"webview_optmize/#webview","text":"\u4eceAndroid4.4\u7cfb\u7edf\u5f00\u59cb\uff0cChromium\u5185\u6838\u53d6\u4ee3\u4e86Webkit\u5185\u6838\u3002 \u4eceAndroid5.0\u7cfb\u7edf\u5f00\u59cb\uff0cWebView\u79fb\u690d\u6210\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684apk\uff0c\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u7cfb\u7edf\u800c\u72ec\u7acb\u5b58\u5728\u548c\u66f4\u65b0\u3002 \u4eceAndroid7.0 \u7cfb\u7edf\u5f00\u59cb\uff0c\u5982\u679c\u7528\u6237\u624b\u673a\u91cc\u5b89\u88c5\u4e86 Chrome \uff0c \u7cfb\u7edf\u4f18\u5148\u9009\u62e9 Chrome \u4e3a\u5e94\u7528\u63d0\u4f9b WebView \u6e32\u67d3\u3002 \u4eceAndroid8.0\u7cfb\u7edf\u5f00\u59cb\uff0c\u9ed8\u8ba4\u5f00\u542fWebView\u591a\u8fdb\u7a0b\u6a21\u5f0f\uff0c\u5373WebView\u8fd0\u884c\u5728\u72ec\u7acb\u7684\u6c99\u76d2\u8fdb\u7a0b\u4e2d\u3002","title":"webview\u5386\u53f2"},{"location":"webview_optmize/#-","text":"\u63d0\u524d\u521d\u59cb\u5316webview\u5185\u6838\uff0c\u53ef\u63d0\u5347\u7b2c\u4e00\u6b21webview\u6253\u5f00\u901f\u5ea6 public class App extends Application { private WebView mWebView ; @Override public void onCreate() { super.onCreate(); mWebView = new WebView(new MutableContextWrapper(this)); } }","title":"\u4f18\u5316 - \u5185\u6838\u63d0\u524d\u521d\u59cb\u5316"},{"location":"webview_optmize/#-webview","text":"\u5728\u4f7f\u7528webview\u6bd4\u8f83\u9891\u7e41\u7684\u573a\u666f\u4e0b, \u590d\u7528webview\u53ef\u63d0\u9ad8\u6027\u80fd\u548c\u8282\u4fed\u5185\u5b58\u3002 https://www.jianshu.com/p/fc7909e24178 public class WebPools { private final Queue<WebView> mWebViews; private Object lock = new Object(); private static WebPools mWebPools = null; private static final AtomicReference<WebPools> mAtomicReference = new AtomicReference<>(); private static final String TAG=WebPools.class.getSimpleName(); private WebPools() { mWebViews = new LinkedBlockingQueue<>(); } public static WebPools getInstance() { if (mWebPools != null) return mWebPools; if (mAtomicReference.compareAndSet(null, new WebPools())) return mWebPools=mAtomicReference.get(); } public void recycle(WebView webView) { recycleInternal(webView); } public WebView acquireWebView(Activity activity) { return acquireWebViewInternal(activity); } private WebView acquireWebViewInternal(Activity activity) { WebView mWebView = mWebViews.poll(); LogUtils.i(TAG,\"acquireWebViewInternal webview:\"+mWebView); if (mWebView == null) { synchronized (lock) { return new WebView(new MutableContextWrapper(activity)); } } else { MutableContextWrapper mMutableContextWrapper = (MutableContextWrapper) mWebView.getContext(); mMutableContextWrapper.setBaseContext(activity); return mWebView; } } private void recycleInternal(WebView webView) { try { if (webView.getContext() instanceof MutableContextWrapper) { MutableContextWrapper mContext = (MutableContextWrapper) webView.getContext(); mContext.setBaseContext(mContext.getApplicationContext()); LogUtils.i(TAG,\"enqueue webview:\"+webView); mWebViews.offer(webView); } if(webView.getContext() instanceof Activity){ // throw new RuntimeException(\"leaked\"); LogUtils.i(TAG,\"Abandon this webview \uff0c It will cause leak if enqueue !\"); } }catch (Exception e){ e.printStackTrace(); } } } \u6ce8\u610f\u5728 WebView \u8fdb\u5165 WebPools \u4e4b\u524d \uff0c \u9700\u8981\u91cd\u7f6e WebView \uff0c\u5305\u62ec\u6e05\u7a7a\u6ce8\u5165 WebView \u7684\u6ce8\u5165\u5bf9\u8c61 \uff0c \u5426\u5219\u975e\u5e38\u5bb9\u6613\u6cc4\u9732\u3002","title":"\u4f18\u5316 - \u590d\u7528webview"},{"location":"webview_optmize/#-webview_1","text":"\u7cfb\u7edf\u9700\u8981\u65f6\u95f4 Fork \u51fa\u65b0\u8fdb\u7a0b\uff0c \u90a3\u4e48\u52a0\u8f7d\u53d8\u5f97\u66f4\u6162\u4e86\uff0c\u56e0\u4e3a\u8fdb\u7a0b\u7684\u521b\u5efa\u4e5f\u662f\u4e00\u4ef6\u8017\u65f6\u7684\u4e8b\u60c5\uff0c\u6240\u8c13\u7684\u9884\u52a0\u8f7d\u8fdb\u7a0b\uff0c \u5c31\u662f\u63d0\u524d\u628a\u8fdb\u7a0b\u521b\u5efa\u51fa\u6765\uff0c \u63d0\u5347\u52a0\u8f7d\u901f\u5ea6, \u53ef\u4ee5\u4f7f\u7528\u5e7f\u64adBroadcast\u63d0\u524d\u542f\u52a8 webview \u8fdb\u7a0b <activity android:name=\".WebActivity\" android:process=\":web\" />","title":"\u4f18\u5316 - webview\u72ec\u7acb\u8fdb\u7a0b"},{"location":"webview_optmize/#-_1","text":"webView.setWebChromeClient(new WebChromeClient() { @Override public void onProgressChanged(WebView view, int newProgress) { if (newProgress == 100) { progressBar.setVisibility(View.GONE);//\u52a0\u8f7d\u5b8c\u7f51\u9875\u8fdb\u5ea6\u6761\u6d88\u5931 } else { progressBar.setVisibility(View.VISIBLE);//\u5f00\u59cb\u52a0\u8f7d\u7f51\u9875\u65f6\u663e\u793a\u8fdb\u5ea6\u6761 progressBar.setProgress(newProgress);//\u8bbe\u7f6e\u8fdb\u5ea6\u503c } super.onProgressChanged(view, newProgress); } });","title":"\u4f18\u5316 - \u663e\u793a\u52a0\u8f7d\u8fdb\u5ea6\u6761"},{"location":"webview_optmize/#-_2","text":"\u6027\u80fd\u63d0\u5347\u8fd8\u662f\u5f88\u660e\u663e\u7684\uff0c\u4f46\u662f\u4f1a\u8017\u8d39\u66f4\u5927\u7684\u5185\u5b58 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) { webView.setLayerType(View.LAYER_TYPE_HARDWARE, null); } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { webView.setLayerType(View.LAYER_TYPE_HARDWARE, null); } else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) { webView.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }","title":"\u4f18\u5316 - \u5f00\u542f\u786c\u4ef6\u52a0\u901f"},{"location":"webview_optmize/#-_3","text":"\u62e6\u622a\u8bf7\u6c42\uff0c\u4f7f\u7528\u672c\u5730\u8d44\u6e90\u4ee3\u66ff\u8fdc\u7a0b\u9759\u6001\u8d44\u6e90\u3002 @Override public WebResourceResponse shouldInterceptRequest(WebView view, String url) { // \u66ff\u6362\u8d44\u6e90 WebResourceResponse response = new WebResourceResponse(\"image/png\", \"utf-8\", resInputStream); // \u53c2\u65701\uff1ahttp\u8bf7\u6c42\u91cc\u8be5\u56fe\u7247\u7684Content-Type,\u6b64\u5904\u56fe\u7247\u4e3aimage/png // \u53c2\u65702\uff1a\u7f16\u7801\u7c7b\u578b // \u53c2\u65703\uff1a\u5b58\u653e\u7740\u66ff\u6362\u8d44\u6e90\u7684\u8f93\u5165\u6d41\uff08\u4e0a\u9762\u521b\u5efa\u7684\u90a3\u4e2a\uff09 return response; }","title":"\u4f18\u5316 - \u5f00\u542f\u786c\u4ef6\u52a0\u901f"},{"location":"webview_optmize/#-webview_2","text":"//\u6fc0\u6d3bWebView\u4e3a\u6d3b\u8dc3\u72b6\u6001\uff0c\u80fd\u6b63\u5e38\u6267\u884c\u7f51\u9875\u7684\u54cd\u5e94 webView.onResume() \uff1b //\u5f53\u9875\u9762\u88ab\u5931\u53bb\u7126\u70b9\u88ab\u5207\u6362\u5230\u540e\u53f0\u4e0d\u53ef\u89c1\u72b6\u6001\uff0c\u9700\u8981\u6267\u884conPause //\u901a\u8fc7onPause\u52a8\u4f5c\u901a\u77e5\u5185\u6838\u6682\u505c\u6240\u6709\u7684\u52a8\u4f5c\uff0c\u6bd4\u5982DOM\u7684\u89e3\u6790\u3001plugin\u7684\u6267\u884c\u3001JavaScript\u6267\u884c\u3002 webView.onPause()\uff1b //\u5f53\u5e94\u7528\u7a0b\u5e8f(\u5b58\u5728webview)\u88ab\u5207\u6362\u5230\u540e\u53f0\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4ec5\u4ec5\u9488\u5bf9\u5f53\u524d\u7684webview\u800c\u662f\u5168\u5c40\u7684\u5168\u5e94\u7528\u7a0b\u5e8f\u7684webview //\u5b83\u4f1a\u6682\u505c\u6240\u6709webview\u7684layout\uff0cparsing\uff0cjavascripttimer\u3002\u964d\u4f4eCPU\u529f\u8017\u3002 webView.pauseTimers() //\u6062\u590dpauseTimers\u72b6\u6001 webView.resumeTimers()\uff1b //\u9500\u6bc1Webview //\u5728\u5173\u95ed\u4e86Activity\u65f6\uff0c\u5982\u679cWebview\u7684\u97f3\u4e50\u6216\u89c6\u9891\uff0c\u8fd8\u5728\u64ad\u653e\uff0c\u5c31\u5fc5\u987b\u9500\u6bc1Webview rootLayout.removeView(webView); webView.destroy(); //\u58f0\u660eWebSettings\u5b50\u7c7b WebSettings webSettings = webView.getSettings(); //\u5982\u679c\u8bbf\u95ee\u7684\u9875\u9762\u4e2d\u8981\u4e0eJavascript\u4ea4\u4e92\uff0c\u5219webview\u5fc5\u987b\u8bbe\u7f6e\u652f\u6301Javascript webSettings.setJavaScriptEnabled(true); //\u652f\u6301\u63d2\u4ef6 webSettings.setPluginsEnabled(true); //\u8bbe\u7f6e\u81ea\u9002\u5e94\u5c4f\u5e55\uff0c\u4e24\u8005\u5408\u7528 webSettings.setUseWideViewPort(true); //\u5c06\u56fe\u7247\u8c03\u6574\u5230\u9002\u5408webview\u7684\u5927\u5c0f webSettings.setLoadWithOverviewMode(true); // \u7f29\u653e\u81f3\u5c4f\u5e55\u7684\u5927\u5c0f //\u7f29\u653e\u64cd\u4f5c webSettings.setSupportZoom(true); //\u652f\u6301\u7f29\u653e\uff0c\u9ed8\u8ba4\u4e3atrue\u3002\u662f\u4e0b\u9762\u90a3\u4e2a\u7684\u524d\u63d0\u3002 webSettings.setBuiltInZoomControls(true); //\u8bbe\u7f6e\u5185\u7f6e\u7684\u7f29\u653e\u63a7\u4ef6\u3002\u82e5\u4e3afalse\uff0c\u5219\u8be5WebView\u4e0d\u53ef\u7f29\u653e webSettings.setDisplayZoomControls(false); //\u9690\u85cf\u539f\u751f\u7684\u7f29\u653e\u63a7\u4ef6 //\u5176\u4ed6\u7ec6\u8282\u64cd\u4f5c webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK); //\u5173\u95edwebview\u4e2d\u7f13\u5b58 webSettings.setAllowFileAccess(true); //\u8bbe\u7f6e\u53ef\u4ee5\u8bbf\u95ee\u6587\u4ef6 webSettings.setJavaScriptCanOpenWindowsAutomatically(true); //\u652f\u6301\u901a\u8fc7JS\u6253\u5f00\u65b0\u7a97\u53e3 webSettings.setLoadsImagesAutomatically(true); //\u652f\u6301\u81ea\u52a8\u52a0\u8f7d\u56fe\u7247 webSettings.setDefaultTextEncodingName(\"utf-8\");//\u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f //SSL\u8bc1\u4e66\u9519\u8bef\uff0c\u4e0d\u53ef\u5ffd\u7565\uff0c\u9700\u8981\u7531\u7528\u6237\u786e\u8ba4 @Override public void onReceivedSslError(final WebView view, final SslErrorHandler handler, final SslError error) { new AlertDialog.Builder(context) .setTitle(\"\u5b89\u5168\u8b66\u544a\") .setMessage(\"\u8be5\u7f51\u7ad9\u7684\u5b89\u5168\u8bc1\u4e66\u6709\u95ee\u9898\") .setPositiveButton(\"\u7ee7\u7eed\", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { handler.proceed(); } }) .setNegativeButton(\"\u53d6\u6d88\", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface dialog, int which) { handler.cancel(); } }).create().show(); } \u4e00\u4e2a\u7b2c\u4e09\u65b9webview\u5c01\u88c5\u5e93\uff1a https://github.com/Justson/AgentWeb","title":"\u4f18\u5316 - webview\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879"},{"location":"xpose/","text":"","title":"Xpose"},{"location":"code/bubble_view/","text":"\u5fae\u4fe1\u804a\u5929\u6c14\u6ce1-\u56fe\u7247 public class XORView extends View { Paint paint; Path path; BitmapShader brush; public XORView(Context context, AttributeSet attrs) { super(context, attrs); paint = new Paint(); path = new Path(); BitmapDrawable drawable = (BitmapDrawable)getResources().getDrawable(R.drawable.ic_texture); brush = new BitmapShader(drawable.getBitmap(), Shader.TileMode.REPEAT, Shader.TileMode.REPEAT); } @Override protected void onDraw(Canvas canvas) { super.onDraw(canvas); canvas.save(); paint.setStyle(Paint.Style.FILL); //paint.setColor(Color.GREEN); paint.setShader(brush); canvas.drawPath(path, paint); paint.reset(); paint.setStyle(Paint.Style.STROKE); canvas.drawPath(path, paint); canvas.restore(); } @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { super.onMeasure(widthMeasureSpec, heightMeasureSpec); path.reset(); int w = getWidth(); int h = getHeight(); path.moveTo(0,10); path.arcTo(new RectF(0,0,20,20),180,90); path.lineTo(w - 30,0); path.arcTo(new RectF(w - 40, 0, w - 20, 20), -90, 90); path.lineTo(w-20,h/2 -10); path.lineTo(w,h/2); path.lineTo(w-20,h/2 +10); path.lineTo(w-20,h - 10); path.arcTo(new RectF(w-40, h-20,w-20,h-1),0,90); path.lineTo(10,h-1); path.arcTo(new RectF(0,h-20,20,h-1),90,90); path.close(); } } \u6548\u679c\u56fe\uff1a","title":"\u5fae\u4fe1\u6c14\u6ce1"}]}